#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****



#########################################
# Project : Tango - Data Load -> Storage Cube ST_P&L_YTD
# Created by : MRE
# Created at : 26/08/2011
# Modified by : AEV
# Modified at : 13/01/2012
# Modify reason : Si partenaire non connu positionnement sur "Other_VE_Entities"
# Modified by : BTA
# Modified at : 25/10/2016
# Modify reason : Modification to input clearer instructions to end users about the rejects
#########################################

zCube = 'ST_PL_YTD';
CubeSetLogChanges(zCube, 0);
zCube_Reject = 'ZZ_PROCESS_REJECT_BY_SOURCE';
zCube_Process = 'ZZ_PROCESS_DETAIL_BY_SOURCE';
zCube_Ind = 'TC_IND_OPE_US_JDE' ;
zDim_Ind = 'z_indicator_OPE_US_JDE' ;
nb_lign = 0;
nb_ligne = 0;
nb_reject = 0;
nb_load = 0;
zSource = 'US_JDE';
zProcess = 'DL_ST_PL_YTD_Actual_OPE_US_JDE';
zDateLoadingStart = TIMST(now,'\Y-\M-\D');
zDateTimeLoadingStart = TIMST(now,'\Y-\M-\D \h:\i:\s');
pPeriod=CellGetS( 'z_Admin_Param' , 'MONTH_ACTUAL' , 'STR_VAR1');
#Source_File = CellGetS( 'z_Admin_Param' , 'REP_DATA' , 'STR_VAR1') | '\Data_OPE_Actual_' | pPeriod |'_' zSource | '.csv';
Source_File = CellGetS( 'z_Admin_Param' , 'REP_DATA' , 'STR_VAR1') | '\Data_OPE_Actual_' |  zsource | '.csv';
DataSourceNameForServer = Source_File;

IF (FileExists (Source_File) =0);
     CubeSetLogChanges(zCube, 1);
     ItemReject(  DataSourceNameForServer | ' is not find' );
     ProcessQuit;
ENDIF;

####################
#-- Test date
####################
IF( pPeriod @= 'previous_month' );
    pPeriod = ATTRS( 'Period' , TIMST( NOW ,'\Y.\m' ) , 'M-1' ) ;
ENDIF;

#################################################################################
#                                                               Clear Reject Cube
#################################################################################

######
#Call process DB_zz_Date_Time_loading in order to add the new day in the dimension zz_Date_Time_loading
ExecuteProcess('DB_zz_Date_Time_loading');
######

P_NAME_RAZ = zCube_Reject | '_RAZ';
ViewDestroy( zCube_Reject , P_NAME_RAZ );
ViewCreate( zCube_Reject , P_NAME_RAZ );

#-- Create subset in zz_Date_Time_loading and }Processes
IF( SubsetExists( 'zz_Date_Time_loading' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'zz_Date_Time_loading' , P_NAME_RAZ );
ELSE;
    SubsetCreate( 'zz_Date_Time_loading' , P_NAME_RAZ );
ENDIF;

IF( SubsetExists( '}Processes' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( '}Processes' , P_NAME_RAZ);
ELSE;
    SubsetCreate( '}Processes' , P_NAME_RAZ );
ENDIF;

SubsetElementInsert( 'zz_Date_Time_loading' , P_NAME_RAZ ,zDateLoadingStart , 1 );
SubsetElementInsert( '}Processes' , P_NAME_RAZ , zProcess , 1 );

ViewSubsetAssign( zCube_Reject , P_NAME_RAZ , 'zz_Date_Time_loading' , P_NAME_RAZ);
ViewSubsetAssign( zCube_Reject , P_NAME_RAZ , '}Processes', P_NAME_RAZ);

#-- Clear cube
ViewZeroOut( zCube_Reject , P_NAME_RAZ );

#-- Delete subset
ViewDestroy( zCube_Reject , P_NAME_RAZ );
SubsetDestroy( 'zz_Date_Time_loading' , P_NAME_RAZ );
SubsetDestroy( '}Processes' , P_NAME_RAZ );


#################################################################################
#                                                               Clear CUBE
#################################################################################
P_NAME_RAZ = zCube | '_RAZ';
ViewDestroy( zCube , P_NAME_RAZ );
ViewCreate( zCube , P_NAME_RAZ );

#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Phase' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Phase' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Phase' , P_NAME_RAZ , 'ACT' , 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Phase' , P_NAME_RAZ );

#-- Create subset in Legal_Organization
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetCreate( 'Legal_Organization' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Legal_Organization' )+1 );
   ElemE = DIMNM( 'Legal_Organization' , i );
      IF ( ATTRS ( 'Legal_Organization' , ElemE,'Source_entity' ) @= zSource ) ;
           SubsetElementInsert( 'Legal_Organization' , P_NAME_RAZ , ElemE , 1 );
      ENDIF;
    i=i+1;
END;
SubsetElementInsert( 'Legal_Organization' , P_NAME_RAZ , 'US_JDE_Reject' , 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Legal_Organization' , P_NAME_RAZ );

#-- Create subset in Indicator
SubsetDestroy( 'Indicator' , P_NAME_RAZ );
SubsetCreate( 'Indicator' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Indicator' ) + 1 );
   ElemI = DIMNM( 'Indicator' , i );
      IF ( ELISANC( 'Indicator' , 'Ind_op' , ElemI ) > 0 );
           SubsetElementInsert( 'Indicator' , P_NAME_RAZ , ElemI , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Indicator' , P_NAME_RAZ );

#-- Create subset in Period_YTD
IF( SubsetExists( 'Period_YTD' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'Period_YTD' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Period_YTD' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Period_YTD' , P_NAME_RAZ , pPeriod | '_YTD', 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Period_YTD' , P_NAME_RAZ );

# Mantis 2089-2090

#-- Clear cube
#ViewZeroOut( zCube , P_NAME_RAZ );

#-- Delete subset
#ViewDestroy( zCube , P_NAME_RAZ );
#SubsetDestroy( 'Phase' , P_NAME_RAZ );
#SubsetDestroy( 'Indicator' , P_NAME_RAZ );
#SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
#SubsetDestroy( 'Period_YTD' , P_NAME_RAZ );


#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

VS_VAR_ERR_TECH_MESSAGE = '';
VS_VAR_ERR_FUNCT_MESSAGE = '';
VS_VAR_ERR_INSTRUCTION_MESSAGE = ''; 


#-- Period
IF( LONG( vMonth ) = 1 ) ;
    Month_Ret = '0' | vMonth;
ELSE;
    Month_Ret = vMonth;
ENDIF;
Period = '20' | vYear | '.' | Month_Ret;

# Mantis 2089-2090
# if the Period is different of the period in the file this record is reject
nb_ligne = nb_ligne + 1;

IF (nb_ligne = 1);
   IF( '20' | vYear | '.' | Month_Ret @<> pPeriod );
      zerror_message='Rejected Data : The period in parameter is different of the period in the file at lign ' |  numbertostring(nb_lign) ;
      CellPutS(zerror_message , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l1', 'Error_Message');

	#-- BTA 25/10/2016 - Clearer instruction for end users
	VS_VAR_ERR_TECH_MESSAGE = 'Rejected Data : The period in parameter is different of the period in the file at line ' | numbertostring(nb_lign) ;
	VS_VAR_ERR_FUNCT_MESSAGE = 'The opened period is different from the period in the file. The line ' | numbertostring(nb_lign) | ' is not loaded in Tango.' ; 
	VS_VAR_ERR_INSTRUCTION_MESSAGE = 'Please update data file and reload data' ;

	CellPutS( VS_VAR_ERR_TECH_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l1', 'Technical_Message');	
	CellPutS( VS_VAR_ERR_FUNCT_MESSAGE  , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l1', 'Functional_Message');
	CellPutS( VS_VAR_ERR_INSTRUCTION_MESSAGE  , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l1', 'Instruction_to_Resolve_the_issue');

      ProcessQuit;
   ELSE;
      ExecuteProcess( 'z_Purge_DL_ST', 'Cube_Name' , zCube ,'Cube_View' , P_NAME_RAZ  );
   ENDIF;
ENDIF;

Indicator = '';
Legal_Organization = '';
Management_Organization = '';
Activity= '';

#-- Phase => Actual only
IF( Phase @= 'AH' );
    Phase = 'ACT';
ELSE;
    ItemSkip;
ENDIF;

#-- Currency 
Currency = 'LCL';

#-- Amount
#Amount = (-1) * Amount;

#-- Indicator
AccountLoc = Object;

#-- Partner
#-- DE account 8512 = intercompany flow with Vector entity SU556
#-- JDE account 6790  = intercompany flow with Vector entity SU1070
IF( vPartner @= '' );
    Partner = 'SU9999';
ELSEIF (Dimix( 'Partner' , vPartner ) = 0 );
    Partner='Other_VE_entities';
ELSEIF( vPartner @= '8512' );
    Partner = 'SU556' ;
ELSEIF( vPartner @= '6790' );
    Partner = 'SU1070' ;
ELSE;
    Partner = vPartner ;
ENDIF;

zrecord = Entity | ';' | CostCenter| ';' | Object | ';' | Sub_Account | ';' | Account | ';' | vGAAP | ';' |
vPartner | ';' | Period | ';' | numbertostring(Amount);

#################################################################################
#                                                                             REJECT SECTION
#################################################################################
nb_lign=nb_lign+1;


# if the Period is empty, this record is rejected
IF( Period @='' );
   nb_reject=nb_reject+1;
   zerror_message='Rejected Data : The period is empty in the file at lign ' |  numbertostring(nb_lign) ;
   CellPuts(zrecord,  zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring( nb_reject) , 'Record');
   CellPutS(zerror_message , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring( nb_reject), 'Error_Message');

	#-- BTA 25/10/2016 - Clearer instruction for end users
	VS_VAR_ERR_TECH_MESSAGE = 'Rejected Data : The period is empty in the file at line ' | numbertostring(nb_lign) ;
	VS_VAR_ERR_FUNCT_MESSAGE = 'The period is empty in the file. The line ' |  numbertostring(nb_lign) | '  is not loaded in Tango. ' ; 
	VS_VAR_ERR_INSTRUCTION_MESSAGE = 'Please update data file and reload data' ;

	CellPutS( VS_VAR_ERR_TECH_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Technical_Message');
	CellPutS( VS_VAR_ERR_FUNCT_MESSAGE, zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Functional_Message');
	CellPutS( VS_VAR_ERR_INSTRUCTION_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Instruction_to_Resolve_the_issue');

   ItemSkip;
ENDIF;

#-- if the period is not exists in Period dimension, this record is rejected
IF( Dimix('Period', Period) = 0 );
   nb_reject=nb_reject+1;
   zerror_message= 'Rejected Data : ' | Period | ' does not exist in dimension Period at line ' |  numbertostring(nb_lign) ;
   CellPuts(zrecord,  zCube_Reject , pSource, zProcess , zDateLoadingStart ,  'l' | numbertostring(nb_reject),'Record');
   CellPutS(zerror_message , zCube_Reject, pSource, zProcess  , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Error_Message');

	#-- BTA 25/10/2016 - Clearer instruction for end users
	VS_VAR_ERR_TECH_MESSAGE = 'Rejected Data : ' | Period | ' does not exist in dimension Period at line ' | numbertostring(nb_lign) ;
	VS_VAR_ERR_FUNCT_MESSAGE = 'The period ' | Period | ' does not exist. The line ' |  numbertostring(nb_lign) | '  is not loaded in Tango. ' ; 
	VS_VAR_ERR_INSTRUCTION_MESSAGE = 'Please update data file and reload data' ;

	CellPutS( VS_VAR_ERR_TECH_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Technical_Message');
	CellPutS( VS_VAR_ERR_FUNCT_MESSAGE, zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Functional_Message');
	CellPutS( VS_VAR_ERR_INSTRUCTION_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Instruction_to_Resolve_the_issue');

   ItemSkip;
ENDIF;

# if the Period is different of the period in the file this record is rejected
IF( Period @<> pPeriod );
   nb_reject=nb_reject+1;
   zerror_message='Rejected Data : The period in parameter is different of the period in the file at lign ' |  numbertostring(nb_lign) ;
   CellPuts(zrecord,  zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring( nb_reject) , 'Record');
   CellPutS(zerror_message , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring( nb_reject), 'Error_Message');

	#-- BTA 25/10/2016 - Clearer instruction for end users
	VS_VAR_ERR_TECH_MESSAGE = 'Rejected Data : The period in parameter is different of the period in the file at line ' | numbertostring(nb_lign) ;
	VS_VAR_ERR_FUNCT_MESSAGE = 'The opened period is different from the period in the file. The line ' | numbertostring(nb_lign) | ' is not loaded in Tango.' ; 
	VS_VAR_ERR_INSTRUCTION_MESSAGE = 'Please update data file and reload data' ;

	CellPutS( VS_VAR_ERR_TECH_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Technical_Message');
	CellPutS( VS_VAR_ERR_FUNCT_MESSAGE, zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Functional_Message');
	CellPutS( VS_VAR_ERR_INSTRUCTION_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Instruction_to_Resolve_the_issue');

   ItemSkip;
ENDIF;

# if the contract does not exist in z_Management_Organization dimension, this record is rejected in the element US_JDE_Reject of the dimension Manag
#ement_Organization
IF( Dimix( 'z_Management_Organization' , CostCenter ) = 0 );
   nb_reject=nb_reject+1;
   zerror_message= 'Rejected Data is laid in the element US_JDE_Reject of the dimension Management_Organization and in the element Reject_Data of the 
dime
nsion Activity : ' | CostCenter | '  does not exist in dimension z_Management_Organization at lign ' |  numbertostring(nb_lign) ;
   CellPuts(zrecord,  zCube_Reject , pSource, zProcess , zDateLoadingStart ,  'l' | numbertostring(nb_reject),'Record');
   CellPutS(zerror_message , zCube_Reject, pSource, zProcess  , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Error_Message');
   Management_Organization = 'US_JDE_Reject';

	#-- BTA 25/10/2016 - Clearer instruction for end users
	VS_VAR_ERR_TECH_MESSAGE = 'Rejected Data : ' | CostCenter | ' does not exist in dimension z_Management_Organization at line ' |  numbertostring(nb_lign) | '. Rejected data is laid in the 
element ' | Management_Organization | ' of the dimension Management Organization and in the element Reject Data of the dimension Activity'; 
	VS_VAR_ERR_FUNCT_MESSAGE = 'The management unit ' | CostCenter | ' does not exist in Tango. The line ' | numbertostring(nb_lign) | ' is not correctly loaded in Tango.' ; 
	VS_VAR_ERR_INSTRUCTION_MESSAGE = 'Please update the file Mgmt_Orga_Mapping_' | pSource | ' and reload data' ;

	CellPutS( VS_VAR_ERR_TECH_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Technical_Message');
	CellPutS( VS_VAR_ERR_FUNCT_MESSAGE, zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Functional_Message');
	CellPutS( VS_VAR_ERR_INSTRUCTION_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Instruction_to_Resolve_the_issue');


ENDIF;

# if the Entity does not exist in Legal_Organization dimension, this record is rejected in the element US_JDE_Reject of the dimension Legal_
#Organization
IF( Dimix( 'Legal_Organization' , Entity ) = 0 );
   nb_reject=nb_reject+1;
   zerror_message= 'Rejected Data is laid in the element US_JDE_Reject of the dimension Legal_Organization and in the element Reject_Data of the dimen
sion
 Activity : ' | Entity | '  does not exists in dimension Legal_Organization at lign ' |  numbertostring(nb_lign) ;
   CellPuts(zrecord,  zCube_Reject , pSource, zProcess , zDateLoadingStart ,  'l' | numbertostring(nb_reject),'Record');
   CellPutS(zerror_message , zCube_Reject, pSource, zProcess  , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Error_Message');
   Legal_Organization = 'US_JDE_Reject';

	#-- BTA 25/10/2016 - Clearer instruction for end users
	VS_VAR_ERR_TECH_MESSAGE = 'Rejected Data : ' | Entity | ' does not exist in dimension Legal Organization at line ' |  numbertostring(nb_lign) | '. Rejected data is laid in the 
element ' | Legal_Organization | ' of the dimension Legal Organization and in the element Reject Data of the dimension Activity'; 
	VS_VAR_ERR_FUNCT_MESSAGE = 'The entity ' | Entity | ' does not exist in Tango. The line ' | numbertostring(nb_lign) | ' is not correctly loaded in Tango.' ; 
	VS_VAR_ERR_INSTRUCTION_MESSAGE = 'Please update data file and reload data' ;

	CellPutS( VS_VAR_ERR_TECH_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Technical_Message');
	CellPutS( VS_VAR_ERR_FUNCT_MESSAGE, zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Functional_Message');
	CellPutS( VS_VAR_ERR_INSTRUCTION_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Instruction_to_Resolve_the_issue');

ENDIF;

# if the Tango Contract in TC_Contract cube does not exist in the dimension Management_Organization, this record is rejected in the element US_JDE_Rej
#ect 
#of the dimension Management_Organization

IF (Legal_Organization @<> 'US_JDE_Reject' &  Management_Organization @<> 'US_JDE_Reject');
   IF( Dimix ( 'Management_Organization' ,CellGetS( 'TC_CONTRACT' , CostCenter , Entity, 'STR_VAR1' )) = 0 );
      nb_reject=nb_reject+1;
      zerror_message= 'Rejected Data is laid in the element US_JDE_Reject of the dimension Management_Organization and in the element Reject_Data of t
he d
imension Activity : The Tango Contract find in the cube TC_Contract by the mapping between ' | CostCenter | ' and ' | Entity | ' at line ' |  numberto
string(nb_lign) ;
      CellPuts(zrecord,  zCube_Reject , pSource, zProcess , zDateLoadingStart ,  'l' | numbertostring(nb_reject),'Record');
      CellPutS(zerror_message , zCube_Reject, pSource, zProcess  , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Error_Message');
      Management_Organization = 'US_JDE_Reject';

	#-- BTA 25/10/2016 - Clearer instruction for end users
	VS_VAR_ERR_TECH_MESSAGE = 'Rejected Data : ' | CellGetS( 'TC_CONTRACT' , CostCenter , Entity, 'STR_VAR1' ) | ' does not exist in dimension Management Organization at line ' |  numbertostring(nb_lign) | '. Rejected data is laid in the 
element ' | Management_Organization | ' of the dimension Management Organization and in the element Reject Data of the dimension Activity'; 
	VS_VAR_ERR_FUNCT_MESSAGE = 'The management unit ' | CellGetS( 'TC_CONTRACT' , CostCenter , Entity, 'STR_VAR1' ) | ' does not exist in Tango. The line ' | numbertostring(nb_lign) | ' is not correctly loaded in Tango.' ; 
	VS_VAR_ERR_INSTRUCTION_MESSAGE = 'Please create the new management unit in Tango, ask controller to validate it, update the file Mgmt_Orga_Mapping_' | pSource | '.csv and reload data' ;

	CellPutS( VS_VAR_ERR_TECH_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Technical_Message');
	CellPutS( VS_VAR_ERR_FUNCT_MESSAGE, zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Functional_Message');
	CellPutS( VS_VAR_ERR_INSTRUCTION_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Instruction_to_Resolve_the_issue');

   ENDIF;
ELSE;
      Management_Organization = 'US_JDE_Reject';
ENDIF;



#-- if the account is not exists in z_indicator_PL_US_JDE dimension, this record is reject in the element Reject_Data of the dimension Indicator
IF( Dimix( zDim_Ind , AccountLoc) = 0 );
   nb_reject=nb_reject+1;
   zerror_message= 'Rejected Data : ' | AccountLoc | '  does not exists in dimension ' | zDim_Ind | ' at line ' |  numbertostring(nb_lign) ;
   CellPuts(zrecord,  zCube_Reject , pSource, zProcess , zDateLoadingStart ,  'l' | numbertostring(nb_reject),'Record');
   CellPutS(zerror_message , zCube_Reject, pSource, zProcess  , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Error_Message');

	#-- BTA 25/10/2016 - Clearer instruction for end users
	VS_VAR_ERR_TECH_MESSAGE = 'Rejected Data : ' | AccountLoc | ' does not exist in dimension z_Indicator_OPE_' | pSource | ' at line ' |  numbertostring(nb_lign) ; 
	VS_VAR_ERR_FUNCT_MESSAGE = 'The indicator ' | AccountLoc | ' does not exist in Tango. The line ' | numbertostring(nb_lign) | ' is not loaded in Tango.' ; 
	VS_VAR_ERR_INSTRUCTION_MESSAGE = 'Please update the file Mapping_OPE' | pSource | '.csv, or contact your financial controller to know the indicator to use and reload data' ;

	CellPutS( VS_VAR_ERR_TECH_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Technical_Message');
	CellPutS( VS_VAR_ERR_FUNCT_MESSAGE, zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Functional_Message');
	CellPutS( VS_VAR_ERR_INSTRUCTION_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Instruction_to_Resolve_the_issue');

   ItemSkip;
ENDIF;


#-- if there isn't an Integration Rate for the Legal Organization, the Phase and the Period in the cube ST_Entity_Rates, the record is reject
IF( Legal_Organization @<> 'US_JDE_Reject' );

   IF( CellGetN( 'ST_Entity_Rates' , Entity , Period , Phase , 'NUM_VAR1' ) = 0  
& CellGetN( 'ST_Entity_Rates' , Entity , Period , Phase , 'NUM_VAR2' ) = 0);
      nb_reject=nb_reject+1;
      zerror_message= ' Rejected Data :There is not an Integration Rate in the cube ST_Entity_Rates with the mapping between ' | 
Entity | ', ' | Phase | ' and ' | vYear | '.' | vMonth | ' at line ' |  numbertostring(nb_lign) ;
      CellPuts(zrecord,  zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring( nb_reject) , 'Record');
      CellPutS(zerror_message , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring( nb_reject), 'Error_Message');

	#-- BTA 25/10/2016 - Clearer instruction for end users
	VS_VAR_ERR_TECH_MESSAGE = 'Rejected Data : There is no Integration Rate for the mapping between ' |  Entity | ' , ' | Period | ' and ' |  Phase | ' at line ' |  numbertostring(nb_lign) ; 
	VS_VAR_ERR_FUNCT_MESSAGE = 'There is no Integration Rate for the mapping between ' |  Entity | ' , ' | Period | ' and ' |  Phase | '. The line '  |  numbertostring(nb_lign) | ' is not loaded in Tango.' ;
	VS_VAR_ERR_INSTRUCTION_MESSAGE = 'If this entity is consolidated, please contact Tango support.' ;

	CellPutS( VS_VAR_ERR_TECH_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Technical_Message');
	CellPutS( VS_VAR_ERR_FUNCT_MESSAGE, zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Functional_Message');
	CellPutS( VS_VAR_ERR_INSTRUCTION_MESSAGE , zCube_Reject , pSource, zProcess , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Instruction_to_Resolve_the_issue');

      ItemSkip;
    ENDIF;
ENDIF;



#####################################################################################"
#                                                                             INPUT SECTION
#################################################################################
#-- Input dans le cube ST_P&L_YTD
#-- Activity
IF (Management_Organization @<> 'US_JDE_Reject' & Legal_Organization @<> 'US_JDE_Reject');
   Activity = CellGetS( 'TC_CONTRACT' , CostCenter , Entity , 'STR_VAR2' );
ELSE;
    Activity = 'Reject_Data';
ENDIF;


#-- Gaap
IF( vGAAP @= '' );
     GAAP = 'Local_Gaap_Mgmt_tool';
ELSE;
     GAAP = vGAAP;
ENDIF;

#-- Legal_Organization
IF (Legal_Organization @<> 'US_JDE_Reject');
   Legal_Organization = Entity ;
ENDIF;


#-- Management_Organization
IF (Management_Organization @<> 'US_JDE_Reject' & Legal_Organization @<> 'US_JDE_Reject');
   Management_Organization = CellGetS( 'TC_CONTRACT' , CostCenter , Entity , 'STR_VAR1' );
ENDIF;

Indicator = CellGetS( zCube_Ind , AccountLoc , 'STR_VAR1' ) ;
## A voir pour le cost center pour un compte


#-- Period
Period = Period | '_YTD';

Cumul = CellGetN ( zCube , Activity , Currency , Gaap , Legal_Organization , Management_Organization , Period , Phase , Indicator );
CellPutN( Amount + Cumul , zCube , Activity , Currency , Gaap , Legal_Organization , Management_Organization , Period , Phase , Indicator );


IF (Activity @<> 'Reject_Data' & Management_Organization @<> 'US_JDE_Reject' & Legal_Organization @<> 'US_JDE_Reject' );
   nb_load=nb_load+1;
ENDIF;
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


# Mantis 2089-2090

#-- Delete subset
SubsetDestroy( 'Phase' , P_NAME_RAZ );
SubsetDestroy( 'Indicator' , P_NAME_RAZ );
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetDestroy( 'Period_YTD' , P_NAME_RAZ );


CubeSetLogChanges(zCube, 1);
#-- Copy the file data in historical directory
ExecuteProcess( 'z_Tools_Data_Transfert' , 
'zFile' , 'Data_OPE_Actual_' |  zsource , 'zAnnee' , SUBST( pPeriod , 1 , 4 ) , 'zMois' , SUBST( pPeriod , 6 , 2 )  );


pCountry=CellGetS( 'z_Admin_Param' , 'COUNTRY' , 'STR_VAR1');
zDateTimeLoadingEnd = TIMST(now,'\Y-\M-\D \h:\i:\s');
#################################################################################
#                                                                             PROCESS with PERIOD and INSTANCE
#################################################################################
#if (pCountry @<>'CM');
#zCube_Process_PP = 'ZZ_PROCESS_Detail_Instance';
#pChore='Task4_CO_Import_Vector_Parameter_Export_CM_Data_' | pcountry;
#pSource=zSource;

#CellPutS(zDateTimeLoadingStart , zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,'Start_date');
#CellPutS(zDateTimeLoadingEnd , zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,'End_date');
#CellPutS(numbertostring(nb_lign) , zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,'Nb_Input_records');
#CellPutS(numbertostring(nb_reject) , zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,'Nb_reject_records');
#CellPutS(numbertostring(nb_load) ,  zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry ,psource, 'Nb_load_records');
#IF(nb_lign = nb_load);
#    CellPutS('OK' ,zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,  'Status');
#else;
#    CellPutS('KO' ,zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,  'Status');
#endif;
#endif;
#################################################################################
#                                                                             PROCESS with PERIOD and PHASE
#################################################################################
zCube_Process_PP = 'ZZ_PROCESS_DETAIL_PERIOD_PHASE';

CellPutS(zDateTimeLoadingStart , zCube_Process_PP, zProcess ,Period, Phase,zDateLoadingStart , 'Start_date');
CellPutS(zDateTimeLoadingEnd , zCube_Process_PP, zProcess ,Period , Phase,zDateLoadingStart , 'End_date');
CellPutS(numbertostring(nb_lign) , zCube_Process_PP, zProcess ,Period , Phase,zDateLoadingStart , 'Nb_Input_records');
CellPutS(numbertostring(nb_reject) , zCube_Process_PP, zProcess ,Period , Phase,zDateLoadingStart , 'Nb_reject_records');
CellPutS(numbertostring(nb_load) ,  zCube_Process_PP, zProcess ,Period , Phase,zDateLoadingStart , 'Nb_load_records');
IF(nb_lign = nb_load);
    CellPutS('OK' ,zCube_Process_PP, zProcess ,Period , Phase,zDateLoadingStart ,   'Status');
else;
    CellPutS('KO' ,  zCube_Process_PP, zProcess ,Period , Phase,zDateLoadingStart , 'Status');
endif;

#################################################################################
#                                                                             DETAIL PROCESS SECTION
#################################################################################

CellPutS(zDateTimeLoadingStart , zCube_Process, pSource, zProcess ,zDateLoadingStart , 'Start_date');
CellPutS(zDateTimeLoadingEnd , zCube_Process, pSource, zProcess ,zDateLoadingStart  , 'End_date');
CellPutS(numbertostring(nb_lign) , zCube_Process, pSource, zProcess ,zDateLoadingStart  , 'Nb_Input_records');
CellPutS(numbertostring(nb_reject) , zCube_Process, pSource, zProcess ,zDateLoadingStart  , 'Nb_reject_records');
CellPutS(numbertostring(nb_load) , zCube_Process, pSource, zProcess ,zDateLoadingStart , 'Nb_load_records');

IF(nb_lign = nb_load);
    CellPutS('OK' , zCube_Process, pSource, zProcess ,zDateLoadingStart , 'Status');
else;
    CellPutS('KO' , zCube_Process, pSource, zProcess ,zDateLoadingStart , 'Status');
    ItemReject( ' Process exited with errors at ' | TIME |  ' on ' | TODAY | '=> Check cubes : zz_Process_Detail_By_Source and  zz_Process_Reject_By_Source' );
endif;

#################################################################################
#                                                                             END PROCESS
#################################################################################
#endregion