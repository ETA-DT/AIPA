#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****


#######################################################
# -- On charge les données du cube RP_VECTOR vers le cube RP_PL
# -- Datatilt - MTA - 13/08/2021
# -- 
# -- 
# -- 

#######################################################

#######################################################
# -- Déclarations des variables

vCube = 'RP_Vector' ;
vViewName    = GetProcessName();
vSubsetName = GetProcessName();

vViewNamePurge = GetProcessName() | 'Purge'; 
vSubsetNamePurge = GetProcessName() | 'Purge'; 

vCubeCible = 'RP_PL'; 

# -- Get la phase dans le cube Z_admin_Param

IF(pPhase@='BUDGET_FC');
	ParamPhase = CellGetS( 'z_Admin_Param' , 'TYPE_PHASE' , 'STR_VAR1');
ENDIF;

# -- Gestion des phases 

IF(pPeriod @= 'default' & pPhase @= 'ACTUAL');
	pPeriod= CellGetS( 'z_Admin_Param' , 'MONTH_ACTUAL' , 'STR_VAR1');
	pPhase = 'ACT'; 

ELSEIF(pPeriod @<> 'default' & pPhase @= 'ACTUAL');
	pPeriod= pPeriod;
	pPhase = 'ACT'; 

ELSEIF(pPeriod @= 'default' & pPhase @= 'BUDGET_FC');

	IF (ParamPhase @= 'Budget'); 
		pPeriod= CellGetS( 'z_Admin_Param' , 'YEAR_BUDGET_FORECAST' , 'STR_VAR1');
		pPhase = 'BUDG_VC';

	ELSEIF (ParamPhase @= 'Forecast1'); 
		pPeriod= CellGetS( 'z_Admin_Param' , 'YEAR_BUDGET_FORECAST' , 'STR_VAR1');
		pPhase = 'FC_1_VC';

	ELSEIF (ParamPhase @= 'Forecast2'); 
		pPeriod= CellGetS( 'z_Admin_Param' , 'YEAR_BUDGET_FORECAST' , 'STR_VAR1');
		pPhase = 'FC_2_VC';
	ENDIF; 


ELSEIF(pPeriod @<> 'default' &  pPhase @= 'BUDGET_FC');
	
	IF (ParamPhase @= 'Budget'); 
		pPeriod= pPeriod;
		pPhase = 'BUDG_VC';

	ELSEIF (ParamPhase @= 'Forecast1'); 
		pPeriod= pPeriod;
		pPhase = 'FC_1_VC';

	ELSEIF (ParamPhase @= 'Forecast2'); 
		pPeriod=  pPeriod;
		pPhase = 'FC_2_VC';
	ENDIF; 

ENDIF; 




#######################################################
# -- Création de la vue source 

ViewDestroy (vCube , vViewName );
ViewCreate (vCube , vViewName );

vDim= 'Audit_ID'; 
SubsetDestroy ( vDim, vSubsetName ); 
SubsetCreate ( vDim, vSubsetName); 
SubsetElementInsert ( vDim, vSubsetName, 'Local_vector', 1); 
SubsetElementInsert ( vDim, vSubsetName, 'IFRS_vector', 1); 
SubsetElementInsert ( vDim, vSubsetName, 'Elim_vector', 1); 
SubsetElementInsert ( vDim, vSubsetName, 'Other_Audit_ID', 1); 
SubsetElementInsert ( vDim, vSubsetName, 'Opt_for', 1); 
SubsetElementInsert ( vDim, vSubsetName, 'Dis_act', 1); 
ViewSubsetAssign ( vCube , vViewName,  vDim, vSubsetName );  

vDim= 'Currency'; 
SubsetDestroy ( vDim, vSubsetName ); 
SubsetCreate ( vDim, vSubsetName); 
SubsetElementInsert ( vDim, vSubsetName, 'EUR', 1);
SubsetElementInsert ( vDim, vSubsetName, 'LCL', 1); 
#SubsetElementInsert ( vDim, vSubsetName, 'NA', 1); 
ViewSubsetAssign ( vCube , vViewName,  vDim, vSubsetName ); 

vDim= 'Legal_Organization'; 
SubsetDestroy ( vDim, vSubsetName ); 
SubsetCreate ( vDim, vSubsetName); 
i=1; 
imax = Dimsiz (vDim); 
while (i<=imax); 
	vCurrentElement = DimNm (vDim, i); 
	IF (ELLEV (vDim, vCurrentElement)=0); 
		SubsetElementInsert ( vDim, vSubsetName, vCurrentElement, 1);
	ENDIF; 
	i=i+1; 
end; 
ViewSubsetAssign ( vCube , vViewName,  vDim, vSubsetName ); 

vDim= 'Period'; 
SubsetDestroy ( vDim, vSubsetName ); 
SubsetCreate ( vDim, vSubsetName); 
i=1; 
imax =DimSiz (vDim); 
While (i<=imax); 
	vCurrentElement = DimNm (vDim, i); 
	IF (ELLEV (vDim, vCurrentElement)= 0 & ELISANC (vDim, pPeriod, vCurrentElement)=1);
		SubsetElementInsert ( vDim, vSubsetName, vCurrentElement, 1); 
	ELSEIF (ELLEV (vDim, pPeriod)= 0);
		SubsetElementInsert ( vDim, vSubsetName, pPeriod, 1); 
	ENDIF; 
	i=i+1; 
END; 
ViewSubsetAssign ( vCube , vViewName,  vDim, vSubsetName ); 

vDim= 'Phase'; 
SubsetDestroy ( vDim, vSubsetName ); 
SubsetCreate ( vDim, vSubsetName); 
SubsetElementInsert ( vDim, vSubsetName, pPhase, 1); 
ViewSubsetAssign ( vCube , vViewName,  vDim, vSubsetName );  

vDim= 'Indicator_Vector'; 
SubsetDestroy ( vDim, vSubsetName ); 
SubsetCreate ( vDim, vSubsetName); 
SubsetElementInsert ( vDim, vSubsetName, 'PL2225', 1);
ViewSubsetAssign ( vCube , vViewName,  vDim, vSubsetName );

# -- 3 conditons
ViewExtractSkipZeroesSet( vCube , vViewName , 1 );  
ViewExtractSkipRuleValuesSet( vCube , vViewName , 0 ); 
ViewExtractSkipCalcsSet( vCube , vViewName , 0 ); 

#######################################################
# -- Définition de la source de données 

DataSourceType = 'View' ;
DatasourceCubeview = vViewName ;


#######################################################
# -- Création de la vue de purge
ViewDestroy (vCubeCible , vViewNamePurge );
ViewCreate (vCubeCible , vViewNamePurge );

vDim= 'Currency'; 
SubsetDestroy ( vDim, vSubsetNamePurge ); 
SubsetCreate ( vDim, vSubsetNamePurge); 
SubsetElementInsert ( vDim, vSubsetNamePurge, 'EUR', 1);
SubsetElementInsert ( vDim, vSubsetNamePurge, 'LCL', 1); 
#SubsetElementInsert ( vDim, vSubsetNamePurge, 'NA', 1); 
ViewSubsetAssign ( vCubeCible , vViewNamePurge,  vDim, vSubsetNamePurge );  

vDim= 'Gaap'; 
SubsetDestroy ( vDim, vSubsetNamePurge ); 
SubsetCreate ( vDim, vSubsetNamePurge); 
SubsetElementInsert ( vDim, vSubsetNamePurge, 'Delta_vector_input', 1);
SubsetElementInsert ( vDim, vSubsetNamePurge, 'Delta_vector_IFRS_restatements', 1); 
SubsetElementInsert ( vDim, vSubsetNamePurge, 'Delta_vector_eliminations', 1); 
SubsetElementInsert ( vDim, vSubsetNamePurge, 'Delta_vector_oth_conso_adj', 1); 
SubsetElementInsert ( vDim, vSubsetNamePurge, 'Delta_opt_for', 1); 
SubsetElementInsert ( vDim, vSubsetNamePurge, 'Delta_discontinued_act', 1); 

ViewSubsetAssign ( vCubeCible , vViewNamePurge,  vDim, vSubsetNamePurge );  

vDim= 'Legal_Organization'; 
SubsetDestroy ( vDim, vSubsetNamePurge ); 
SubsetCreate ( vDim, vSubsetNamePurge); 
i=1; 
imax = Dimsiz (vDim); 
while (i<=imax); 
	vCurrentElement = DimNm (vDim, i); 
	IF (ELLEV (vDim, vCurrentElement)=0); 
		SubsetElementInsert ( vDim, vSubsetNamePurge, vCurrentElement, 1);
	ENDIF; 
	i=i+1; 
END; 
ViewSubsetAssign ( vCubeCible , vViewNamePurge,  vDim, vSubsetNamePurge );  

vDim= 'Management_Organization'; 
SubsetDestroy ( vDim, vSubsetNamePurge ); 
SubsetCreate ( vDim, vSubsetNamePurge); 
SubsetElementInsert ( vDim, vSubsetNamePurge, 'NA', 1); 
ViewSubsetAssign ( vCubeCible , vViewNamePurge,  vDim, vSubsetNamePurge ); 

vDim= 'Period'; 
SubsetDestroy ( vDim, vSubsetNamePurge ); 
SubsetCreate ( vDim, vSubsetNamePurge); 
i=1; 
imax =DimSiz (vDim); 
While (i<=imax); 
	vCurrentElement = DimNm (vDim, i); 
	IF (ELLEV (vDim, vCurrentElement)= 0 & ELISANC (vDim, pPeriod, vCurrentElement)=1); 
		SubsetElementInsert ( vDim, vSubsetNamePurge, vCurrentElement, 1);
	ELSEIF (ELLEV (vDim, pPeriod)= 0);
		SubsetElementInsert ( vDim, vSubsetNamePurge, pPeriod, 1); 
	ENDIF; 
	i=i+1; 
END; 
ViewSubsetAssign ( vCubeCible , vViewNamePurge,  vDim, vSubsetNamePurge );  

vDim= 'Phase'; 
SubsetDestroy ( vDim, vSubsetNamePurge ); 
SubsetCreate ( vDim, vSubsetNamePurge); 
SubsetElementInsert ( vDim, vSubsetNamePurge, pPhase, 1); 
ViewSubsetAssign ( vCubeCible , vViewNamePurge,  vDim, vSubsetNamePurge );  

vDim= 'Indicator'; 
SubsetDestroy ( vDim, vSubsetNamePurge ); 
SubsetCreate ( vDim, vSubsetNamePurge); 
SubsetElementInsert ( vDim, vSubsetNamePurge, 'PL2225_FCF', 1); 
ViewSubsetAssign ( vCubeCible , vViewNamePurge,  vDim, vSubsetNamePurge );  


#######################################################
ViewZeroOut (vCubeCible, vViewNamePurge);
#######################################################
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****



#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****


# -- On ne prend pas les Attributes vides
Activity_entity = ATTRS ('Legal_Organization', Legal_Organization, 'Activity_entity');
IF (Activity_entity @= ''); 
	Itemskip; 
ENDIF; 


Activity_entity_attributes = CellGetS ('}ElementAttributes_Legal_Organization', Legal_Organization, 'Activity_entity'); 
Indicator =' PL2225_FCF'; 


IF  (Audit_ID @= 'Local_vector' & Activity_entity @= Activity_entity_attributes); 

	Gaap = 'Delta_vector_input'; 
	
	CellPutN (Valeur, vCubeCible, Activity_entity, Currency, Gaap, Integration_Rate, Legal_Organization, 'NA', Period, pPhase, Indicator); 
	
ELSEIf (Audit_ID @= 'IFRS_vector' & Activity_entity @= Activity_entity_attributes); 

	Gaap= 'Delta_vector_IFRS_restatements';
	CellPutN (Valeur, vCubeCible, Activity_entity, Currency, Gaap, Integration_Rate, Legal_Organization, 'NA', Period, pPhase, Indicator); 

ELSEIf (Audit_ID @= 'Elim_vector' & Activity_entity @= Activity_entity_attributes); 

	Gaap= 'Delta_vector_eliminations'; 
	CellPutN (Valeur, vCubeCible, Activity_entity, Currency, Gaap, Integration_Rate, Legal_Organization, 'NA', Period, pPhase, Indicator); 

ELSEIf (Audit_ID @= 'Other_Audit_ID' & Activity_entity @= Activity_entity_attributes); 

	Gaap= 'Delta_vector_oth_conso_adj'; 
	CellPutN (Valeur, vCubeCible, Activity_entity, Currency, Gaap, Integration_Rate, Legal_Organization, 'NA', Period, pPhase, Indicator); 

ELSEIf (Audit_ID @= 'Opt_for' & Activity_entity @= Activity_entity_attributes); 

	Gaap= 'Delta_opt_for';
	CellPutN (Valeur, vCubeCible, Activity_entity, Currency, Gaap, Integration_Rate, Legal_Organization, 'NA', Period, pPhase, Indicator); 

ELSEIf (Audit_ID @= 'Dis_act' & Activity_entity @= Activity_entity_attributes); 

	Gaap= 'Delta_discontinued_act'; 
	CellPutN (Valeur, vCubeCible, Activity_entity, Currency, Gaap, Integration_Rate, Legal_Organization, 'NA', Period, pPhase, Indicator); 

ENDIF; 

#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

#######################################################
# -- Destruction de la vue source 
# -- Destruction de la vue et des sous ensembles 

ViewDestroy(vCube , vViewName );
t= 1;
WHILE( TABDIM(vCube , t ) @<>'');
	SubsetDestroy( TABDIM( vCube , t ) , vViewName );
	t = t + 1;
END;

#######################################################
# -- Destruction de la vue de purge
# -- Destruction de la vue et des sous ensembles

ViewDestroy( vCubeCible , vViewNamePurge  );
m = 1;
WHILE( TABDIM(vCubeCible , m ) @<>'');
	SubsetDestroy( TABDIM( vCubeCible , m ) , vViewNamePurge );
	m = m + 1;
END;
#endregion