#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

########################################################################################
# Projet : Tango - Alimentation des Flags permettant de tracer les utilisateurs Actifs / Inactifs dans le Cube z_Admin_Audit_Analyse
# Créé par : yad
# Créé le : 
# Modifié par :  YAD
# Modifié le : 05/07/2016 
# Modification apportée :AJOUT 6  mois pour évaluer l'activité la non activité & renommage des indicateurs
# Modification apportée :Période de départ = z_Admin_Param CURRENT_PERIOD et non plus MONTH_ACTUAL
# Nb_Active_Users_6_Months = 1  utilisateurs actifs sur les 6 derniers mois stocké sur le mois CURRENT_PERIOD (ex Nb_Connexion_Report3_Tech6M)
# Nb_InActive_Users_6_Months = 1  utilisateurs INactifs sur les 6 derniers mois stocké sur le mois CURRENT_PERIOD (ex Nb_Connexion_Report3_Tech26M)
########################################################################################

#Désactivation de la journalisation des données chargées via processus TI
#OldCubeLogChanges = CUBEGETLOGCHANGES('z_Admin_Audit_Analyse');
#CUBESETLOGCHANGES('z_Admin_Audit_Analyse', 0);

###################################################
##############  Création de la vue source  ##################
###################################################

# Construction de la vue

vCubeSource='z_Admin_Audit_Analyse';

### 6 mois
vSubSource6M='}Subset_SRC_Audit_Analyse_6M' | GetProcessName() ;
vVueSource6M='}Subset_SRC_Audit_Analyse_6M' | GetProcessName() ;
ViewDestroy(vCubeSource,vVueSource6M);
ViewCreate(vCubeSource,vVueSource6M);

####### Définition du périmètre de Source #######
#-- z_Stat_Date

vDim='z_Stat_Date';

### 6 mois
SubsetDestroy(vDim,vSubSource6M);
SubsetCreate(vDim,vSubSource6M);

#------------------------- Modification de la durée de test de connexion possible ici - 6 Mois

pPeriode = CellGetS( 'z_Admin_Param' , 'CURRENT_PERIOD' , 'STR_VAR1' ) ;
Per_Prec1 = ATTRS( 'z_Stat_Date' , pPeriode , 'Periode_Precedente' ) ;
Per_Prec2 = ATTRS( 'z_Stat_Date' , Per_Prec1 , 'Periode_Precedente' ) ;
Per_Prec3 = ATTRS( 'z_Stat_Date' , Per_Prec2 , 'Periode_Precedente' ) ;
Per_Prec4 = ATTRS( 'z_Stat_Date' , Per_Prec3 , 'Periode_Precedente' ) ;
Per_Prec5 = ATTRS( 'z_Stat_Date' , Per_Prec4 , 'Periode_Precedente' ) ;
Per_Prec6 = ATTRS( 'z_Stat_Date' , Per_Prec5 , 'Periode_Precedente' ) ;


   SubsetElementInsert( vDim , vSubSource6M , pPeriode , 1 ) ;
   SubsetElementInsert( vDim , vSubSource6M , Per_Prec1 , 1 ) ;
   SubsetElementInsert( vDim , vSubSource6M , Per_Prec2 , 1 ) ;
   SubsetElementInsert( vDim , vSubSource6M , Per_Prec3 , 1 ) ;
   SubsetElementInsert( vDim , vSubSource6M , Per_Prec4 , 1 ) ;
   SubsetElementInsert( vDim , vSubSource6M , Per_Prec5 , 1 ) ;
   SubsetElementInsert( vDim , vSubSource6M , Per_Prec6 , 1 ) ;
#------------------------- Modification de la durée de test de connexion possible ici - 6 Mois





ViewSubsetAssign(vCubeSource,vVueSource6M,vDim,vSubSource6M);



#-- z_Stat_Utilisateur 6M
vDim='z_Stat_Utilisateur';
SubsetDestroy(vDim,vSubSource6M);
vMDXExpression = '{TM1FILTERBYLEVEL( {TM1DRILLDOWNMEMBER( {TM1SUBSETALL( [z_Stat_Utilisateur] )}, ALL, RECURSIVE )}, 0)}';
SubsetCreatebyMDX(vSubSource6M, vMDXExpression);
ViewSubsetAssign(vCubeSource,vVueSource6M,vDim,vSubSource6M);



#-- z_Stat_Indicateur // Trigger Nb_connexion 6 M
vDim='z_Stat_Indicateur';
SubsetDestroy(vDim,vSubSource6M);
SubsetCreate(vDim,vSubSource6M);
SubsetElementInsert(vDim,vSubSource6M,'Nb_connexion',1);
ViewSubsetAssign(vCubeSource,vVueSource6M,vDim,vSubSource6M);


####### Périmètre supplémentaire à exclure si vue de source utilisée #######
#Exclure les valeurs calculées par règle/ Pas de règles

ViewExtractSkipRuleValuesSet (vCubeSource,vVueSource6M,1);
#Exclure les valeurs consolidées

ViewExtractSkipCalcsSet(vCubeSource,vVueSource6M,0);
#Exclure les valeurs 0

ViewExtractSkipZeroesSet(vCubeSource,vVueSource6M,1);

####### Associer le cube et la vue source au process TI #######
# Récuperation du nom du fichier source dans le cube du paramètre
DataSourceNameForServer = vCubeSource;
DataSourceCubeView = vVueSource6M;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****


#-- Periode de saisie
vPeriodeInput = SUBST( pPeriode , 1 , 4 ) | '-' | SUBST( pPeriode , 6 , 2 ) | '-' | '01' ;


#-- Au moins 1 cellule est renseignée dans le cube sur les 6 derniers mois par utilisateur alors on met 1 sur l'utilisateur pour Nb_Active_Users_6_Months
#-- Afin qu'il ne s'affiche pas dans le masque

CellPutN( 1 , vCubeSource , vPeriodeInput , z_Stat_Utilisateur , 'Nb_Active_Users_6_Months' ) ;
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


#-- Au moins 1 cellule est renseignée dans le cube sur les 6 derniers mois par utilisateur alors on met 1 sur l'utilisateur pour Nb_Active_Users_6_Months
#-- Afin qu'il ne s'affiche pas dans le masque
J = 1 ;
WHILE( J <= DIMSIZ( 'z_Stat_Utilisateur' ) ) ;
     ElemStat = DIMNM( 'z_Stat_Utilisateur' , J ) ;
     IF( ELLEV( 'z_Stat_Utilisateur' , ElemStat ) = 0 & ElemStat @<> 'Non affecté' ) ;

          IF( CellGetN( vCubeSource , vPeriodeInput , ElemStat , 'Nb_Active_Users_6_Months' ) = 0 ) ;
               CellPutN( 1 , vCubeSource , vPeriodeInput , ElemStat , 'Nb_InActive_Users_6_Months' ) ;
          ELSE ;
               CellPutN( 0 , vCubeSource , vPeriodeInput , ElemStat , 'Nb_InActive_Users_6_Months' ) ;
          ENDIF;

     ENDIF ;
     J = J + 1 ;
END ;



#-- Activation des Logs
#CUBESETLOGCHANGES( 'z_Admin_Audit_Analyse' , 1 ) ;


ViewDestroy( vCubeSource , vVueSource6M ) ;
vDim = 'z_Stat_Date' ;
SubsetDestroy(vDim,vSubSource6M);
vDim='z_Stat_Utilisateur';
SubsetDestroy(vDim,vSubSource6M);
vDim='z_Stat_Indicateur';
SubsetDestroy(vDim,vSubSource6M);
#endregion