#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#########################################
# Project : Tango - Core Model
# Created by : ASZ - Anone
# Created at : 02/05/2016
# Modified by : BTA 
# Reason : Refonte de la sécurité + revue de la vue source qui était statique + ajout des commentaires
# Date : 12/01/2017
# Modified by : RSJC
# Reason : Ajout droits groupe User_Strategy
# Date : 10/06/2021
#########################################


#################################################################################
#                                                               Déclaration des variables
#################################################################################

zCube = '}ElementSecurity_Audit_ID';
zView = GetProcessName() ; 
zSubset = GetProcessName() ; 
 

#################################################################################
#                                                               Source CUBE
#################################################################################

# -- Destruction et Construction de la vue
ViewDestroy( zCube , zView );
ViewCreate( zCube, zView );

# -- Propriétés de la vue 
ViewExtractSkipZeroesSet ( zCube , zView  , 0 );
ViewExtractSkipRuleValuesSet ( zCube , zView  , 1 );
ViewExtractSkipCalcsSet ( zCube , zView  , 0 );

# -- Source du processus dynamique
DatasourceNameForServer = zCube ;
DatasourceCubeview = zView;


#################################################################################
#                                                               Clear Cube
#################################################################################

CubeClearData( zCube ) ;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****


## -- Ajout lié à la refonte de la sécurité 

# -- Pour les groupes Corporate_Plus , Financial Controller , Performance Corporate et R_VTD_Corp mettre les données en READ
# IF( Groups @= 'Corporate_Plus'  % Groups @= 'Financial_Controller'  % Groups @= 'Performance_Corporate'  % Groups @= 'R_VTD_Corp' ); 
## 22/06/2021 RSJC  'Performance_Corporate'  et 'R_VTD_Corp' uniquement en READ et pas sur tous les audit_ID
IF( Groups @= 'Corporate_Plus'  % Groups @= 'Financial_Controller' ); 


	CellPutS( 'WRITE' , zCube , Audit_ID , Groups ); 

ELSE; 

	# -- Pour les groups suivants, ils ne doivent pas avoir accès aux Audits ID Tot_Conso - Opt_for et enfants - Dis_Act et enfants
## 10/06/2021 RSJC Ajout droits User_STrategy 
## 22/06/2021 RSJC  'Performance_Corporate'  et 'R_VTD_Corp' uniquement en READ et pas sur tous les audit_ID
	##IF( Groups @= 'Country_Project_Mgr'  % Groups @= 'Data_Reporting_Reader' % Groups @= 'Data_LTP_Writer' % Groups @= 'Data_LTP_Reader' % Groups @= 'User_GIE' % Groups @= 'User_Holding'  ); 
	IF( Groups @= 'Country_Project_Mgr'  % Groups @= 'Data_Reporting_Reader' % Groups @= 'Data_LTP_Writer' % Groups @= 'Data_LTP_Reader' % Groups @= 'User_GIE' % Groups @= 'User_Holding' % Groups @= 'User_Strategy' % Groups @= 'Performance_Corporate'  % Groups @= 'R_VTD_Corp' ); 

		IF( Audit_ID @= 'Tot_conso' % Audit_ID @= 'Opt_for' % Audit_ID @= 'Dis_act' % ELISANC( 'Audit_ID', 'Opt_for' , Audit_ID ) = 1 % ELISANC( 'Audit_ID', 'Dis_act' , Audit_ID ) = 1 ) ; 
	
			ItemSkip;

		ELSE; 

			# -- Pour le reste des audit ID, renseigner READ 
			CellPutS( 'READ' , zCube , Audit_ID , Groups ); 

		ENDIF;

	ENDIF;

ENDIF;


## -- Fin Ajout lié à la refonte de la sécurité 


IF(SUBST(Groups,1,2)@<>'R_' & SUBST(Groups,1,2)@<>'W_');
	ItemSkip;
ENDIF;


IF(Groups@='R_Corporate');

	CellPutS('READ', zCube , Audit_ID , Groups );
	ItemSkip;

ELSEIF(Groups@='W_Corporate');

	CellPutS('WRITE', zCube , Audit_ID , Groups );
	ItemSkip;

ENDIF;

vPar_Audit_ID = ELPAR('Audit_ID', Audit_ID, 1);

IF(Audit_ID@='Tot_conso'  % Audit_ID@='Opt_for' % Audit_ID@='Dis_act' % vPar_Audit_ID@='Opt_for' % vPar_Audit_ID@='Dis_act');
	ItemSkip;
ENDIF;

vVal='';

IF(SUBST(Groups,1,2)@='R_');
	vVal='READ';
ENDIF;

IF(SUBST(Groups,1,2)@='W_');
	vVal='WRITE';
ENDIF;

CellPutS(vVal, zCube , Audit_ID , Groups );



#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****




# -- Delete de la vue
ViewDestroy( zCube , zView );
#endregion