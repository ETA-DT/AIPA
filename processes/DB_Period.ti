#region Prolog
###############################################################
#-- Fait le 11/07/2011
#-- Par FBU et LTH
#-- Objet : MÃ J de la dimension Period, z_exercice_VTD_Vector_loading and z_Period_DSO
###############################################################

#****Begin: Generated Statements***
#****End: Generated Statements****

###############################################################
# Project : Tango - build dimension Period
# Created by : FBU & LTH
# Created at : 11/07/2011
# Modified by : NEK
# Modified at : 07/11/2011
# Modify reason : add z_exercice_VTD_Vector loading
# Modified by : BTA
# Modified at : 21/09/2016
# Modify reason : add Alimentation M-1 and M+1 attributes from the files
# Modified by : BTA
# Modified at : 21/11/2016
# Modify reason : Suppression des langues German, Dutch et Portuguese

###############################################################
# Modified by MRE on 03/02/2012 : add the dimension z_Period_DSO necessary for the cube z_DSO

zDateLoadingStart = TIMST(now,'\Y-\M-\D');
zDateTimeLoadingStart = TIMST(now,'\Y-\M-\D \h:\i:\s');
ExecuteProcess('DB_zz_Date_Time_loading');
pCountry=CellGetS( 'z_Admin_Param' , 'COUNTRY' , 'STR_VAR1');
pPeriod=CellGetS( 'z_Admin_Param' , 'MONTH_ACTUAL' , 'STR_VAR1');
zDim = 'Period';
zzDim= 'z_exercice_VTD_Vector';
zzzDim= 'z_Period_DSO';

Source_File = CellGetS( 'z_Admin_Param' , 'REP_ITF' , 'STR_VAR1') |  '\'|  zDim | '.csv';
DataSourceNameForServer = Source_File;

IF (FileExists (Source_File) =0);
     ItemReject(  DataSourceNameForServer | ' is not find' );
     ProcessQuit;
ENDIF;

DIMENSIONDELETEALLELEMENTS( zDim );
DIMENSIONSORTORDER( zDim ,'ByInput','ASCENDING','ByHierarchy','ASCENDING');

ATTRDELETE( zDim , 'English' );
ATTRINSERT( zDim , '' , 'English' , 'A' );

ATTRDELETE( zDim , 'French' );
ATTRINSERT( zDim , '' , 'French' , 'A' );

ATTRDELETE( zDim , 'German' );
# ATTRINSERT( zDim , '' , 'German' , 'A' );

ATTRDELETE( zDim , 'Dutch' );
# ATTRINSERT( zDim , '' , 'Dutch' , 'A' );

ATTRDELETE( zDim , 'Portuguese' );
# ATTRINSERT( zDim , '' , 'Portuguese' , 'A' );


#---------------- YEAR--------------------
# prior year
ATTRDELETE( zDim , 'Prior Year' );
ATTRINSERT( zDim , '' , 'Prior Year' , 'S' );

#Next year
ATTRDELETE( zDim , 'Next Year' );
ATTRINSERT( zDim , '' , 'Next Year' , 'S' );

#-----------------FLAG DATE CURRENT YEAR ------------
#Current Year
ATTRDELETE( zDim , 'Current Year' );
ATTRINSERT( zDim , '' , 'Current Year' , 'S' );

DIMENSIONDELETEALLELEMENTS( zzDim );
DIMENSIONSORTORDER( zzDim ,'ByInput','ASCENDING','ByHierarchy','ASCENDING');

# Dimension z_Period_DSO
DIMENSIONDELETEALLELEMENTS( zzzDim );
DIMENSIONSORTORDER( zzzDim ,'ByInput','ASCENDING','ByHierarchy','ASCENDING');
# The deletion of the attributes throw an error in the log file because of the rules attached to them
#ATTRDELETE( zzzDim , 'M+1' );
ATTRINSERT( zzzDim , '' , 'M+1' , 'S' );
#ATTRDELETE( zzzDim , 'M-1' );
ATTRINSERT( zzzDim , '' , 'M-1' , 'S' );
ATTRDELETE( zzzDim , 'nb_days' );
ATTRINSERT( zzzDim , '' , 'nb_days' , 'S' );
DIMENSIONELEMENTINSERT( zzzDim ,'','Total','n');

#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****

##########################################################
#                 Dim Period
##########################################################
IF( Level_3 @<> '');
           DIMENSIONELEMENTINSERT( zDim ,'',Level_0,'n');
           DIMENSIONELEMENTINSERT( zDim ,'',Level_1,'c');
           DIMENSIONELEMENTINSERT( zDim ,'',Level_2,'c');
           DIMENSIONELEMENTINSERT( zDim ,'',Level_3,'c');
           DIMENSIONELEMENTCOMPONENTADD( zDim ,Level_3,Level_2, 1.000000 );
           DIMENSIONELEMENTCOMPONENTADD( zDim ,Level_2,Level_1,1.000000);
           DIMENSIONELEMENTCOMPONENTADD( zDim ,Level_1,Level_0,1.000000);



ELSEIF( Level_1 @= '');
           DIMENSIONELEMENTINSERT( zDim ,'',Level_0,'n');

ELSEIF( Level_2 @= '');
           DIMENSIONELEMENTINSERT( zDim ,'',Level_0,'n');
           DIMENSIONELEMENTINSERT( zDim ,'',Level_1,'c');
           DIMENSIONELEMENTCOMPONENTADD( zDim ,Level_1,Level_0,1.000000);

ELSEIF( Level_3 @= '');
           DIMENSIONELEMENTINSERT( zDim ,'',Level_0,'n');
           DIMENSIONELEMENTINSERT( zDim ,'',Level_1,'c');
           DIMENSIONELEMENTINSERT( zDim ,'',Level_2,'c');
           DIMENSIONELEMENTCOMPONENTADD( zDim ,Level_2,Level_1,ponderation );
           DIMENSIONELEMENTCOMPONENTADD( zDim ,Level_1,Level_0,1.000000);

ENDIF;


##########################################################
#                 Dim z_exercice_VTD_Vector
##########################################################
IF( Level_3 @<> '');
           DIMENSIONELEMENTINSERT( zzDim ,'',Level_0,'n');
           # Fix MRE on 03/02/2012 : replace zDim by zzDim in the next two lines
           DIMENSIONELEMENTINSERT( zzDim ,'',Level_1,'c');
           DIMENSIONELEMENTINSERT( zzDim ,'',Level_2,'c');
           DIMENSIONELEMENTINSERT( zzDim ,'',Level_3,'c');
           DIMENSIONELEMENTCOMPONENTADD( zzDim ,Level_3,Level_0, 1.000000 );
ELSEIF( Level_1 @= '');
           DIMENSIONELEMENTINSERT( zzDim ,'',Level_0,'n');
ELSEIF( Level_2 @= '');
           DIMENSIONELEMENTINSERT( zzDim ,'',Level_0,'n');
           DIMENSIONELEMENTINSERT( zzDim ,'',Level_1,'c');
           DIMENSIONELEMENTCOMPONENTADD( zzDim ,Level_1,Level_0,1.000000);
ELSEIF( Level_3 @= '');
           DIMENSIONELEMENTINSERT( zzDim ,'',Level_0,'n');
           DIMENSIONELEMENTINSERT( zzDim ,'',Level_1,'c');
           DIMENSIONELEMENTINSERT( zzDim ,'',Level_2,'c');
           DIMENSIONELEMENTCOMPONENTADD( zzDim ,Level_2,Level_1,ponderation );
           DIMENSIONELEMENTCOMPONENTADD( zzDim ,Level_1,Level_0,1.000000);
ENDIF;

##########################################################
#                 Dim z_Period_DSO
##########################################################
IF( Level_3@<>'' & Level_0@<>'' );
  DIMENSIONELEMENTINSERT( zzzDim ,'',Level_0,'n');
  DIMENSIONELEMENTCOMPONENTADD( zzzDim, 'Total', Level_0, 1 );
ENDIF;
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****



IF( Level_3 @<> '');

                ATTRPUTS( Desc_English_3 , zDim , Level_3 , 'English' );
                ATTRPUTS( Desc_French_3 , zDim , Level_3 , 'French' );
                ATTRPUTS( Desc_English_2 , zDim , Level_2 , 'English' );
                ATTRPUTS( Desc_French_2 , zDim , Level_2 , 'French' );
                ATTRPUTS( Desc_English_1 , zDim , Level_1 , 'English' );
                ATTRPUTS( Desc_French_1 , zDim , Level_1 , 'French' );
                ATTRPUTS( Desc_English_0 , zDim , Level_0 , 'English' );
	ATTRPUTS( Desc_French_0 , zDim , Level_0 , 'French' );

                ATTRPUTS( Prior_year, zDim , Level_0 , 'Prior Year');
                ATTRPUTS( Next_year , zDim , Level_0 , 'Next Year' );
	# Ajout attribut Current Year
                ATTRPUTS( Current_Year , zDim , Level_0 , 'Current Year' );

ELSEIF( Level_3 @= '' & SUBST(Level_2,6,3)@='YTD');

                ATTRPUTS( Desc_English_2 , zDim , Level_2 , 'English' );
                ATTRPUTS( Desc_French_2 , zDim , Level_2 , 'French' );
                ATTRPUTS( Desc_English_1 , zDim , Level_1 , 'English' );
	ATTRPUTS( Desc_French_1 , zDim , Level_1 , 'French' );

                ATTRPUTS( Prior_year, zDim , Level_0 , 'Prior Year');
                ATTRPUTS( Next_year , zDim , Level_0 , 'Next Year' );
	# Ajout attribut Current Year
                ATTRPUTS( Current_Year , zDim , Level_0 , 'Current Year' );

ELSE;

                 ATTRPUTS( Desc_English_0 , zDim , Level_0 , 'English' );
                ATTRPUTS( Desc_French_0 , zDim , Level_0 , 'French' );

                ATTRPUTS( Prior_year, zDim , Level_0 , 'Prior Year');
                ATTRPUTS( Next_year , zDim , Level_0 , 'Next Year' );
	# Ajout attribut Current Year
                ATTRPUTS( Current_Year , zDim , Level_0 , 'Current Year' );

ENDIF;

##########################################################
#                 Dim z_Period_DSO
##########################################################
IF( Level_3@<>'' & Level_0@<>'' );
	ATTRPUTS( nb_days , zzzDim , Level_0, 'nb_days' );
ENDIF;

##########################################################
#	Ajout de l'alimentation de M-1 et M+1 
##########################################################
IF( Level_0 @<> '' & ( M_Prev @<> '' % M_Next @<> '' ) ); 
	ATTRPUTS( M_Prev, zDim, Level_0, 'M-1' ); 
	ATTRPUTS( M_Next, zDim, Level_0, 'M+1' );
ENDIF;
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****



#-- Copy the file structure in historical directory
ExecuteProcess( 'z_Tools_Structure_Transfert' , 'zFile' , zDim );

if(pCountry @<> 'CM');
  zProcess = 'DB_' | zDim;
  zDateTimeLoadingEnd = TIMST(now,'\Y-\M-\D \h:\i:\s');
#################################################################################
#                                                                             PROCESS with PERIOD and INSTANCE
#################################################################################
  zCube_Process_PP = 'ZZ_PROCESS_Detail_Instance';
  pChore='Task2_CO_Load_Common_Dimension_' | pCountry;
  pProcess_source='CORE_MODEL';

  CellPutS(zDateTimeLoadingStart , zCube_Process_PP, pChore, zProcess ,pperiod,zDateLoadingStart, pCountry,pProcess_source ,  'Start_date');
  CellPutS(zDateTimeLoadingEnd , zCube_Process_PP, pChore, zProcess ,pperiod,zDateLoadingStart, pCountry ,pProcess_source, 'End_date');
  CellPutS('OK' ,zCube_Process_PP, pChore, zProcess ,pperiod,zDateLoadingStart, pCountry ,pProcess_source,   'Status');
ENDIF;
#endregion