#region Prolog

#****Begin: Generated Header****
if (param_destroy = 1);
   DimensionDestroy('Employees');
   if (param_createIfNotExist = 0);
      ProcessQuit;
   endif;
endif;
if (param_createIfNotExist = 1);
   if (0 = DimensionExists('Employees'));
      DimensionCreate('Employees');
      AttrInsert('Employees', '', 'Caption', 'A');
      CellPutS('BASIC', '}DimensionAttributes', 'Employees', 'DIMENSION_TYPE');
      SubsetCreateByMDX('All Members', '[Employees].MEMBERS', 'Employees');
   endif;
   ATTRINSERT('Employees', '', 'Department', 'A');
   ATTRINSERT('Employees', '', 'Country', 'A');
endif;
CellPutS('Employees', '}DimensionAttributes', 'Employees', 'Caption_Default');
#****End: Generated Header****

#****Begin: Generated Statements***
DimensionSortOrder('Employees', '', '', 'ByInput', 'ASCENDING');
#****End: Generated Statements****
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
DimensionElementInsertDirect('Employees', '', Employees, 'n');
ATTRPUTS(Department, 'Employees', Employees, 'Department', 0);
ATTRPUTS(Country, 'Employees', Employees, 'Country', 0);
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
v_errMsgs = '';
# Clear named levels for Employees
levelIdx = 0;
while (levelIdx <= 999);
   levelKey = 'level' | NumberToStringEx(levelIdx, '000', '.', ',');
   levelName = CellGetS('}HierarchyProperties', 'Employees', 'hierarchy0', levelKey);
   if (levelName @= '');
      break;
   endif;
   CellPutS('', '}HierarchyProperties', 'Employees', 'hierarchy0', levelKey);
   levelIdx = levelIdx + 1;
end;
if (DNLEV('Employees') <> 1);
   v_errMsgs = v_errMsgs | 'The resulting hierarchy for the dimension "Employees" does not align with the level structure defined in the mapping.  When parent-child dimensions are being treated as level based or when level based dimensions are being constructed using source data containing non-unique member identifiers, unexpected hierarchy structures may result. For the case when non-unique member identifiers exist in the source data, turn on the "Qualify member names" dimension property in the mapping page.
';
endif;
RefreshMDXHierarchy('Employees');
if (v_errMsgs @<> '');
   itemReject(v_errMsgs);
endif;
#****End: Generated Statements****
#endregion