#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****


#--AUTHOR= MFS 
#--CREATE_DATE= 06/07/2015
#--MODIF_DATE= 
#--PRO_DESC= Process used to recreate BM hierarchy of the Management_Organization dimension
#--NATURE= DIM
#--COMPLEX= 2
#--MODULE= PMM
#--VERSION=1.0.0

#--REM= ########################################################
#--REM= # V1.0 initial version
#--REM= ########################################################
#--TAB= PROLOG
#--DESC= 

#--REM=Force the process to work on the data from the active SANDBOX
SETUSEACTIVESANDBOXPROPERTY(1);

#--REM=Variables declaration

V_S_DIM='Management_Organization';
V_S_TOT_MO='VTD_corp';
V_S_TOT_BM_MO='VTD_corp_BM';
V_S_BM01='BM01';
V_S_BM02='BM02';
V_S_BM03='BM03';
#V_S_BM04='BM04';




### BEGIN CONTROL BLOCKS ###
###########################################################################
#	BEGIN: BLOCK TO GET CLEAN USER NAME
###########################################################################
#--REM= Getting the name of the user that launch the process.
V_S_USER=TM1USER();

#--REM= Replacement of special characters by'_'.
V_S_RESERVED_CHARS = '/\:*?"<>|''; ,';
V_N_ITERATE = 1;
V_N_USER_NAME_SIZ = LONG(V_S_USER);
V_S_NAME_TMP = '';
WHILE( V_N_ITERATE <= V_N_USER_NAME_SIZ) ;
	V_S_CHAR = SUBST( V_S_USER, V_N_ITERATE, 1);
	IF( SCAN( V_S_CHAR, V_S_RESERVED_CHARS) <> 0) ;
		V_S_CHAR = '_';
	ENDIF;
	V_S_NAME_TMP = V_S_NAME_TMP | V_S_CHAR;
	V_N_ITERATE = V_N_ITERATE + 1;
END;
V_S_USER = V_S_NAME_TMP;


###########################################################################
#	END: BLOCK TO GET CLEAN USER NAME
###########################################################################
###########################################################################
#	BEGIN: DEBUG FILES 
###########################################################################
IF(P_N_DEBUG<>0);
	V_S_TIMESTAMP=TIMST(NOW, '\Y\m\d_\h\i\s');
	V_S_PROCESS_NAME = GETPROCESSNAME();
	V_S_RAND=NUMBERTOSTRING(INT(RAND()*1000000));		



	V_S_DBG_FOLDER=CELLGETS('Z_ADMIN_PARAM','REP_TEMP','STR_VAR1');
	#--REM= Definition of the names of the files of LOG for the DEBUG mode ( one file per process tab).
	V_S_DBG_FILE_PROLOG=V_S_DBG_FOLDER|'\DBG_'|V_S_USER|'_'|V_S_PROCESS_NAME|'_'|V_S_TIMESTAMP|'_'| V_S_RAND|'_PROLOG.txt';
	V_S_DBG_FILE_METADATA=V_S_DBG_FOLDER|'\DBG_'|V_S_USER|'_'|V_S_PROCESS_NAME|'_'|V_S_TIMESTAMP|'_'| V_S_RAND|'_METADATA.txt';
	V_S_DBG_FILE_DATA=V_S_DBG_FOLDER|'\DBG_'|V_S_USER|'_'|V_S_PROCESS_NAME|'_'|V_S_TIMESTAMP|'_'| V_S_RAND|'_DATA.txt';
	V_S_DBG_FILE_EPILOG=V_S_DBG_FOLDER|'\DBG_'|V_S_USER|'_'|V_S_PROCESS_NAME|'_'|V_S_TIMESTAMP|'_'| V_S_RAND|'_EPILOG.txt';

ENDIF;

###########################################################################
#	END: DEBUG FILES 
###########################################################################



V_S_PROCESS_NAME = GETPROCESSNAME();		
V_S_TIMESTAMP=TIMST(NOW, '\Y\m\d_\h\i\s');		
V_S_RAND=NUMBERTOSTRING(INT(RAND()*1000000));		
		
V_S_SUBSET_LEAF = 'TMP_SUBSET_LEAF_'|V_S_USER|'_'|V_S_PROCESS_NAME|'_'| V_S_TIMESTAMP|'_'| V_S_RAND;		
V_S_SUBSET_BM = 'TMP_SUBSET_BM_'|V_S_USER|'_'|V_S_PROCESS_NAME|'_'| V_S_TIMESTAMP|'_'| V_S_RAND;		
V_S_SUBSET_DESC_BM = 'TMP_SUBSET_DESC_BM_'|V_S_USER|'_'|V_S_PROCESS_NAME|'_'| V_S_TIMESTAMP|'_'| V_S_RAND;		

V_S_SUBSET_COUNTRY = 'TMP_SUBSET_COUNTRY_'|V_S_USER|'_'|V_S_PROCESS_NAME|'_'| V_S_TIMESTAMP|'_'| V_S_RAND;		
V_S_SUBSET_VTD_CORP = 'TMP_SUBSET_VTD_CORP_'|V_S_USER|'_'|V_S_PROCESS_NAME|'_'| V_S_TIMESTAMP|'_'| V_S_RAND;		
### V_S_SUBSET_CONSO_PMM = 'TMP_SUBSET_'|V_S_USER|'_'|V_S_PROCESS_NAME|'_'| V_S_TIMESTAMP|'_'| V_S_RAND;		

ATTRINSERT(V_S_DIM, '', 'Country', 'S');

# creation of subset with all Business Models (BM01, BM02 ...)
IF(SUBSETEXISTS(V_S_DIM,V_S_SUBSET_BM)=1);
	SUBSETDESTROY(V_S_DIM,V_S_SUBSET_BM);
ENDIF;
SUBSETCREATEBYMDX(V_S_SUBSET_BM,'DESCENDANTS(['|V_S_DIM|'].['|V_S_TOT_BM_MO|'],1)');
### TURNING DYNAMIC SUBSET INTO A STATIC ONE.		
V_N_SUBSET_SIZE = SUBSETGETSIZE( V_S_DIM, V_S_SUBSET_BM);		
SUBSETELEMENTINSERT( V_S_DIM, V_S_SUBSET_BM, DIMNM( V_S_DIM, 1), V_N_SUBSET_SIZE + 1);		
SUBSETELEMENTDELETE( V_S_DIM, V_S_SUBSET_BM, V_N_SUBSET_SIZE + 1);		


# creation of subset with all "Countries"  (FR, UK, etc.)
IF(SUBSETEXISTS(V_S_DIM,V_S_SUBSET_COUNTRY)=1);
	SUBSETDESTROY(V_S_DIM,V_S_SUBSET_COUNTRY);
ENDIF;
SUBSETCREATEBYMDX(V_S_SUBSET_COUNTRY,'TM1FILTERBYLEVEL({DESCENDANTS(['|V_S_DIM|'].['|V_S_TOT_MO|'],2)},1,2,3,4,5,6,7,8,9,10)');
### TURNING DYNAMIC SUBSET INTO A STATIC ONE.		
V_N_NB_COUNTRY = SUBSETGETSIZE( V_S_DIM, V_S_SUBSET_COUNTRY);		
SUBSETELEMENTINSERT( V_S_DIM, V_S_SUBSET_COUNTRY, DIMNM( V_S_DIM, 1), V_N_NB_COUNTRY + 1);		
SUBSETELEMENTDELETE( V_S_DIM, V_S_SUBSET_COUNTRY, V_N_NB_COUNTRY + 1);		


# creation of subset with all elements
IF(SUBSETEXISTS(V_S_DIM,V_S_SUBSET_VTD_CORP)=1);
	SUBSETDESTROY(V_S_DIM,V_S_SUBSET_VTD_CORP);
ENDIF;
SUBSETCREATEBYMDX(V_S_SUBSET_VTD_CORP,'{DESCENDANTS(['|V_S_DIM|'].['|V_S_TOT_MO|'])}');
### TURNING DYNAMIC SUBSET INTO A STATIC ONE.		
V_N_NB_VTD_CORP = SUBSETGETSIZE( V_S_DIM, V_S_SUBSET_VTD_CORP);		
SUBSETELEMENTINSERT( V_S_DIM, V_S_SUBSET_VTD_CORP, DIMNM( V_S_DIM, 1), V_N_NB_VTD_CORP + 1);		
SUBSETELEMENTDELETE( V_S_DIM, V_S_SUBSET_VTD_CORP, V_N_NB_VTD_CORP + 1);		




V_N_ITERATE=1;

WHILE(V_N_ITERATE<=V_N_NB_VTD_CORP);
	V_S_ELEM=SUBSETGETELEMENTNAME(V_S_DIM, V_S_SUBSET_VTD_CORP, V_N_ITERATE);

		V_N_ITERATE_COUNTRY=1;
		V_S_COUNTRY='';
		WHILE(V_N_ITERATE_COUNTRY<=V_N_NB_COUNTRY);
			V_S_COUNTRY_AUX=SUBSETGETELEMENTNAME(V_S_DIM, V_S_SUBSET_COUNTRY, V_N_ITERATE_COUNTRY);
			IF((ELISANC(V_S_DIM,V_S_COUNTRY_AUX,V_S_ELEM)>0) % (V_S_ELEM@=V_S_COUNTRY_AUX));
				V_S_COUNTRY=V_S_COUNTRY_AUX;
			ENDIF;
			V_N_ITERATE_COUNTRY=V_N_ITERATE_COUNTRY+1;
		END;

		IF((V_S_COUNTRY@='') & (ELLEV(V_S_DIM,V_S_ELEM)=0));
			V_S_COUNTRY=ELPAR(V_S_DIM,V_S_ELEM,1);
		ENDIF;

		IF(V_S_COUNTRY@<>'');
			CELLPUTS(V_S_COUNTRY,'}ElementAttributes_'|V_S_DIM,V_S_ELEM,'Country');
		ENDIF;

	V_N_ITERATE=V_N_ITERATE + 1;
END;



###### destruction of Business Model hierarchy############################
V_N_NB_BM=SUBSETGETSIZE(V_S_DIM,V_S_SUBSET_BM);
V_N_ITERATE=1;

IF(DIMIX(V_S_DIM,V_S_TOT_BM_MO)>0);
WHILE(V_N_ITERATE<=V_N_NB_BM);
	V_S_BM=SUBSETGETELEMENTNAME(V_S_DIM, V_S_SUBSET_BM, V_N_ITERATE);

	IF(ELCOMPN(V_S_DIM,V_S_BM)>0);

		IF(SUBSETEXISTS(V_S_DIM,V_S_SUBSET_DESC_BM)=1);
			SUBSETDESTROY(V_S_DIM,V_S_SUBSET_DESC_BM);
		ENDIF;
		SUBSETCREATEBYMDX(V_S_SUBSET_DESC_BM,'{TM1FILTERBYLEVEL( {TM1DRILLDOWNMEMBER( {['|V_S_DIM|'].['|V_S_BM|']}, ALL, RECURSIVE )}, 1,2,3,4,5,6,7,8,9,10)
}');
		### TURNING DYNAMIC SUBSET INTO A STATIC ONE.		
		V_N_SUBSET_SIZE = SUBSETGETSIZE( V_S_DIM, V_S_SUBSET_DESC_BM);		
		SUBSETELEMENTINSERT( V_S_DIM, V_S_SUBSET_DESC_BM, DIMNM( V_S_DIM, 1), V_N_SUBSET_SIZE + 1);		
		SUBSETELEMENTDELETE( V_S_DIM, V_S_SUBSET_DESC_BM, V_N_SUBSET_SIZE + 1);		


		V_N_NB_DESC_BM=SUBSETGETSIZE(V_S_DIM,V_S_SUBSET_DESC_BM);
		V_N_ITERATE_DESC_BM=1;
		WHILE(V_N_ITERATE_DESC_BM <= V_N_NB_DESC_BM);
			V_S_NAME_DESC_BM=SUBSETGETELEMENTNAME(V_S_DIM,V_S_SUBSET_DESC_BM, V_N_ITERATE_DESC_BM);
			IF(V_S_NAME_DESC_BM @<> V_S_BM);
					DIMENSIONELEMENTDELETE(V_S_DIM,V_S_NAME_DESC_BM);
			ENDIF;
			V_N_ITERATE_DESC_BM=V_N_ITERATE_DESC_BM + 1;
		END;
	ENDIF;
	V_N_ITERATE=V_N_ITERATE + 1;
END;
ENDIF;

###############################################################



###### construction of Business Model hierarchy############################


V_N_NB_BM=SUBSETGETSIZE(V_S_DIM,V_S_SUBSET_BM);
V_N_ITERATE=1;

WHILE(V_N_ITERATE<=V_N_NB_BM);
	V_S_BM=SUBSETGETELEMENTNAME(V_S_DIM, V_S_SUBSET_BM, V_N_ITERATE);

	IF(SUBSETEXISTS(V_S_DIM,V_S_SUBSET_LEAF)=1);
		SUBSETDESTROY(V_S_DIM,V_S_SUBSET_LEAF);
	ENDIF;
	SUBSETCREATEBYMDX(V_S_SUBSET_LEAF,'UNION({['|V_S_DIM|'].['|DIMNM( V_S_DIM, 1)|']},{FILTER( {TM1DRILLDOWNMEMBER( {['|V_S_DIM|'].['|V_S_TOT_MO|']}, ALL
, RECURSIVE )}, ['|V_S_DIM|'].[Business_Model] = "'|V_S_BM|'")})');
		
	V_N_SUBSET_SIZE = SUBSETGETSIZE( V_S_DIM, V_S_SUBSET_LEAF);		
	
	IF(V_N_SUBSET_SIZE=1);
		V_N_NB_LEAF=0;
	ELSE;
		SUBSETELEMENTDELETE( V_S_DIM, V_S_SUBSET_LEAF,1);		
		V_N_NB_LEAF=SUBSETGETSIZE(V_S_DIM,V_S_SUBSET_LEAF);
	ENDIF;
	
	V_N_ITERATE_BM=1;

	
	WHILE(V_N_ITERATE_BM<=V_N_NB_LEAF);
		V_S_LEAF=SUBSETGETELEMENTNAME(V_S_DIM, V_S_SUBSET_LEAF, V_N_ITERATE_BM);
		V_N_NB_DESC_BM=SUBSETGETSIZE(V_S_DIM,V_S_SUBSET_LEAF);
		V_S_ELEM_AUX=V_S_LEAF;

		### Test if the country of the MU is a PMM country


		V_N_ITERATE_COUNTRY=1;
		V_S_COUNTRY='';
		WHILE(V_N_ITERATE_COUNTRY<=V_N_NB_COUNTRY);
			V_S_COUNTRY_AUX=SUBSETGETELEMENTNAME(V_S_DIM, V_S_SUBSET_COUNTRY, V_N_ITERATE_COUNTRY);
			IF(ELISANC(V_S_DIM,V_S_COUNTRY_AUX,V_S_LEAF)>0);
				V_S_COUNTRY=V_S_COUNTRY_AUX;
			ENDIF;
			V_N_ITERATE_COUNTRY=V_N_ITERATE_COUNTRY+1;
		END;


		IF(ATTRS(V_S_DIM, V_S_COUNTRY, 'PMM_Country')@='PMM_Country');

			WHILE((ATTRS(V_S_DIM, V_S_ELEM_AUX , 'PMM_Country') @='') & (V_S_ELEM_AUX@<>''));
				V_N_ITERATE_PARENT=1;
				V_N_NB_PARENT= ELPARN(V_S_DIM,V_S_ELEM_AUX);
	
				V_S_ATTR_ELEM_AUX_ENG='';
				V_S_ATTR_ELEM_AUX_FRA='';

			
				WHILE(V_N_ITERATE_PARENT<=V_N_NB_PARENT);
					V_S_PARENT=ELPAR(V_S_DIM,V_S_ELEM_AUX,V_N_ITERATE_PARENT);
					IF(ELISANC(V_S_DIM,V_S_TOT_MO,V_S_PARENT)=1);
						V_S_PARENT_AUX=V_S_PARENT;
					ENDIF;
					V_N_ITERATE_PARENT=V_N_ITERATE_PARENT + 1;
				END;

				IF( V_S_PARENT_AUX@<>'');
					V_S_PARENT_TMP= V_S_PARENT_AUX|'_'|V_S_BM;
					IF(V_S_ELEM_AUX@<>V_S_LEAF);
						V_S_ELEM_AUX= V_S_ELEM_AUX|'_'|V_S_BM;
					ENDIF;

					IF(P_N_DEBUG=0);
						DIMENSIONELEMENTINSERT(V_S_DIM,'',V_S_PARENT_TMP,'N');
						DIMENSIONELEMENTCOMPONENTADD(V_S_DIM, V_S_PARENT_TMP, V_S_ELEM_AUX,1);
					ELSE;
						ASCIIOUTPUT(V_S_DBG_FILE_PROLOG,'DIMENSIONELEMENTINSERT('|V_S_DIM|','''','|V_S_PARENT_TMP|',''N''');
						ASCIIOUTPUT(V_S_DBG_FILE_PROLOG,'DIMENSIONELEMENTCOMPONENTADD('|V_S_DIM|', '|V_S_PARENT_TMP|', '|V_S_ELEM_AUX|',1');
					ENDIF;
				ENDIF;

				V_S_ELEM_AUX=V_S_PARENT_AUX;
				V_S_PARENT_AUX='';

			END;

			IF(ATTRS(V_S_DIM, V_S_ELEM_AUX , 'PMM_Country') @='PMM_Country');
				V_S_ELEM_TMP= V_S_ELEM_AUX|'_'|V_S_BM;

				IF(P_N_DEBUG=0);
					DIMENSIONELEMENTCOMPONENTADD(V_S_DIM, V_S_BM, V_S_ELEM_TMP,1);
				ELSE;
					ASCIIOUTPUT(V_S_DBG_FILE_PROLOG,'DIMENSIONELEMENTCOMPONENTADD('|V_S_DIM|', '|V_S_BM|', '|V_S_ELEM_TMP|',1');
				ENDIF;
			ENDIF;

		ENDIF;


		V_N_ITERATE_BM=V_N_ITERATE_BM + 1;
	END;
	
	V_N_ITERATE=V_N_ITERATE + 1;
END;

###############################################################

IF(P_N_DEBUG=0);
	IF(SUBSETEXISTS(V_S_DIM,V_S_SUBSET_BM)=1);SUBSETDESTROY(V_S_DIM,V_S_SUBSET_BM);ENDIF;
	IF(SUBSETEXISTS(V_S_DIM,V_S_SUBSET_LEAF)=1);SUBSETDESTROY(V_S_DIM,V_S_SUBSET_LEAF);ENDIF;
	IF(SUBSETEXISTS(V_S_DIM,V_S_SUBSET_DESC_BM)=1);SUBSETDESTROY(V_S_DIM,V_S_SUBSET_DESC_BM);ENDIF;
	IF(SUBSETEXISTS(V_S_DIM,V_S_SUBSET_VTD_CORP)=1);SUBSETDESTROY(V_S_DIM,V_S_SUBSET_VTD_CORP);ENDIF;

ENDIF; 


#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****




V_S_PROCESS_NAME = GETPROCESSNAME();		
V_S_TIMESTAMP=TIMST(NOW, '\Y\m\d_\h\i\s');		
V_S_RAND=NUMBERTOSTRING(INT(RAND()*1000000));		
		
V_S_SUBSET_LEAF = 'TMP_SUBSET_LEAF_'|V_S_USER|'_'|V_S_PROCESS_NAME|'_'| V_S_TIMESTAMP|'_'| V_S_RAND;		
V_S_SUBSET_BM = 'TMP_SUBSET_BM_'|V_S_USER|'_'|V_S_PROCESS_NAME|'_'| V_S_TIMESTAMP|'_'| V_S_RAND;		
V_S_SUBSET_DESC_BM = 'TMP_SUBSET_DESC_BM_'|V_S_USER|'_'|V_S_PROCESS_NAME|'_'| V_S_TIMESTAMP|'_'| V_S_RAND;		
### V_S_SUBSET_CONSO_PMM = 'TMP_SUBSET_'|V_S_USER|'_'|V_S_PROCESS_NAME|'_'| V_S_TIMESTAMP|'_'| V_S_RAND;		


# creation of subset with all Business Models (BM01, BM02 ...)
IF(SUBSETEXISTS(V_S_DIM,V_S_SUBSET_BM)=1);
	SUBSETDESTROY(V_S_DIM,V_S_SUBSET_BM);
ENDIF;
SUBSETCREATEBYMDX(V_S_SUBSET_BM,'DESCENDANTS(['|V_S_DIM|'].['|V_S_TOT_BM_MO|'],1)');
### TURNING DYNAMIC SUBSET INTO A STATIC ONE.		
V_N_SUBSET_SIZE = SUBSETGETSIZE( V_S_DIM, V_S_SUBSET_BM);		
SUBSETELEMENTINSERT( V_S_DIM, V_S_SUBSET_BM, DIMNM( V_S_DIM, 1), V_N_SUBSET_SIZE + 1);		
SUBSETELEMENTDELETE( V_S_DIM, V_S_SUBSET_BM, V_N_SUBSET_SIZE + 1);		





###### Update attributes of BM hierarchy ############################


V_N_NB_BM=SUBSETGETSIZE(V_S_DIM,V_S_SUBSET_BM);
V_N_ITERATE=1;

WHILE(V_N_ITERATE<=V_N_NB_BM);
	V_S_BM=SUBSETGETELEMENTNAME(V_S_DIM, V_S_SUBSET_BM, V_N_ITERATE);

	IF(SUBSETEXISTS(V_S_DIM,V_S_SUBSET_LEAF)=1);
		SUBSETDESTROY(V_S_DIM,V_S_SUBSET_LEAF);
	ENDIF;
	SUBSETCREATEBYMDX(V_S_SUBSET_LEAF,'UNION({['|V_S_DIM|'].['|DIMNM( V_S_DIM, 1)|']},{FILTER( {TM1DRILLDOWNMEMBER( {['|V_S_DIM|'].['|V_S_TOT_MO|']}, ALL
, RECURSIVE )}, ['|V_S_DIM|'].[Business_Model] = "'|V_S_BM|'")})');
		
	V_N_SUBSET_SIZE = SUBSETGETSIZE( V_S_DIM, V_S_SUBSET_LEAF);		
	
	IF(V_N_SUBSET_SIZE=1);
		V_N_NB_LEAF=0;
	ELSE;
		SUBSETELEMENTDELETE( V_S_DIM, V_S_SUBSET_LEAF,1);		
		V_N_NB_LEAF=SUBSETGETSIZE(V_S_DIM,V_S_SUBSET_LEAF);
	ENDIF;
	
	V_N_ITERATE_BM=1;

	
	WHILE(V_N_ITERATE_BM<=V_N_NB_LEAF);
		V_S_LEAF=SUBSETGETELEMENTNAME(V_S_DIM, V_S_SUBSET_LEAF, V_N_ITERATE_BM);
		V_N_NB_DESC_BM=SUBSETGETSIZE(V_S_DIM,V_S_SUBSET_LEAF);
		V_S_ELEM_AUX=V_S_LEAF;


		V_N_ITERATE_COUNTRY=1;
		V_S_COUNTRY='';
		WHILE(V_N_ITERATE_COUNTRY<=V_N_NB_COUNTRY);
			V_S_COUNTRY_AUX=SUBSETGETELEMENTNAME(V_S_DIM, V_S_SUBSET_COUNTRY, V_N_ITERATE_COUNTRY);
			IF(ELISANC(V_S_DIM,V_S_COUNTRY_AUX,V_S_LEAF)>0);
				V_S_COUNTRY=V_S_COUNTRY_AUX;
			ENDIF;
			V_N_ITERATE_COUNTRY=V_N_ITERATE_COUNTRY+1;
		END;


		### Test if the country of the MU is a PMM country
		IF(ATTRS(V_S_DIM, V_S_COUNTRY, 'PMM_Country')@='PMM_Country');

			WHILE((ATTRS(V_S_DIM, V_S_ELEM_AUX , 'PMM_Country') @='') & (V_S_ELEM_AUX@<>''));
				V_N_ITERATE_PARENT=1;
				V_N_NB_PARENT= ELPARN(V_S_DIM,V_S_ELEM_AUX);
	
				V_S_ATTR_ELEM_AUX_ENG='';
				V_S_ATTR_ELEM_AUX_FRA='';

			
				WHILE(V_N_ITERATE_PARENT<=V_N_NB_PARENT);
					V_S_PARENT=ELPAR(V_S_DIM,V_S_ELEM_AUX,V_N_ITERATE_PARENT);
					IF(ELISANC(V_S_DIM,V_S_TOT_MO,V_S_PARENT)=1);
						V_S_PARENT_AUX=V_S_PARENT;
					ENDIF;
					V_N_ITERATE_PARENT=V_N_ITERATE_PARENT + 1;
				END;

				IF( V_S_PARENT_AUX@<>'');
					V_S_PARENT_TMP= V_S_PARENT_AUX|'_'|V_S_BM;
					IF(V_S_ELEM_AUX@<>V_S_LEAF);
						V_S_ELEM_AUX= V_S_ELEM_AUX|'_'|V_S_BM;
					ENDIF;

					IF(P_N_DEBUG=0);

						V_S_ATTR_ELEM_AUX_ENG=CELLGETS('}ElementAttributes_'|V_S_DIM,V_S_PARENT_AUX,'English');
						V_S_ATTR_ELEM_AUX_FRA=CELLGETS('}ElementAttributes_'|V_S_DIM,V_S_PARENT_AUX,'French');
						IF(V_S_ATTR_ELEM_AUX_ENG@<>'');CELLPUTS(V_S_ATTR_ELEM_AUX_ENG|' '|V_S_BM,'}ElementAttributes_'|V_S_DIM,V_S_PARENT_TMP,'English');ENDIF;
						IF(V_S_ATTR_ELEM_AUX_FRA@<>'');CELLPUTS(V_S_ATTR_ELEM_AUX_FRA|' '|V_S_BM,'}ElementAttributes_'|V_S_DIM,V_S_PARENT_TMP,'French');ENDIF;
						IF(V_S_COUNTRY@<>'');CELLPUTS(V_S_COUNTRY,'}ElementAttributes_'|V_S_DIM,V_S_PARENT_TMP,'Country');ENDIF;


					ELSE;

						ASCIIOUTPUT(V_S_DBG_FILE_EPILOG,V_S_PARENT_AUX,'V_S_ATTR_ELEM_AUX_ENG=',CELLGETS('}ElementAttributes_'|V_S_DIM,V_S_PARENT_AUX,'English'));
						ASCIIOUTPUT(V_S_DBG_FILE_EPILOG,V_S_PARENT_AUX,'V_S_ATTR_ELEM_AUX_FRA=',CELLGETS('}ElementAttributes_'|V_S_DIM,V_S_PARENT_AUX,'French'));
						ASCIIOUTPUT(V_S_DBG_FILE_EPILOG,'CELLPUTS(V_S_ATTR_ELEM_AUX_ENG'|' '|V_S_BM|',''}ElementAttributes_'|V_S_DIM,V_S_PARENT_TMP|''',''English'')');
						ASCIIOUTPUT(V_S_DBG_FILE_EPILOG,'CELLPUTS(V_S_ATTR_ELEM_AUX_FRA'|' '|V_S_BM|',''}ElementAttributes_'|V_S_DIM,V_S_PARENT_TMP|''',''French'')');

					ENDIF;
									
				ENDIF;


				V_S_ELEM_AUX=V_S_PARENT_AUX;
				V_S_PARENT_AUX='';

			END;


		ENDIF;


		V_N_ITERATE_BM=V_N_ITERATE_BM + 1;
	END;
	
	V_N_ITERATE=V_N_ITERATE + 1;
END;






IF(P_N_DEBUG=0);
	IF(SUBSETEXISTS(V_S_DIM,V_S_SUBSET_BM)=1);SUBSETDESTROY(V_S_DIM,V_S_SUBSET_BM);ENDIF;
	IF(SUBSETEXISTS(V_S_DIM,V_S_SUBSET_COUNTRY)=1);SUBSETDESTROY(V_S_DIM,V_S_SUBSET_COUNTRY);ENDIF;
	IF(SUBSETEXISTS(V_S_DIM,V_S_SUBSET_LEAF)=1);SUBSETDESTROY(V_S_DIM,V_S_SUBSET_LEAF);ENDIF;
	IF(SUBSETEXISTS(V_S_DIM,V_S_SUBSET_DESC_BM)=1);SUBSETDESTROY(V_S_DIM,V_S_SUBSET_DESC_BM);ENDIF;
ENDIF; 


# Load Security
ExecuteProcess('Import_CM_Security_Management_Organization');

SecurityRefresh;
#endregion