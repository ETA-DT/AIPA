#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****



#########################################################################################
# -- Export dimension générique
# -- MTA - Datatilt 31/12/2021
#########################################################################################

# -- Déclaration des variables
iNbAttribut = 0;
iExportLine = 0;

# -- Global variables
zProcessName = Lower( GetProcessName());

# -- Itération du process
zIteration = TimSt( Now(), '\Y-\m-\d \h:\i:\s');
zProcessIteration = zIteration |' '| zProcessName;

# -- Utilisateur en cours
IF( DIMIX('}Clients',TM1User() ) = 0 );

	# Default User = Admin --> Anticipation des exécutions par Chore
	zProcessUser = 'Admin';
    	zUserName = zProcessUser;
ELSE;
    	zProcessUser = AttrS('}Clients',TM1User(),'}TM1_DefaultDisplayValue');
    	zUserName = SUBST(zProcessUser, SCAN('/', zProcessUser) +1,LONG (zProcessUser));
ENDIF;

vsTemporaryNm = TimSt( Now(), '\Y\m\d_\h\i\s') | '_' | zUserName ; 

OUTPUT_DIR = CellGetS( 'Z_ADMIN_PARAM', 'REP_ITF', 'STR_VAR1' );
Export_File = OUTPUT_DIR | '\'|pExportFile;

# -- Déclaration du sous ensemble source
vSubset = GetProcessName();
SubsetDestroy( pDimension, vSubset);
SubsetCreatebyMDX(vSubset, ' { HIERARCHIZE( {TM1SUBSETALL( [' | pDimension | '] )} ) }');


# -- Check sur le nombre d'attributs
sAttrDimName = '}ElementAttributes_' | pDimension;
IF( CubeExists(sAttrDimName) = 1 );
	iNbAttribut = DIMSIZ(sAttrDimName) ;
ENDIF;


DatasourceNameForServer = pDimension;
DatasourceNameForClient = pDimension;
DataSourceType = 'SUBSET';
DatasourceDimensionSubset = vSubset;
DatasourceASCIIDelimiter = ';';
DatasourceASCIIQuoteCharacter = '';
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

############################################################################################################################
# -- Entête
IF( iExportline = 0 ); 
	sAttributeToExport = '';
    	i = 1 ; 
    	While( i <= iNbAttribut );

        		sAttributName = DIMNM( sAttrDimName , i );
        		sAttributType = DTYPE( sAttrDimName, sAttributName );
            		sAttribute = sAttributName | ' (' | sAttributType | ')';

        			IF( sAttributeToExport @= '' );
        				sAttributeToExport = Expand( '%sAttribute%'); 
        			ELSE;
        				sAttributeToExport = Expand( '%sAttributeToExport%;%sAttribute%'); 
			ENDIF;
       	i = i + 1;
	End ; 

	ASCIIOUTPUT(Export_File ,
	'Element',
	'Type',
	'Hierarchie1',
	'Poids1',
	'Hierarchie2',
	'Poids2',
	'Hierarchie3',
	'Poids3',
	'Hierarchie4',
	'Poids4',
	'Hierarchie5',
	'Poids5',
	'Hierarchie6',
	'Poids6',
	'Hierarchie7',
	'Poids7',
	'Hierarchie8',
	'Poids8',
	'Hierarchie9',
	'Poids9',
	'Hierarchie10',
	'Poids10',
	sAttributeToExport );  

	iExportLine = iExportLine + 1; 
ENDIF;



#############################################################################################################################
# -- Il faut inserer les élements en ligne. 
# -- On va chercher le nombre de parent d'un élement.
# -- on parcours le poids des éléments

Nbparents= Elparn (pDimension, valeur); 
vType = DTYPE(pDimension, valeur); 
sPoids = ElWeight ( pDimension, Valeur, Valeur ); 

IF (sPoids = 0); 
	sPoids =0; 
Else; 
	sPoids = sPoids; 
Endif;

vValeur = Valeur|';'|vType;
	
k=1; 
kMax = Nbparents; 
While (k<=kMax);

	# -- get du parent de l'élement en source
	# -- concatenation de l'information, pour venir ajouter au fur et à mesure l'information de la hiérarchie en colonne. 
	vElement =Elpar(pDimension, valeur, k); 
	
	# -- ajout des poids des élements
	sPoids = ElWeight ( pDimension, vElement , Valeur ); 
	IF (sPoids = 0);
		sPoids =0;
	Else; 
		sPoids = sPoids; 
	Endif;
	
		vValeur = vValeur | ';' | vElement |';'| STR(sPoids,1,4);
 
	k=k+1;
	End; 

	# -- calibrage de l'export

	Nb= ( 2*kMax)+2; 
	NbMax = 21; 
	
	While (Nb<=NbMax); 
		vValeur = vValeur|';'|''; 
	Nb= Nb+1; 
	End; 
	
	# Parcours des attributs
			sAttributeToExport = '';
			i = 1 ; 
			While( i <= iNbAttribut );

				sAttributName = DIMNM( sAttrDimName , i );
				sAttributType = DTYPE( sAttrDimName, sAttributName );
				
				IF( sAttributType @= 'AS' %  sAttributType @= 'AA' );
					
					vAttributeValue = ATTRS(pDimension , valeur , sAttributName);
				
				ELSE;
					vAttributeValue = NumberToString( ATTRN(pDimension , valeur , sAttributName)) ;
					
				ENDIF;

				IF(i = 1);
					sAttributeToExport = vAttributeValue;
				ELSE;
					sAttributeToExport = Expand( '%sAttributeToExport%;%vAttributeValue%'); 
					 
				ENDIF;

				i = i + 1;
			End ; 
	

ASCIIOUTPUT(Export_File, vValeur, sAttributeToExport); 

#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion