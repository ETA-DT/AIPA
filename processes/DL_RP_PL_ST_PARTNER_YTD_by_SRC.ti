#region Prolog
#########################################
# Project : Tango - Data Load -> Storage Cube RP_PL
# Created by : FBU
# Created at : 12/12/2011
# Modified by : 
# Modified at : 
# Modify reason :
#########################################


#****Begin: Generated Statements***
#****End: Generated Statements****


pCountry=CellGetS( 'z_Admin_Param' , 'COUNTRY' , 'STR_VAR1');
zCube = 'RP_PL';
zCube2 = 'RP_Economic_Type_Client';
zCube_Source = 'ST_PARTNER_YTD';
zCube_Transco_ECO = 'TC_CONTRACT_ECO_MO_TYP_CLI';

zCube_Reject = 'ZZ_PROCESS_REJECT';
zCube_Process = 'ZZ_PROCESS_DETAIL';

nb_lign = 0;
nb_reject = 0;
nb_load = 0;

zProcess = 'DL_RP_PL_ST_PARTNER_YTD_by_SRC';

zDateLoadingStart = TIMST( NOW ,'\Y-\M-\D');
zDateTimeLoadingStart = TIMST( NOW ,'\Y-\M-\D \h:\i:\s');
pPeriod_Cube = CellGetS( 'z_Admin_Param' , 'MONTH_ACTUAL' , 'STR_VAR1');


####################
#-- Test date
####################
IF( pPeriod @= '' );
    pPeriod = pPeriod_Cube ;
ELSE;
    pPeriod = pPeriod;
ENDIF;

####################
#-- Test date
####################
IF( pPeriod @= 'previous_month' );
    pPeriod = ATTRS( 'Period' , TIMST( NOW ,'\Y.\m' ) , 'M-1' ) ;
ENDIF;

Phase ='ACT';


#################################################################################
#                                                               Clear Reject Cube
#################################################################################

######
#Call process DB_zz_Date_Time_loading in order to add the new day in the dimension zz_Date_Time_loading
ExecuteProcess('DB_zz_Date_Time_loading');
######

P_NAME_RAZ = zCube_Reject | '_RAZ';
ViewDestroy( zCube_Reject , P_NAME_RAZ );
ViewCreate( zCube_Reject , P_NAME_RAZ );

#-- Create subset in zz_Date_Time_loading and }Processes
IF( SubsetExists( 'zz_Date_Time_loading' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'zz_Date_Time_loading' , P_NAME_RAZ );
ELSE;
    SubsetCreate( 'zz_Date_Time_loading' , P_NAME_RAZ );
ENDIF;

IF( SubsetExists( '}Processes' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( '}Processes' , P_NAME_RAZ);
ELSE;
    SubsetCreate( '}Processes' , P_NAME_RAZ );
ENDIF;

SubsetElementInsert( 'zz_Date_Time_loading' , P_NAME_RAZ ,zDateLoadingStart , 1 );
SubsetElementInsert( '}Processes' , P_NAME_RAZ , zProcess , 1 );

ViewSubsetAssign( zCube_Reject , P_NAME_RAZ , 'zz_Date_Time_loading' , P_NAME_RAZ);
ViewSubsetAssign( zCube_Reject , P_NAME_RAZ , '}Processes', P_NAME_RAZ);

#-- Clear cube
ViewZeroOut( zCube_Reject , P_NAME_RAZ );

#-- Update subset
ViewExtractSkipZeroesSet ( zCube_Reject , P_NAME_RAZ , 1 );
ViewExtractSkipRuleValuesSet ( zCube_Reject , P_NAME_RAZ , 1 );
ViewExtractSkipCalcsSet ( zCube_Reject , P_NAME_RAZ , 1 );

#-- Delete subset
ViewDestroy( zCube_Reject , P_NAME_RAZ );
SubsetDestroy( 'zz_Date_Time_loading' , P_NAME_RAZ );
SubsetDestroy( '}Processes' , P_NAME_RAZ );


#################################################################################
#                                                               Clear CUBE RP_PL : Cas 1
#################################################################################
P_NAME_RAZ = zCube | '_RAZ';
ViewDestroy( zCube , P_NAME_RAZ );
ViewCreate( zCube , P_NAME_RAZ );

#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Phase' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Phase' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Phase' , P_NAME_RAZ , pPhase, 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Phase' , P_NAME_RAZ );


#-- Create subset in Integration_Rate
IF( SubsetExists( 'Integration_Rate' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Integration_Rate' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Integration_Rate' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Integration_Rate' , P_NAME_RAZ , 'APP' , 1 );
#SubsetElementInsert( 'Integration_Rate' , P_NAME_RAZ , 'NO_APP' , 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Integration_Rate' , P_NAME_RAZ );


#-- Create subset in Legal_Organization
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetCreate( 'Legal_Organization' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Legal_Organization' )+1 );
   ElemE = DIMNM( 'Legal_Organization' , i );
      IF ( ATTRS ( 'Legal_Organization' , ElemE,'Source_entity' ) @= pSource ) ;
           SubsetElementInsert( 'Legal_Organization' , P_NAME_RAZ , ElemE , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Legal_Organization' , P_NAME_RAZ );


#-- Create subset in Gaap
SubsetDestroy( 'Gaap' , P_NAME_RAZ );
SubsetCreate( 'Gaap' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Gaap' ) + 1 );
   ElemG = DIMNM( 'Gaap' , i );
      IF( ELPAR( 'Gaap' , ElemG , 1 ) @= 'IFRS_Restatements_Mgmt_Tool' );
           SubsetElementInsert( 'Gaap' , P_NAME_RAZ , ElemG , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Gaap' , P_NAME_RAZ );


#-- Create subset in Period
IF( SubsetExists( 'Period' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'Period' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Period' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Period' , P_NAME_RAZ , pPeriod , 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Period' , P_NAME_RAZ );


#-- Clear Cube
ViewZeroOut( zCube , P_NAME_RAZ );

#-- Delete subset
ViewDestroy( zCube , P_NAME_RAZ );
SubsetDestroy( 'Phase' , P_NAME_RAZ );
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetDestroy( 'Integration_Rate' , P_NAME_RAZ );
SubsetDestroy( 'Period' , P_NAME_RAZ );
SubsetDestroy( 'Gaap' , P_NAME_RAZ );


#################################################################################
#                                                               Clear CUBE RP_PL : Cas 2
#################################################################################
P_NAME_RAZ = zCube | '_RAZ';
ViewDestroy( zCube , P_NAME_RAZ );
ViewCreate( zCube , P_NAME_RAZ );

#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Phase' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Phase' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Phase' , P_NAME_RAZ , pPhase, 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Phase' , P_NAME_RAZ );


#-- Create subset in Currency
IF( SubsetExists( 'Currency' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Currency' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Currency' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Currency' , P_NAME_RAZ , 'EUR' , 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Currency' , P_NAME_RAZ );


#-- Create subset in Integration_Rate
IF( SubsetExists( 'Integration_Rate' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Integration_Rate' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Integration_Rate' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Integration_Rate' , P_NAME_RAZ , 'NO_APP' , 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Integration_Rate' , P_NAME_RAZ );


#-- Create subset in Legal_Organization
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetCreate( 'Legal_Organization' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Legal_Organization' )+1 );
   ElemE = DIMNM( 'Legal_Organization' , i );
      IF ( ATTRS ( 'Legal_Organization' , ElemE,'Source_entity' ) @= pSource ) ;
           SubsetElementInsert( 'Legal_Organization' , P_NAME_RAZ , ElemE , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Legal_Organization' , P_NAME_RAZ );


#-- Create subset in Gaap
SubsetDestroy( 'Gaap' , P_NAME_RAZ );
SubsetCreate( 'Gaap' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Gaap' ) + 1 );
   ElemG = DIMNM( 'Gaap' , i );
      IF( ELPAR( 'Gaap' , ElemG , 1 ) @= 'IFRS_Restatements_Mgmt_Tool' );
           SubsetElementInsert( 'Gaap' , P_NAME_RAZ , ElemG , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Gaap' , P_NAME_RAZ );


#-- Create subset in Period
IF( SubsetExists( 'Period' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'Period' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Period' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Period' , P_NAME_RAZ , pPeriod , 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Period' , P_NAME_RAZ );


#-- Clear Cube
ViewZeroOut( zCube , P_NAME_RAZ );

#-- Delete subset
ViewDestroy( zCube , P_NAME_RAZ );
SubsetDestroy( 'Phase' , P_NAME_RAZ );
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetDestroy( 'Currency' , P_NAME_RAZ );
SubsetDestroy( 'Integration_Rate' , P_NAME_RAZ );
SubsetDestroy( 'Period' , P_NAME_RAZ );
SubsetDestroy( 'Gaap' , P_NAME_RAZ );


#################################################################################
#                                                               Clear CUBE RP_PL : Cas 3
#################################################################################
P_NAME_RAZ = zCube | '_RAZ';
ViewDestroy( zCube , P_NAME_RAZ );
ViewCreate( zCube , P_NAME_RAZ );

#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Phase' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Phase' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Phase' , P_NAME_RAZ , pPhase, 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Phase' , P_NAME_RAZ );


#-- Create subset in Integration_Rate
IF( SubsetExists( 'Integration_Rate' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Integration_Rate' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Integration_Rate' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Integration_Rate' , P_NAME_RAZ , 'APP' , 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Integration_Rate' , P_NAME_RAZ );


#-- Create subset in Legal_Organization
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetCreate( 'Legal_Organization' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Legal_Organization' )+1 );
   ElemE = DIMNM( 'Legal_Organization' , i );
      IF ( ATTRS ( 'Legal_Organization' , ElemE,'Source_entity' ) @= pSource ) ;
           SubsetElementInsert( 'Legal_Organization' , P_NAME_RAZ , ElemE , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Legal_Organization' , P_NAME_RAZ );


#-- Create subset in Gaap
SubsetDestroy( 'Gaap' , P_NAME_RAZ );
SubsetCreate( 'Gaap' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Gaap' ) + 1 );
   ElemG = DIMNM( 'Gaap' , i );
      IF( ElemG @= 'Local_Gaap_Mgmt_tool' );
           SubsetElementInsert( 'Gaap' , P_NAME_RAZ , ElemG , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Gaap' , P_NAME_RAZ );


#-- Create subset in Period
IF( SubsetExists( 'Period' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'Period' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Period' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Period' , P_NAME_RAZ , pPeriod , 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Period' , P_NAME_RAZ );


#-- Clear Cube
ViewZeroOut( zCube , P_NAME_RAZ );

#-- Delete subset
ViewDestroy( zCube , P_NAME_RAZ );
SubsetDestroy( 'Phase' , P_NAME_RAZ );
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetDestroy( 'Integration_Rate' , P_NAME_RAZ );
SubsetDestroy( 'Period' , P_NAME_RAZ );
SubsetDestroy( 'Gaap' , P_NAME_RAZ );


#################################################################################
#                                                               Clear CUBE RP_PL : Cas 4
#################################################################################
P_NAME_RAZ = zCube | '_RAZ';
ViewDestroy( zCube , P_NAME_RAZ );
ViewCreate( zCube , P_NAME_RAZ );

#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Phase' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Phase' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Phase' , P_NAME_RAZ , pPhase, 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Phase' , P_NAME_RAZ );


#-- Create subset in Currency
IF( SubsetExists( 'Currency' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Currency' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Currency' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Currency' , P_NAME_RAZ , 'EUR' , 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Currency' , P_NAME_RAZ );


#-- Create subset in Legal_Organization
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetCreate( 'Legal_Organization' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Legal_Organization' )+1 );
   ElemE = DIMNM( 'Legal_Organization' , i );
      IF ( ATTRS ( 'Legal_Organization' , ElemE,'Source_entity' ) @= pSource ) ;
           SubsetElementInsert( 'Legal_Organization' , P_NAME_RAZ , ElemE , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Legal_Organization' , P_NAME_RAZ );


#-- Create subset in Integration_Rate
IF( SubsetExists( 'Integration_Rate' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Integration_Rate' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Integration_Rate' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Integration_Rate' , P_NAME_RAZ , 'NO_APP' , 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Integration_Rate' , P_NAME_RAZ );


#-- Create subset in Gaap
SubsetDestroy( 'Gaap' , P_NAME_RAZ );
SubsetCreate( 'Gaap' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Gaap' ) + 1 );
   ElemG = DIMNM( 'Gaap' , i );
      IF( ElemG @= 'Local_Gaap_Mgmt_tool' );
           SubsetElementInsert( 'Gaap' , P_NAME_RAZ , ElemG , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Gaap' , P_NAME_RAZ );


#-- Create subset in Period
IF( SubsetExists( 'Period' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'Period' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Period' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Period' , P_NAME_RAZ , pPeriod , 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Period' , P_NAME_RAZ );


#-- Clear Cube
ViewZeroOut( zCube , P_NAME_RAZ );

#-- Delete subset
ViewDestroy( zCube , P_NAME_RAZ );
SubsetDestroy( 'Phase' , P_NAME_RAZ );
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetDestroy( 'Currency' , P_NAME_RAZ );
SubsetDestroy( 'Integration_Rate' , P_NAME_RAZ );
SubsetDestroy( 'Period' , P_NAME_RAZ );
SubsetDestroy( 'Gaap' , P_NAME_RAZ );


#################################################################################
#                                                               Clear CUBE RP_PL : Cas 5
#################################################################################
P_NAME_RAZ = zCube | '_RAZ';
ViewDestroy( zCube , P_NAME_RAZ );
ViewCreate( zCube , P_NAME_RAZ );

#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Phase' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Phase' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Phase' , P_NAME_RAZ , pPhase, 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Phase' , P_NAME_RAZ );


#-- Create subset in Legal_Organization
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetCreate( 'Legal_Organization' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Legal_Organization' )+1 );
   ElemE = DIMNM( 'Legal_Organization' , i );
      IF ( ATTRS ( 'Legal_Organization' , ElemE,'Source_entity' ) @= pSource ) ;
           SubsetElementInsert( 'Legal_Organization' , P_NAME_RAZ , ElemE , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Legal_Organization' , P_NAME_RAZ );


#-- Create subset in Integration_Rate
IF( SubsetExists( 'Integration_Rate' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Integration_Rate' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Integration_Rate' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Integration_Rate' , P_NAME_RAZ , 'APP' , 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Integration_Rate' , P_NAME_RAZ );


#-- Create subset in Gaap
SubsetDestroy( 'Gaap' , P_NAME_RAZ );
SubsetCreate( 'Gaap' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Gaap' ) + 1 );
   ElemG = DIMNM( 'Gaap' , i );
      IF( ElemG @= 'Eliminations_Mgmt_interco' );
           SubsetElementInsert( 'Gaap' , P_NAME_RAZ , ElemG , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Gaap' , P_NAME_RAZ );


#-- Create subset in Period
IF( SubsetExists( 'Period' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'Period' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Period' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Period' , P_NAME_RAZ , pPeriod , 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Period' , P_NAME_RAZ );


#-- Clear Cube
ViewZeroOut( zCube , P_NAME_RAZ );

#-- Delete subset
ViewDestroy( zCube , P_NAME_RAZ );
SubsetDestroy( 'Phase' , P_NAME_RAZ );
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetDestroy( 'Integration_Rate' , P_NAME_RAZ );
SubsetDestroy( 'Period' , P_NAME_RAZ );
SubsetDestroy( 'Gaap' , P_NAME_RAZ );



#################################################################################
#                                                               Clear CUBE RP_ECO_TYPE_CLI : Cas 1
#################################################################################
P_NAME_RAZ = zCube2 | '_RAZ';
ViewDestroy( zCube2 , P_NAME_RAZ );
ViewCreate( zCube2 , P_NAME_RAZ );

#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Phase' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Phase' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Phase' , P_NAME_RAZ , pPhase, 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Phase' , P_NAME_RAZ );


#-- Create subset in Integration_Rate
IF( SubsetExists( 'Integration_Rate' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Integration_Rate' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Integration_Rate' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Integration_Rate' , P_NAME_RAZ , 'APP' , 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Integration_Rate' , P_NAME_RAZ );


#-- Create subset in Legal_Organization
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetCreate( 'Legal_Organization' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Legal_Organization' )+1 );
   ElemE = DIMNM( 'Legal_Organization' , i );
      IF ( ATTRS ( 'Legal_Organization' , ElemE,'Source_entity' ) @= pSource ) ;
           SubsetElementInsert( 'Legal_Organization' , P_NAME_RAZ , ElemE , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Legal_Organization' , P_NAME_RAZ );


#-- Create subset in Gaap
SubsetDestroy( 'Gaap' , P_NAME_RAZ );
SubsetCreate( 'Gaap' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Gaap' ) + 1 );
   ElemG = DIMNM( 'Gaap' , i );
      IF( ELPAR( 'Gaap' , ElemG , 1 ) @= 'IFRS_Restatements_Mgmt_Tool' );
           SubsetElementInsert( 'Gaap' , P_NAME_RAZ , ElemG , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Gaap' , P_NAME_RAZ );


#-- Create subset in Period
IF( SubsetExists( 'Period' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'Period' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Period' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Period' , P_NAME_RAZ , pPeriod , 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Period' , P_NAME_RAZ );


#-- Clear Cube
ViewZeroOut( zCube2 , P_NAME_RAZ );

#-- Delete subset
ViewDestroy( zCube2 , P_NAME_RAZ );
SubsetDestroy( 'Phase' , P_NAME_RAZ );
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetDestroy( 'Integration_Rate' , P_NAME_RAZ );
SubsetDestroy( 'Period' , P_NAME_RAZ );
SubsetDestroy( 'Gaap' , P_NAME_RAZ );


#################################################################################
#                                                               Clear CUBE RP_ECO_TYPE_CLI : Cas 2
#################################################################################
P_NAME_RAZ = zCube2 | '_RAZ';
ViewDestroy( zCube2 , P_NAME_RAZ );
ViewCreate( zCube2 , P_NAME_RAZ );

#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Phase' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Phase' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Phase' , P_NAME_RAZ , pPhase, 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Phase' , P_NAME_RAZ );


#-- Create subset in Currency
IF( SubsetExists( 'Currency' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Currency' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Currency' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Currency' , P_NAME_RAZ , 'EUR' , 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Currency' , P_NAME_RAZ );


#-- Create subset in Integration_Rate
IF( SubsetExists( 'Integration_Rate' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Integration_Rate' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Integration_Rate' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Integration_Rate' , P_NAME_RAZ , 'NO_APP' , 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Integration_Rate' , P_NAME_RAZ );


#-- Create subset in Legal_Organization
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetCreate( 'Legal_Organization' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Legal_Organization' )+1 );
   ElemE = DIMNM( 'Legal_Organization' , i );
      IF ( ATTRS ( 'Legal_Organization' , ElemE,'Source_entity' ) @= pSource ) ;
           SubsetElementInsert( 'Legal_Organization' , P_NAME_RAZ , ElemE , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Legal_Organization' , P_NAME_RAZ );


#-- Create subset in Gaap
SubsetDestroy( 'Gaap' , P_NAME_RAZ );
SubsetCreate( 'Gaap' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Gaap' ) + 1 );
   ElemG = DIMNM( 'Gaap' , i );
      IF( ELPAR( 'Gaap' , ElemG , 1 ) @= 'IFRS_Restatements_Mgmt_Tool' );
           SubsetElementInsert( 'Gaap' , P_NAME_RAZ , ElemG , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Gaap' , P_NAME_RAZ );


#-- Create subset in Period
IF( SubsetExists( 'Period' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'Period' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Period' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Period' , P_NAME_RAZ , pPeriod , 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Period' , P_NAME_RAZ );


#-- Clear Cube
ViewZeroOut( zCube2 , P_NAME_RAZ );

#-- Delete subset
ViewDestroy( zCube2 , P_NAME_RAZ );
SubsetDestroy( 'Phase' , P_NAME_RAZ );
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetDestroy( 'Currency' , P_NAME_RAZ );
SubsetDestroy( 'Integration_Rate' , P_NAME_RAZ );
SubsetDestroy( 'Period' , P_NAME_RAZ );
SubsetDestroy( 'Gaap' , P_NAME_RAZ );


#################################################################################
#                                                               Clear CUBE RP_ECO_TYPE_CLI : Cas 3
#################################################################################
P_NAME_RAZ = zCube2 | '_RAZ';
ViewDestroy( zCube2 , P_NAME_RAZ );
ViewCreate( zCube2 , P_NAME_RAZ );

#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Phase' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Phase' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Phase' , P_NAME_RAZ , pPhase, 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Phase' , P_NAME_RAZ );


#-- Create subset in Integration_Rate
IF( SubsetExists( 'Integration_Rate' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Integration_Rate' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Integration_Rate' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Integration_Rate' , P_NAME_RAZ , 'APP' , 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Integration_Rate' , P_NAME_RAZ );


#-- Create subset in Legal_Organization
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetCreate( 'Legal_Organization' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Legal_Organization' )+1 );
   ElemE = DIMNM( 'Legal_Organization' , i );
      IF ( ATTRS ( 'Legal_Organization' , ElemE,'Source_entity' ) @= pSource ) ;
           SubsetElementInsert( 'Legal_Organization' , P_NAME_RAZ , ElemE , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Legal_Organization' , P_NAME_RAZ );


#-- Create subset in Gaap
SubsetDestroy( 'Gaap' , P_NAME_RAZ );
SubsetCreate( 'Gaap' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Gaap' ) + 1 );
   ElemG = DIMNM( 'Gaap' , i );
      IF( ElemG @= 'Local_Gaap_Mgmt_tool' );
           SubsetElementInsert( 'Gaap' , P_NAME_RAZ , ElemG , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Gaap' , P_NAME_RAZ );


#-- Create subset in Period
IF( SubsetExists( 'Period' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'Period' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Period' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Period' , P_NAME_RAZ , pPeriod , 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Period' , P_NAME_RAZ );


#-- Clear Cube
ViewZeroOut( zCube2 , P_NAME_RAZ );

#-- Delete subset
ViewDestroy( zCube2 , P_NAME_RAZ );
SubsetDestroy( 'Phase' , P_NAME_RAZ );
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetDestroy( 'Integration_Rate' , P_NAME_RAZ );
SubsetDestroy( 'Period' , P_NAME_RAZ );
SubsetDestroy( 'Gaap' , P_NAME_RAZ );


#################################################################################
#                                                               Clear CUBE RP_ECO_TYPE_CLI : Cas 4
#################################################################################
P_NAME_RAZ = zCube2 | '_RAZ';
ViewDestroy( zCube2 , P_NAME_RAZ );
ViewCreate( zCube2 , P_NAME_RAZ );

#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Phase' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Phase' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Phase' , P_NAME_RAZ , pPhase, 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Phase' , P_NAME_RAZ );


#-- Create subset in Currency
IF( SubsetExists( 'Currency' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Currency' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Currency' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Currency' , P_NAME_RAZ , 'EUR' , 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Currency' , P_NAME_RAZ );


#-- Create subset in Legal_Organization
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetCreate( 'Legal_Organization' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Legal_Organization' )+1 );
   ElemE = DIMNM( 'Legal_Organization' , i );
      IF ( ATTRS ( 'Legal_Organization' , ElemE,'Source_entity' ) @= pSource ) ;
           SubsetElementInsert( 'Legal_Organization' , P_NAME_RAZ , ElemE , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Legal_Organization' , P_NAME_RAZ );


#-- Create subset in Integration_Rate
IF( SubsetExists( 'Integration_Rate' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Integration_Rate' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Integration_Rate' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Integration_Rate' , P_NAME_RAZ , 'NO_APP' , 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Integration_Rate' , P_NAME_RAZ );


#-- Create subset in Gaap
SubsetDestroy( 'Gaap' , P_NAME_RAZ );
SubsetCreate( 'Gaap' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Gaap' ) + 1 );
   ElemG = DIMNM( 'Gaap' , i );
      IF( ElemG @= 'Local_Gaap_Mgmt_tool' );
           SubsetElementInsert( 'Gaap' , P_NAME_RAZ , ElemG , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Gaap' , P_NAME_RAZ );


#-- Create subset in Period
IF( SubsetExists( 'Period' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'Period' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Period' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Period' , P_NAME_RAZ , pPeriod , 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Period' , P_NAME_RAZ );


#-- Clear Cube
ViewZeroOut( zCube2 , P_NAME_RAZ );

#-- Delete subset
ViewDestroy( zCube2 , P_NAME_RAZ );
SubsetDestroy( 'Phase' , P_NAME_RAZ );
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetDestroy( 'Currency' , P_NAME_RAZ );
SubsetDestroy( 'Integration_Rate' , P_NAME_RAZ );
SubsetDestroy( 'Period' , P_NAME_RAZ );
SubsetDestroy( 'Gaap' , P_NAME_RAZ );


#################################################################################
#                                                               Clear CUBE RP_ECO_TYPE_CLI : Cas 5
#################################################################################
P_NAME_RAZ = zCube2 | '_RAZ';
ViewDestroy( zCube2 , P_NAME_RAZ );
ViewCreate( zCube2 , P_NAME_RAZ );

#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Phase' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Phase' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Phase' , P_NAME_RAZ , pPhase, 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Phase' , P_NAME_RAZ );


#-- Create subset in Legal_Organization
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetCreate( 'Legal_Organization' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Legal_Organization' )+1 );
   ElemE = DIMNM( 'Legal_Organization' , i );
      IF ( ATTRS ( 'Legal_Organization' , ElemE,'Source_entity' ) @= pSource ) ;
           SubsetElementInsert( 'Legal_Organization' , P_NAME_RAZ , ElemE , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Legal_Organization' , P_NAME_RAZ );


#-- Create subset in Currency
IF( SubsetExists( 'Currency' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Currency' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Currency' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Currency' , P_NAME_RAZ , 'EUR' , 1 );
#ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Currency' , P_NAME_RAZ );


#-- Create subset in Integration_Rate
IF( SubsetExists( 'Integration_Rate' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Integration_Rate' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Integration_Rate' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Integration_Rate' , P_NAME_RAZ , 'APP' , 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Integration_Rate' , P_NAME_RAZ );


#-- Create subset in Gaap
SubsetDestroy( 'Gaap' , P_NAME_RAZ );
SubsetCreate( 'Gaap' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Gaap' ) + 1 );
   ElemG = DIMNM( 'Gaap' , i );
      IF( ElemG @= 'Eliminations_Mgmt_interco' );
           SubsetElementInsert( 'Gaap' , P_NAME_RAZ , ElemG , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Gaap' , P_NAME_RAZ );


#-- Create subset in Period
IF( SubsetExists( 'Period' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'Period' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Period' , P_NAME_RAZ );
ENDIF;
SubsetElementInsert( 'Period' , P_NAME_RAZ , pPeriod , 1 );
ViewSubsetAssign( zCube2 , P_NAME_RAZ , 'Period' , P_NAME_RAZ );


#-- Clear Cube
ViewZeroOut( zCube2 , P_NAME_RAZ );

#-- Delete subset
ViewDestroy( zCube2 , P_NAME_RAZ );
SubsetDestroy( 'Phase' , P_NAME_RAZ );
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetDestroy( 'Currency' , P_NAME_RAZ );
SubsetDestroy( 'Integration_Rate' , P_NAME_RAZ );
SubsetDestroy( 'Period' , P_NAME_RAZ );
SubsetDestroy( 'Gaap' , P_NAME_RAZ );




#################################################################################
#                                                               Source Cube : ST_PARTNER_YTD
#################################################################################
P_NAME_SOURCE = zCube_Source | '_Vue';
ViewDestroy( zCube_Source , P_NAME_SOURCE );
ViewCreate( zCube_Source , P_NAME_SOURCE );


#-- Create subset in Integration_Rate
IF( SubsetExists( 'Integration_Rate' , P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( 'Integration_Rate' , P_NAME_SOURCE );
ELSE;
    SubsetCreate( 'Integration_Rate' , P_NAME_SOURCE );
ENDIF;
SubsetElementInsert( 'Integration_Rate' , P_NAME_SOURCE , 'APP' , 1 );
SubsetElementInsert( 'Integration_Rate' , P_NAME_SOURCE , 'NO_APP' , 1 );
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Integration_Rate' , P_NAME_SOURCE );


#-- Create subset in Activity
IF( SubsetExists( 'Activity' , P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( 'Activity' , P_NAME_SOURCE );
ELSE;
    SubsetCreate( 'Activity' , P_NAME_SOURCE );
ENDIF;
i=1;
WHILE( i < DIMSIZ ( 'Activity' ) + 1 );
   ElemA = DIMNM( 'Activity' , i );
           IF( ELLEV( 'Activity' , ElemA ) = 0 );
                  SubsetElementInsert( 'Activity' , P_NAME_SOURCE , ElemA , 1 );
           ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Activity' , P_NAME_SOURCE );


#-- Create subset in Currency
IF( SubsetExists( 'Currency' , P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( 'Currency' , P_NAME_SOURCE );
ELSE;
    SubsetCreate( 'Currency' , P_NAME_SOURCE );
ENDIF;
SubsetElementInsert( 'Currency' , P_NAME_SOURCE , 'LCL' , 1 );
SubsetElementInsert( 'Currency' , P_NAME_SOURCE , 'EUR' , 1 );
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Currency' , P_NAME_SOURCE );


#-- Create subset in Gaap
SubsetDestroy( 'Gaap' , P_NAME_SOURCE );
SubsetCreate( 'Gaap' , P_NAME_SOURCE );
i=1;
WHILE( i < DIMSIZ ( 'Gaap' ) + 1 );
   ElemG = DIMNM( 'Gaap' , i );
      IF( ELPAR( 'Gaap' , ElemG , 1 ) @= 'IFRS_Restatements_Mgmt_Tool' 
      % ElemG @= 'Local_Gaap_Mgmt_Tool'
      % ElemG @= 'Eliminations_Mgmt_interco' );
           SubsetElementInsert( 'Gaap' , P_NAME_SOURCE , ElemG , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Gaap' , P_NAME_SOURCE );


#-- Create subset in Legal_Organization
IF( SubsetExists( 'Legal_Organization' , P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( 'Legal_Organization' , P_NAME_SOURCE );
ELSE;
    SubsetCreate( 'Legal_Organization' , P_NAME_SOURCE );
ENDIF;
i=1;
WHILE( i < DIMSIZ ( 'Legal_Organization' )+1 );
   ElemE = DIMNM( 'Legal_Organization' , i );
           IF ( ATTRS ( 'Legal_Organization' , ElemE,'Source_entity' ) @= pSource ) ;
                  SubsetElementInsert( 'Legal_Organization' , P_NAME_SOURCE , ElemE , 1 );
           ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Legal_Organization' , P_NAME_SOURCE );


#-- Create subset in Management_Organization
IF( SubsetExists( 'Management_Organization' , P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( 'Management_Organization' , P_NAME_SOURCE );
ELSE;
    SubsetCreate( 'Management_Organization' , P_NAME_SOURCE );
ENDIF;
i=1;
WHILE( i < DIMSIZ ( 'Management_Organization' )+1 );
   ElemM = DIMNM( 'Management_Organization' , i );
           IF( ELLEV( 'Management_Organization' , ElemM ) = 0 );
                  SubsetElementInsert( 'Management_Organization' , P_NAME_SOURCE , ElemM , 1 );
           ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Management_Organization' , P_NAME_SOURCE );


#-- Create subset in Partner
IF( SubsetExists( 'Partner' , P_NAME_SOURCE ) =1 );
    SubsetDeleteAllElements( 'Partner' , P_NAME_SOURCE );
ELSE;
    SubsetCreate( 'Partner' , P_NAME_SOURCE );
ENDIF;
SubsetElementInsert( 'Partner' , P_NAME_SOURCE , 'Bus_partner' , 1 );
SubsetElementInsert( 'Partner' , P_NAME_SOURCE , 'VTD_Group' , 1 );
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Partner' , P_NAME_SOURCE );


#-- Create subset in Period
IF( SubsetExists( 'Period_YTD' , P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( 'Period_YTD' , P_NAME_SOURCE );
ELSE;
    SubsetCreate( 'Period_YTD' , P_NAME_SOURCE );
ENDIF;
SubsetElementInsert( 'Period_YTD' , P_NAME_SOURCE , pPeriod , 1 );
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Period_YTD' , P_NAME_SOURCE );


#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_SOURCE ) =1 );
    SubsetDeleteAllElements( 'Phase' , P_NAME_SOURCE );
ELSE;
    SubsetCreate( 'Phase' , P_NAME_SOURCE );
ENDIF;
SubsetElementInsert( 'Phase' , P_NAME_SOURCE , pPhase, 1 );
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Phase' , P_NAME_SOURCE );


#-- Create subset in Indicator
IF( SubsetExists( 'Indicator' , P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( 'Indicator' , P_NAME_SOURCE );
ELSE;
    SubsetCreate( 'Indicator' , P_NAME_SOURCE );
ENDIF;
i=1;
WHILE( i < DIMSIZ ( 'Indicator' ) + 1 );
   ElemI = DIMNM( 'Indicator' , i );
      IF ( ELLEV( 'Indicator' , ElemI ) = 0 );
           SubsetElementInsert( 'Indicator' , P_NAME_SOURCE , ElemI , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Indicator' , P_NAME_SOURCE );


#-- Update subset
ViewExtractSkipZeroesSet ( zCube_Source , P_NAME_SOURCE , 1 );
ViewExtractSkipRuleValuesSet ( zCube_Source , P_NAME_SOURCE , 0 );
ViewExtractSkipCalcsSet ( zCube_Source , P_NAME_SOURCE , 0 );


DatasourceNameForServer = zCube_Source ;
DatasourceCubeview = P_NAME_SOURCE ;

#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****





zRecord = Integration_Rate | '; ' | Activity | '; ' | Currency | '; ' | Legal_Organization | '; ' | Management_Organization | '; ' | Gaap | '; ' | 
Period_YTD | '; ' | Phase | '; ' | Indicator ;


#################################################################################
#                                                                             REJECT SECTION
#################################################################################
Nb_Lign = Nb_Lign + 1;

#-- If the Legal_org/Mgmt_Orga/Activity does not exist in the TC_CONTRACT_ECO_MO_TYP_CLI cube, this record is reject 
IF( CellGetS ( zCube_Transco_ECO , Activity , Legal_Organization , Management_Organization , 'STR_VAR1' ) @='' );
   Nb_Reject = Nb_Reject + 1;
   zError_Message = Activity | '/' | Legal_Organization  | '/' |  Management_Organization | ' does not exist in 
TC_CONTRACT_ECO_MO_TYP_CLI : Data is rejeted' ;
   CellPutS( zRecord , zCube_Reject , zProcess , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) , 'Record' );
   CellPutS( zError_Message , zCube_Reject , zProcess , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) , 'Error_Message' );
   ItemSkip;
ENDIF;


################################################################################
#                                                               INPUT SECTION : Cube => RP_PL
################################################################################
IF( Legal_Organization @= 'SU2003' & Indicator @= 'PL1150_AC_31' );
#    TextOutPut( 'Export_Partner.txt' , zRecord , NumberToString( Value) );
ENDIF;

#-- => RP_PL
IF( CellIsUpdateable( zCube , Activity , Currency , Gaap , Integration_Rate , Legal_Organization , 
Management_Organization , Period_YTD , Phase , Indicator ) = 1 );


   IF( (ELPAR( 'Gaap' , Gaap , 1 ) @= 'IFRS_Restatements_Mgmt_Tool' 
   & Partner @= 'Bus_Partner' & Integration_Rate @= 'APP' )

   % ( ELPAR( 'Gaap' , Gaap , 1 ) @= 'IFRS_Restatements_Mgmt_Tool'  
   & Currency @= 'EUR' & Partner @= 'Bus_Partner' & Integration_Rate @= 'NO_APP' ) 

   % ( Gaap @= 'Local_Gaap_Mgmt_tool' 
   & ( Currency @= 'LCL' % Currency @= 'EUR' )
   & Partner @= 'Bus_Partner' & Integration_Rate @= 'APP' ) 

   % ( Gaap @= 'Local_Gaap_Mgmt_tool' 
   & Currency @= 'EUR' & Partner @= 'Bus_Partner' & Integration_Rate @= 'NO_APP' ) 

   % ( Gaap @= 'Eliminations_Mgmt_interco'
   & Partner @= 'VTD_Group' & Integration_Rate @= 'APP' ) );

       Cumul = CellGetN( zCube , Activity , Currency , Gaap , Integration_Rate , Legal_Organization , 
       Management_Organization , Period_YTD , Phase , Indicator );

       CellPutN( Cumul + Value , zCube , Activity , Currency , Gaap , Integration_Rate , Legal_Organization , 
       Management_Organization , Period_YTD , Phase , Indicator );

   ENDIF;

ENDIF;




#################################################################################
#                                                                             REJECT SECTION
#################################################################################
#-- Type_Client
Type_Client = CellGetS ( zCube_Transco_ECO , Activity , Legal_Organization , Management_Organization , 'STR_VAR1' );

#-- Economic_Model
Economic_Model = CellGetS ( zCube_Transco_ECO , Activity , Legal_Organization , Management_Organization , 'STR_VAR2' );

#-- if the Type of client is empty, this record is reject
IF( ATTRS( 'Management_Organization' , Management_Organization , 'Type Contract'  ) @<> 'Contract bundle' 
& Type_Client @='' );
   Nb_Reject = Nb_Reject + 1;
   zError_Message = 'The Type of Client  is empty in the cube ' |  zCube_Transco_ECO | ' for ' |  zRecord ;
   CellPutS( zRecord ,  zCube_Reject , zProcess , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) , 'Record' );
   CellPutS( zError_Message , zCube_Reject , zProcess , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) , 'Error_Message' );
   Type_Client = 'Reject_Data';
ENDIF;

#-- if the type client does not exist in Type_Client dimension, this record is reject
IF( ATTRS( 'Management_Organization' , Management_Organization , 'Type Contract'  ) @<> 'Contract bundle' 
& Dimix('Type_Client', Type_Client ) = 0 );
   Nb_Reject = Nb_Reject + 1;
   zError_Message = Type_Client  | ' does not exist in dimension Type_Client  in the cube ' |  zCube_Transco_ECO | ' for ' |  zRecord;
   CellPutS( zRecord , zCube_Reject , zProcess , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) , 'Record' );
   CellPutS( zError_Message , zCube_Reject , zProcess  , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) , 'Error_Message' );
   Type_Client = 'Reject_Data';
ENDIF;

#-- if the Economic model is empty, this record is reject
IF( ATTRS( 'Management_Organization' , Management_Organization , 'Type Contract'  ) @<> 'Contract bundle' 
& Economic_Model @='' );
   Nb_Reject = Nb_Reject + 1;
   zError_Message = 'The Economic Model is empty in the cube ' |  zCube_Transco_ECO | ' for ' |  zrecord ;
   CellPutS( zRecord,  zCube_Reject , zProcess , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) , 'Record');
   CellPutS( zError_message , zCube_Reject , zProcess , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) , 'Error_Message');
   Economic_Model = 'Reject_Data';
ENDIF;

#-- if the Economic Model does not exist in Economic_Model dimension, this record is reject
IF( ATTRS( 'Management_Organization' , Management_Organization , 'Type Contract'  ) @<> 'Contract bundle' 
& Dimix('Economic_Model', Economic_Model ) = 0 );
   Nb_Reject = Nb_Reject + 1;
   zError_Message = Economic_Model  | ' does not exist in dimension Economic_Model  in the cube ' |  zCube_Transco_ECO | ' for ' |  zRecord;
   CellPutS( zRecord,  zCube_Reject , zProcess , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) , 'Record');
   CellPutS( zError_message , zCube_Reject , zProcess , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) , 'Error_Message');
   Economic_Model = 'Reject_Data';
ENDIF;

#-- if the Type of contract is "Contract_Bundle" => We affected NA to Economic Model & Type Client 
IF( ATTRS( 'Management_Organization' , Management_Organization , 'Type Contract' ) @= 'Contract bundle' );
    Economic_Model = 'NA';
   Type_Client = 'NA';
ENDIF;


################################################################################
#                                                               INPUT SECTION : Cube => RP_Economic_Type_Client
################################################################################

#-- => RP_Economic_Type_Client
IF( CellIsUpdateable( zCube2 , Activity , Currency , Economic_Model , Gaap , 
Integration_Rate , Legal_Organization , Management_Organization , Period_YTD , Phase , Type_Client , Indicator ) = 1 ) ;

   IF( (ELPAR( 'Gaap' , Gaap , 1 ) @= 'IFRS_Restatements_Mgmt_Tool' 
   & Partner @= 'Bus_Partner' & Integration_Rate @= 'APP' )

   % ( ELPAR( 'Gaap' , Gaap , 1 ) @= 'IFRS_Restatements_Mgmt_Tool'  
   & Currency @= 'EUR' & Partner @= 'Bus_Partner' & Integration_Rate @= 'NO_APP' ) 

   % ( Gaap @= 'Local_Gaap_Mgmt_tool' 
   & ( Currency @= 'LCL' % Currency @= 'EUR' )
   & Partner @= 'Bus_Partner' & Integration_Rate @= 'APP' ) 

   % ( Gaap @= 'Local_Gaap_Mgmt_tool' 
   & Currency @= 'EUR' & Partner @= 'Bus_Partner' & Integration_Rate @= 'NO_APP' ) 

   % ( Gaap @= 'Eliminations_Mgmt_interco'
   & Partner @= 'VTD_Group' & Integration_Rate @= 'APP' ) );

          Cumul = CellGetN(  zCube2 , Activity , Currency , Economic_Model , Gaap , 
          Integration_Rate , Legal_Organization , Management_Organization , Period_YTD , pPhase , Type_Client , Indicator );

          CellPutN( Cumul + Value , zCube2 , Activity , Currency , Economic_Model , Gaap , 
          Integration_Rate , Legal_Organization , Management_Organization , Period_YTD , pPhase , Type_Client , Indicator );

   ENDIF;

ENDIF;

IF( Economic_Model @<> 'Reject_Data' & Type_Client @<> 'Reject_Data' );
     Nb_Load = Nb_Load + 1;
ENDIF;

#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****





#-- Delete view and subsets
ViewDestroy( zCube_Source , P_NAME_SOURCE );
SubsetDestroy( 'Integration_Rate' , P_NAME_SOURCE );
SubsetDestroy( 'Activity' , P_NAME_SOURCE );
SubsetDestroy( 'Currency' , P_NAME_SOURCE );
SubsetDestroy( 'Gaap' , P_NAME_SOURCE );
SubsetDestroy( 'Legal_Organization' , P_NAME_SOURCE );
SubsetDestroy( 'Management_Organization' , P_NAME_SOURCE );
SubsetDestroy( 'Partner' , P_NAME_SOURCE );
SubsetDestroy( 'Period_YTD' , P_NAME_SOURCE );
SubsetDestroy( 'Phase' , P_NAME_SOURCE );
SubsetDestroy( 'Indicator' , P_NAME_SOURCE );


zDateTimeLoadingEnd = TIMST(now,'\Y-\M-\D \h:\i:\s');

#################################################################################
#                                                                             PROCESS with PERIOD and INSTANCE
#################################################################################
zCube_Process_PP = 'ZZ_PROCESS_Detail_Instance';
#IF (pCountry@='CM');
#     pChore='Task5_CM_Import_CM_Data_Export_CO_Data';
#ELSE;
#     pChore='Task4_CO_Import_Vector_Parameter_Export_CM_Data_' | pCountry;
#ENDIF;

#CellPutS(zDateTimeLoadingStart , zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,'Start_date');
#CellPutS(zDateTimeLoadingEnd , zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,'End_date');
#CellPutS(numbertostring(nb_lign) , zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,'Nb_Input_records');
#CellPutS(numbertostring(nb_reject) , zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,'Nb_reject_records');
#CellPutS(numbertostring(nb_load) ,  zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry ,psource, 'Nb_load_records');

IF(nb_lign = nb_load);
#    CellPutS('OK' ,zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,  'Status');
ELSE;
#    CellPutS('KO' ,zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,  'Status');
ENDIF;


#################################################################################
#                                                                             PROCESS with PERIOD and PHASE
#################################################################################
zCube_Process_PP = 'ZZ_PROCESS_DETAIL_PERIOD_PHASE';

CellPutS(zDateTimeLoadingStart , zCube_Process_PP, zProcess ,pPeriod, Phase,zDateLoadingStart , 'Start_date');
CellPutS(zDateTimeLoadingEnd , zCube_Process_PP, zProcess ,pPeriod , Phase,zDateLoadingStart , 'End_date');
CellPutS(numbertostring(nb_lign) , zCube_Process_PP, zProcess ,pPeriod ,Phase,zDateLoadingStart , 'Nb_Input_records');
CellPutS(numbertostring(nb_reject) , zCube_Process_PP, zProcess ,pPeriod , Phase,zDateLoadingStart , 'Nb_reject_records');
CellPutS(numbertostring(nb_load) ,  zCube_Process_PP, zProcess ,pPeriod , Phase,zDateLoadingStart , 'Nb_load_records');

IF(nb_lign = nb_load);
    CellPutS('OK' ,zCube_Process_PP, zProcess ,pPeriod , Phase,zDateLoadingStart ,   'Status');
ELSE;
    CellPutS('KO' ,  zCube_Process_PP, zProcess ,pPeriod , Phase,zDateLoadingStart , 'Status');
ENDIF;

#################################################################################
#                                                                             DETAIL PROCESS SECTION
#################################################################################


CellPutS( zDateTimeLoadingStart , zCube_Process , zProcess , zDateLoadingStart , 'Start_date' );
CellPutS( zDateTimeLoadingEnd , zCube_Process , zProcess , zDateLoadingStart , 'End_date' );
CellPutS( numbertostring(nb_lign) , zCube_Process , zProcess , zDateLoadingStart , 'Nb_Input_records' );
CellPutS( numbertostring(nb_reject) , zCube_Process , zProcess , zDateLoadingStart , 'Nb_reject_records' );
CellPutS( numbertostring(nb_load) , zCube_Process , zProcess , zDateLoadingStart , 'Nb_load_records' );

IF( Nb_Lign = Nb_Load );
    CellPutS('OK' , zCube_Process, zProcess ,zDateLoadingStart , 'Status');
ELSE;
    CellPutS('KO' , zCube_Process, zProcess ,zDateLoadingStart , 'Status');
    ItemReject( ' Process exited with errors at ' | TIME |  ' on ' | TODAY | '=> Check cubes : zz_Process_Detail and  zz_Process_Reject' );
ENDIF;

#################################################################################
#                                                                             END PROCESS
#################################################################################





#endregion