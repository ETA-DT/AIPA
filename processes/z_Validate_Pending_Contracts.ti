#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#########################################
# Project : Tango - create a new contract (=management unit)
# Created by : MRE
# Created at : 16/09/2011
# Modified by : MFS
# Modified at : 30/07/2015
# Modify reason : addind attributes Business_Model and Sub_Activity of a contract
# Modified by : BTA
# Modified at : 21/11/2016
# Modify reason : Suppression des langues German, Dutch et Portuguese
#########################################

zCube = 'z_Contract_Pending_Approval';

P_NAME = zCube | '_validation';

ViewDestroy( zCube , P_NAME );
ViewCreate( zCube , P_NAME );

# 1. Create view
IF( SubsetExists( 'z_Contract_Measures' , P_NAME ) = 1 );
    SubsetDeleteAllElements( 'z_Contract_Measures' , P_NAME );
ELSE;
    SubsetCreate( 'z_Contract_Measures' , P_NAME );
ENDIF;
SubsetElementInsert( 'z_Contract_Measures' , P_NAME , 'Validation' , 1 );

ViewSubsetAssign( zCube , P_NAME, 'z_Contract_Measures' , P_NAME );

# 2. Datasource

#DatasourceNameForServer = P_NAME;
DataSourceType='VIEW';
DatasourceCubeview = P_NAME;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****

# contract is validated
if( Value = 1 );

  vRegionAlias=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Country_Region');
  vRegion=DimensionElementPrincipalName( 'Management_Organization', vRegionAlias );

  # Local management unit code
  vLocal=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Local_Management_Unit_Code');
  if( vRegion @= 'OnDemand' % ELISANC( 'Management_Organization', 'OnDemand', vRegion ) = 1);
    # VTOD
    DimensionElementInsert('z_management_unit_us_oracle', '', vLocal, 'n');
  Else;
    # general case
    DimensionElementInsert('z_management_organization', '', vLocal, 'n');
  endif;

  # Tango management unit code
  DimensionElementInsert('Management_Organization', '', ContractCode, 'n');
  DimensionElementComponentAdd('Management_Organization', vRegion, ContractCode, 1);

endif;

# contract is rejected => data is deleted
if( Value = 2 );
DimensionElementDelete('z_Contract_Pending_Approval', ContractCode);
endif;
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

# contract is validated
if( Value = 1 );

  vRegionAlias=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Country_Region');
  vRegion=DimensionElementPrincipalName( 'Management_Organization', vRegionAlias );

  vLocal=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Local_Management_Unit_Code');
  vCostCenter=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Cost_center');
  vLegalEntity=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Legal_entity');
  vActivity=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Sub-Activity');
  vTypeClient=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Type_of_client');
  vEcoModel=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Economic_model');

##### PMM BM ######

  vBusinessModel=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Business_model');


##################


  if( vRegion @= 'OnDemand' % ELISANC( 'Management_Organization', 'OnDemand', vRegion ) = 1);
    # VTOD
    CellPutS(ContractCode,'TC_CONTRACT_US_ORACLE', vLocal, vCostCenter, vLegalEntity, 'STR_VAR1');
    CellPutS(vActivity, 'TC_CONTRACT_US_ORACLE', vLocal, vCostCenter, vLegalEntity, 'STR_VAR2');
  Else;
    # general case
    CellPutS(ContractCode, 'TC_CONTRACT', vLocal, vLegalEntity, 'STR_VAR1');
    CellPutS(vActivity, 'TC_CONTRACT', vLocal, vLegalEntity, 'STR_VAR2');
    if( vRegion @= 'VTNL' % ELISANC( 'Management_Organization', 'VTNL', vRegion ) = 1);
        vLOB=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Line_of_business');
        CellPutS(vLOB, 'TC_CONTRACT', vLocal, vLegalEntity, 'STR_VAR3');
    endif;
  endif;

  # Tango management unit code
  vType=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Type');
  vManagementStatus=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Management_unit_status');
  vStartDate=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Start_Date');
  vEndDate=CellGetS('z_Contract_Pending_Approval', ContractCode, 'End_Date');
  vOptionYears=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Option_Years');
  vName=CellGetS('z_Contract_Pending_Approval', ContractCode, 'Management_Unit_Name');
  AttrPutS(vType, 'Management_Organization', ContractCode, 'Type Contract');
  AttrPutS(vManagementStatus, 'Management_Organization', ContractCode, 'Contract Status');
  AttrPutS(vStartDate, 'Management_Organization', ContractCode, 'Start date');
  AttrPutS(vEndDate, 'Management_Organization', ContractCode, 'End date without option');
  AttrPutS(vOptionYears, 'Management_Organization', ContractCode, 'End date with option');
  AttrPutS(vName, 'Management_Organization', ContractCode, 'English');
  AttrPutS(vName, 'Management_Organization', ContractCode, 'French');


##### PMM BM ######
  AttrPutS(vActivity, 'Management_Organization', ContractCode, 'Sub_Activity');
  AttrPutS(vBusinessModel, 'Management_Organization', ContractCode, 'Business_Model');

##################



  CellPutS(vTypeClient, 'TC_CONTRACT_ECO_MO_TYP_CLI', vActivity, vLegalEntity, ContractCode, 'STR_VAR1');
  CellPutS(vEcoModel, 'TC_CONTRACT_ECO_MO_TYP_CLI', vActivity, vLegalEntity, ContractCode, 'STR_VAR2');

 ExecuteProcess('z_delete_temporary_contracts','pContractCode',ContractCode);

endif;


#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


#################################################################################
#  LAUNCH PROCESS update BM hierarchy
#################################################################################

ExecuteProcess('DB_REBUILD_BM_HIERARCHY', 'P_N_DEBUG', 0 );

#################################################################################
#SecurityRefresh désactivé car lancé à la fin du process DB_REBUILD_BM_HIERARCHY
#SecurityRefresh;
#endregion