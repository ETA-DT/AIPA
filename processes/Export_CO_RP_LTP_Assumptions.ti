#region Prolog
#########################################
# Project : Tango - Multi-instance LTP
# Created by : MAN
# Created at : 19/06/2012
# Modified by :
# Modified at :
# Modify reason :
#########################################


#****Begin: Generated Statements***
#****End: Generated Statements****


DatasourceASCIIDelimiter =';';

nb_lign = 0;
nb_reject = 0;
nb_load = 0;

zCube = 'RP_LTP';
zCube_Process = 'zz_Process_Detail_Instance';

zProcess = 'Export_CO_RP_LTP_Assumptions';

zDateLoadingStart = TIMST(now,'\Y-\M-\D');
zDateTimeLoadingStart = TIMST(now,'\Y-\M-\D \h:\i:\s');

vDim='Period';
vDim2='Legal_Organization';

pPeriod=CellGetS( 'z_Admin_Param' , 'PERIOD_LTP' , 'STR_VAR1');


######
#Call process DB_zz_Date_Time_loading in order to add the new day in the dimension zz_Date_Time_loading
ExecuteProcess('DB_zz_Date_Time_loading');
######


#################################################################################
#                                                               Source CUBE RP_LTP
#################################################################################
P_NAME_SOURCE = zCube | '_Vue';
ViewDestroy( zCube , P_NAME_SOURCE );
ViewCreate( zCube , P_NAME_SOURCE );

#-- Create subset in Legal_Organization
SubsetDestroy( vDim2 , P_NAME_SOURCE );
SubsetCreate( vDim2 , P_NAME_SOURCE );
i=1;
WHILE( i < DIMSIZ ( vDim2 )+1 );
   ElemE = DIMNM( vDim2 , i );
      IF ( ATTRS ( vDim2 , ElemE,'Country_entity' ) @<>'' ) ;
           SubsetElementInsert( vDim2 , P_NAME_SOURCE , ElemE , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , P_NAME_SOURCE , vDim2 , P_NAME_SOURCE );

#-- Create subset in Period
IF( SubsetExists( vDim, P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( vDim , P_NAME_SOURCE );
ELSE;
    SubsetCreate( vDim , P_NAME_SOURCE );
ENDIF;
j=NUMBR('1');
YEAR_TMP = NUMBR(pPeriod) +1 ;

WHILE( j <17);
    
     ElemPeriod = 'F_year_' | STR(YEAR_TMP , 4, 0);
     SubsetElementInsert( vDim , P_NAME_SOURCE , ElemPeriod , 1 );
     YEAR_TMP = YEAR_TMP+1;
     j=j+1;

END;


ViewSubsetAssign( zCube, P_NAME_SOURCE , vDim , P_NAME_SOURCE );

#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_SOURCE ) =1 );
    SubsetDeleteAllElements( 'Phase' , P_NAME_SOURCE );
ELSE;
    SubsetCreate( 'Phase' , P_NAME_SOURCE );
ENDIF;

SubsetElementInsert( 'Phase' , P_NAME_SOURCE , 'LTP_' | pPeriod | '_VC'  , 1 );

ViewSubsetAssign( zCube , P_NAME_SOURCE , 'Phase' , P_NAME_SOURCE );


#-- Create subset in Indicator_LTP
IF( SubsetExists( 'Indicator_LTP' , P_NAME_SOURCE ) =1 );
    SubsetDeleteAllElements( 'Indicator_LTP' , P_NAME_SOURCE );
ELSE;
    SubsetCreate( 'Indicator_LTP' , P_NAME_SOURCE );
ENDIF;
SubsetElementInsert( 'Indicator_LTP' , P_NAME_SOURCE , 'Inflation' , 1 );
SubsetElementInsert( 'Indicator_LTP' , P_NAME_SOURCE , 'Inflation_Count_Tech' , 1 );
SubsetElementInsert( 'Indicator_LTP' , P_NAME_SOURCE , 'Inflation_Count_Tech_2' , 1 );
SubsetElementInsert( 'Indicator_LTP' , P_NAME_SOURCE , 'Inflation_Hold_Tech' , 1 );
SubsetElementInsert( 'Indicator_LTP' , P_NAME_SOURCE , 'Fuel_Price' , 1 );
SubsetElementInsert( 'Indicator_LTP' , P_NAME_SOURCE , 'Fuel_Price_SCENARIO1' , 1 );
SubsetElementInsert( 'Indicator_LTP' , P_NAME_SOURCE , 'Fuel_Price_SCENARIO2' , 1 );

ViewSubsetAssign( zCube , P_NAME_SOURCE , 'Indicator_LTP' , P_NAME_SOURCE );


#-- Create subset in LTP_Component
IF( SubsetExists( 'LTP_Components' , P_NAME_SOURCE ) =1 );
    SubsetDeleteAllElements( 'LTP_Components' , P_NAME_SOURCE );
ELSE;
    SubsetCreate( 'LTP_Components' , P_NAME_SOURCE );
ENDIF;

i=1;
WHILE( i < DIMSIZ ( 'LTP_Components' )+1 );
    ElemP = DIMNM( 'LTP_Components' , i );
    IF( ELLEV( 'LTP_Components' , ElemP ) = 0 & ELISANC( 'LTP_Components' , 'LTP' , ElemP) > 0 );
        SubsetElementInsert( 'LTP_Components' , P_NAME_SOURCE , ElemP , 1 );
    ENDIF;
    i=i+1;
END;

ViewSubsetAssign( zCube , P_NAME_SOURCE , 'LTP_Components' , P_NAME_SOURCE );

#-- Update subset
ViewExtractSkipZeroesSet ( zCube , P_NAME_SOURCE , 1 );
ViewExtractSkipRuleValuesSet ( zCube , P_NAME_SOURCE , 1 );
ViewExtractSkipCalcsSet ( zCube , P_NAME_SOURCE , 1 );



DatasourceNameForServer = zCube ;
DatasourceCubeview = P_NAME_SOURCE ;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****



Nb_Lign = Nb_Lign + 1;

Country = ATTRS( 'Legal_Organization' , Legal_Organization , 'Country_Entity' ) ;

zPrefixe = Country | '_Data_LTP_Assumptions_';

Export_File = '\\'| CellGetS( 'z_Admin_Param_Instance' , 'SERVER_NAME' , Country ,'STR_VAR1') | CellGetS( 'z_Admin_Param_Instance' , 'REP_CM_DATA_EXPO
RT' , Country , 'STR_VAR1' ) | Country | CellGetS( 'z_Admin_Param_Instance' , 'REP_DATA_EXPORT' , Country , 'STR_VAR1' ) |
 '\' |  zPrefixe | zCube | '.csv';

ASCIIOUTPUT( Export_File , Activity , Currency , LTP_Components , Weighting, Legal_Organization ,  Period , Phase , Indicator_LTP , Value );

Nb_Load = Nb_Load + 1;

#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


#-- Suppress view
ViewDestroy( zCube , P_NAME_SOURCE );
SubsetDestroy( vDim , P_NAME_SOURCE );
SubsetDestroy( vDim2 , P_NAME_SOURCE );
SubsetDestroy( 'Phase' , P_NAME_SOURCE );
SubsetDestroy( 'Indicator_LTP' , P_NAME_SOURCE );
SubsetDestroy( 'LTP_Components' , P_NAME_SOURCE );

zDateTimeLoadingEnd = TIMST(now,'\Y-\M-\D \h:\i:\s');

#################################################################################
#                                                                             PROCESS with PERIOD and INSTANCE
#################################################################################
zCube_Process_PP = 'ZZ_PROCESS_Detail_Instance';

pChore = 'LTP_Task5_CM_Import_CM_Data_Export_CO_Data';

pCountry = CellGetS( 'z_Admin_Param' , 'COUNTRY' , 'STR_VAR1');
pSource = 'CORE_MODEL';
pPeriod = CellGetS( 'z_Admin_Param' , 'PERIOD_LTP' , 'STR_VAR1');

CellPutS( zDateTimeLoadingStart , zCube_Process_PP , pChore , zProcess , pPeriod , zDateLoadingStart , pCountry , pSource , 'Start_date' );
CellPutS( zDateTimeLoadingEnd , zCube_Process_PP , pChore , zProcess , pPeriod , zDateLoadingStart , pCountry , pSource , 'End_date' );
CellPutS( NumberToString(Nb_Lign) , zCube_Process_PP , pChore , zProcess , pPeriod , zDateLoadingStart , pCountry , pSource , 'Nb_Input_records' );
CellPutS( NumberToString(Nb_Load) , zCube_Process_PP , pChore , zProcess , pPeriod , zDateLoadingStart , pCountry , pSource , 'Nb_load_records' );
CellPutS( 'OK' , zCube_Process_PP , pChore , zProcess , pPeriod , zDateLoadingStart , pCountry , pSource , 'Status' );


#################################################################################
#                                                                             DETAIL PROCESS SECTION
#################################################################################
zCube_Process = 'ZZ_PROCESS_DETAIL';

CellPutS( zDateTimeLoadingStart , zCube_Process , zProcess , zDateLoadingStart , 'Start_date' );
CellPutS( zDateTimeLoadingEnd , zCube_Process ,  zProcess , zDateLoadingStart , 'End_date' );
CellPutS( NumberToString(Nb_Lign) , zCube_Process , zProcess , zDateLoadingStart , 'Nb_Input_records' );
CellPutS( NumberToString(Nb_Load) , zCube_Process , zProcess , zDateLoadingStart , 'Nb_load_records' );
CellPutS( 'OK' , zCube_Process , zProcess , zDateLoadingStart , 'Status' );

#################################################################################
#                                                                             END PROCESS
#################################################################################

#endregion