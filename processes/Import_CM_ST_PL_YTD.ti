#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#########################################
# Project : Tango - Multi-instance
# Created by :RSJC
# Created at : 14/01/2016
# Modified by :
# Modified at :
# Modify reason :
#########################################

zCube = 'ST_PL_YTD';
zCube_Reject = 'ZZ_PROCESS_REJECT_INSTANCE';

nb_lign = 0;
nb_reject = 0;
nb_load = 0;

zProcess = 'Import_CM_ST_PL_YTD';
zDateLoadingStart = TIMST(now,'\Y-\M-\D');
zDateTimeLoadingStart = TIMST(now,'\Y-\M-\D \h:\i:\s');

#Source_File = '\\'|CellGetS( 'z_Admin_Param_Instance' , 'SERVER_NAME' ,'CM','STR_VAR1') | CellGetS( 'z_Admin_Param_Instance' , 'REP_CO_DATA_EXPORT' ,
#CM', 'STR_VAR1') |  'RDH_' | zCube | pSource | 'ACT_' | pPeriod | '.csv';

Source_File ='\\tfr-ap019298\Tango\TM1Data\core_model_dev\Input\Data_Core_Model\' | 'RDH_' | zCube | '_' | pSource | '_ACT_' | pPeriod | '.csv';
DataSourceNameForServer = Source_File;

#################################################################################
#                                                               Clear Reject Cube
#################################################################################

######
#Call process DB_zz_Date_Time_loading in order to add the new day in the dimension zz_Date_Time_loading
ExecuteProcess('DB_zz_Date_Time_loading');
######

P_NAME_RAZ = zCube_Reject | '_' |  zCube | '_' | pSource | '_' | pPeriod | '_RAZ';
ViewDestroy( zCube_Reject , P_NAME_RAZ );
ViewCreate( zCube_Reject , P_NAME_RAZ );

#-- Create subset in zz_Date_Time_loading and }Processes
IF( SubsetExists( 'zz_Date_Time_loading' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'zz_Date_Time_loading' , P_NAME_RAZ );
ELSE;
    SubsetCreate( 'zz_Date_Time_loading' , P_NAME_RAZ );
ENDIF;

IF( SubsetExists( '}Processes' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( '}Processes' , P_NAME_RAZ);
ELSE;
    SubsetCreate( '}Processes' , P_NAME_RAZ );
ENDIF;

IF( SubsetExists( 'zz_Process_Source' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'zz_Process_Source' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'zz_Process_Source' , P_NAME_RAZ );
ENDIF;

SubsetElementInsert( 'zz_Date_Time_loading' , P_NAME_RAZ ,zDateLoadingStart , 1 );
SubsetElementInsert( '}Processes' , P_NAME_RAZ , zProcess , 1 );
SubsetElementInsert( 'zz_Process_Source' , P_NAME_RAZ , pSource , 1 );

ViewSubsetAssign( zCube_Reject , P_NAME_RAZ , 'zz_Date_Time_loading' , P_NAME_RAZ);
ViewSubsetAssign( zCube_Reject , P_NAME_RAZ , '}Processes', P_NAME_RAZ);
ViewSubsetAssign( zCube_Reject , P_NAME_RAZ , 'zz_Process_Source', P_NAME_RAZ);

#-- Update subset
ViewExtractSkipZeroesSet ( zCube_Reject , P_NAME_RAZ , 1 );
ViewExtractSkipRuleValuesSet ( zCube_Reject , P_NAME_RAZ , 1 );
ViewExtractSkipCalcsSet ( zCube_Reject , P_NAME_RAZ , 1 );

#-- Clear cube
ViewZeroOut( zCube_Reject , P_NAME_RAZ );

#-- Delete subset
ViewDestroy( zCube_Reject , P_NAME_RAZ );
SubsetDestroy( 'zz_Date_Time_loading' , P_NAME_RAZ );
SubsetDestroy( '}Processes' , P_NAME_RAZ );


#################################################################################
#                                                               Clear CUBE
#################################################################################
P_NAME_RAZ = zCube  | '_' |  zCube | '_' | pSource | '_' | pPeriod | '_RAZ';
ViewDestroy( zCube , P_NAME_RAZ );
ViewCreate( zCube , P_NAME_RAZ );


#-- Create subset in Legal_Organization
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetCreate( 'Legal_Organization' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Legal_Organization' )+1 );
   ElemE = DIMNM( 'Legal_Organization' , i );
       IF ( ATTRS ( 'Legal_Organization' , ElemE,'Source_entity' ) @= pSource) ;
           SubsetElementInsert( 'Legal_Organization' , P_NAME_RAZ , ElemE , 1);
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Legal_Organization' , P_NAME_RAZ );

#-- Create subset in Indicator
SubsetDestroy( 'Indicator' , P_NAME_RAZ );
SubsetCreate( 'Indicator' , P_NAME_RAZ );
i=1;
WHILE( i < DIMSIZ ( 'Indicator' ) + 1 );
   ElemI = DIMNM( 'Indicator' , i );
      IF ( ELISANC( 'Indicator' , 'Ind_fi_pl_nat' , ElemI ) > 0 % ELISANC( 'Indicator' , 'Ind_op' , ElemI ) > 0  );
           SubsetElementInsert( 'Indicator' , P_NAME_RAZ , ElemI , 1 );
      ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Indicator' , P_NAME_RAZ );

#-- Create subset in Period_YTD
IF( SubsetExists( 'Period_YTD' , P_NAME_RAZ ) = 1 );
    SubsetDeleteAllElements( 'Period_YTD' , P_NAME_RAZ);
ELSE;
    SubsetCreate( 'Period_YTD' , P_NAME_RAZ );
ENDIF;

IF( SCAN('YTD',pPeriod)<>0 );
    SubsetElementInsert( 'Period_YTD' , P_NAME_RAZ , pPeriod , 1 );
ELSE;
    i=1;
    WHILE( i < DIMSIZ ( 'Period_YTD' ) + 1 );
       ElemP = DIMNM('Period_YTD', i );
          IF ( ELISANC( 'Period_YTD' , pPeriod , ElemP ) > 0 & ELLEV('Period_YTD', ElemP) = 0);
               SubsetElementInsert( 'Period_YTD' , P_NAME_RAZ , ElemP , 1 );
          ENDIF;
        i=i+1;
    END;
ENDIF;
ViewSubsetAssign( zCube , P_NAME_RAZ , 'Period_YTD' , P_NAME_RAZ );

#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_RAZ ) =1 );
    SubsetDeleteAllElements( 'Phase' , P_NAME_RAZ  );
ELSE;
    SubsetCreate( 'Phase' , P_NAME_RAZ  );
ENDIF;
SubsetElementInsert( 'Phase' , P_NAME_RAZ  , 'ACT' , 1 );
SubsetElementInsert( 'Phase' , P_NAME_RAZ  , 'MAN_AJUST' , 1 );
ViewSubsetAssign( zCube , P_NAME_RAZ  , 'Phase' , P_NAME_RAZ  );

#-- Clear cube
ViewZeroOut( zCube , P_NAME_RAZ );


#-- Delete subset
ViewDestroy( zCube , P_NAME_RAZ );
SubsetDestroy( 'Indicator' , P_NAME_RAZ );
SubsetDestroy( 'Legal_Organization' , P_NAME_RAZ );
SubsetDestroy( 'Period' , P_NAME_RAZ );
SubsetDestroy( 'Phase' , P_NAME_RAZ );


#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

zrecord = vActivity | ';' | vCurrency | ';' | vGaap | ';' | vLegal_Organization | ';' | vManagement_Organization | ';' | vPeriod_YTD | ';' | vPhase | 
';' | vIndicator | ';' | numbertostring(vValue) ;

#################################################################################
#                                                                             REJECT SECTION
#################################################################################
nb_lign=nb_lign+1;

# if the Period is different of the period in the file this record is reject
#IF( vPeriod_YTD @<> pPeriod );
#   nb_reject=nb_reject+1;
#   zerror_message= 'Rejected Data : The period in parameter is different of the period in the file at line ' |  numbertostring(nb_lign) ;
#      CellPutS( zRecord , zCube_Reject , zProcess , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) ,pSource, 'Record' );
#      CellPutS( zError_Message , zCube_Reject , zProcess , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) ,pSource, 'Error_Message' );
#   ItemSkip;
#ENDIF;

#-- if the period does not exist in Period dimension, this record is reject
IF( Dimix('Period_YTD', pPeriod) = 0 );
   nb_reject=nb_reject+1;
   zerror_message= 'Rejected Data : ' |pPeriod | ' does not exist in dimension Period_YTD at line ' |  numbertostring(nb_lign) ;
   CellPuts(zrecord,  zCube_Reject , pSource, zProcess , zDateLoadingStart ,  'l' | numbertostring(nb_reject),'Record');
   CellPutS(zerror_message , zCube_Reject, pSource, zProcess  , zDateLoadingStart , 'l' | numbertostring(nb_reject), 'Error_Message');
   ItemSkip;
ENDIF;

#-- if the Managment_organization does not exist in management_organization dimension, this record is reject 
IF( Dimix( 'Management_Organization' , vManagement_Organization ) = 0 );
      nb_reject=nb_reject+1;
      zerror_message= vActivity | 'does not exist in Activity Dimension : Data is rejeted' ;
      CellPutS( zRecord , zCube_Reject , zProcess , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) ,pSource, 'Record' );
      CellPutS( zError_Message , zCube_Reject , zProcess , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) ,pSource, 'Error_Message' );
   Management_Organization=pSource | '_Reject';
ENDIF;

#-- if there isn't an Integration Rate for the Legal Organization, the Phase and the Period in the cube ST_Entity_Rates, the record is reject
IF(Management_Organization@<>pSource | '_Reject');
   IF( CellGetN( 'ST_Entity_Rates' , vlegal_organization , vPeriod_YTD , vPhase, 'NUM_VAR1') = 0 & CellGetN( 'ST_Entity_Rates' , vlegal_organization  
, vPeriod_YTD , vPhase, 'NUM_VAR2') = 0);
         nb_reject=nb_reject+1;
         zerror_message= ' Rejected Data : There is not an Integration Rate in the cube ST_Entity_Rates with the mapping between ' | vlegal_organizati
on  | ', ' | vPhase | ' and ' | vPeriod_YTD | ' at line ' |  numbertostring(nb_lign) ;
      CellPutS( zRecord , zCube_Reject , zProcess , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) ,pSource, 'Record' );
      CellPutS( zError_Message , zCube_Reject , zProcess , zDateLoadingStart , 'l' | NumberToString(Nb_Reject) ,pSource, 'Error_Message' );
         ItemSkip;
    ENDIF;
ENDIF;


################################################################################
#                                                               INPUT SECTION : Cube => RP_PL
################################################################################

#-- => RP_PL
if(Management_Organization @<>pSource | '_Reject');
        Management_Organization=vmanagement_Organization;
endif;

CellPutN( vValue , zCube , vActivity , vCurrency ,vGaap ,vLegal_Organization,vManagement_Organization ,vPeriod_YTD, vPhase , vIndicator);
if(Management_Organization @<>pSource | '_Reject');
    nb_load=nb_load+1;
endif;
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

zDateTimeLoadingEnd = TIMST(now,'\Y-\M-\D \h:\i:\s');
#################################################################################
#                                                                             PROCESS with PERIOD and INSTANCE
#################################################################################
zCube_Process_PP = 'ZZ_PROCESS_Detail_Instance';
pChore = 'Task5_CM_Import_CM_Data_Export_CO_Data';

pInstance=CellGetS( 'z_Admin_Param' , 'COUNTRY' , 'STR_VAR1');
#pSource =pCountry;

#pPeriod=CellGetS( 'z_Admin_Param' , 'MONTH_ACTUAL' , 'STR_VAR1');

CellPutS(zDateTimeLoadingStart , zCube_Process_PP, pChore, zProcess ,vPeriod_YTD,zDateLoadingStart, pInstance ,pSource ,'Start_date');
CellPutS(zDateTimeLoadingEnd , zCube_Process_PP, pChore, zProcess ,vPeriod_YTD,zDateLoadingStart, pInstance ,pSource ,'End_date');

CellPutS( NumberToString(nb_lign) , zCube_Process_PP , pChore , zProcess , vPeriod_YTD, zDateLoadingStart , pInstance ,pSource , 'Nb_Input_records');
CellPutS( NumberToString(nb_reject) , zCube_Process_PP , pChore , zProcess , vPeriod_YTD, zDateLoadingStart ,pInstance ,pSource , 'Nb_reject_records')
;
CellPutS( NumberToString(nb_load) , zCube_Process_PP , pChore , zProcess , vPeriod_YTD, zDateLoadingStart , pInstance ,pSource , 'Nb_load_records');

CellPutS('OK' ,zCube_Process_PP, pChore, zProcess ,vPeriod_YTD,zDateLoadingStart, pInstance ,pSource , 'Status');

IF( Nb_Lign = Nb_Load);
    CellPutS( 'OK' , zCube_Process_PP, pChore , zProcess , vPeriod_YTD, zDateLoadingStart , 
    pInstance ,pSource, 'Status');
ELSE;
    CellPutS( 'KO' , zCube_Process_PP, pChore , zProcess , vPeriod_YTD, zDateLoadingStart , 
   pInstance ,pSource , 'Status');
ENDIF; 

#################################################################################
#                                                                             DETAIL PROCESS SECTION
#################################################################################
zCube_Process = 'ZZ_PROCESS_DETAIL';

CellPutS( zDateTimeLoadingStart , zCube_Process , zProcess , zDateLoadingStart , 'Start_date');
CellPutS( zDateTimeLoadingEnd , zCube_Process , zProcess , zDateLoadingStart , 'End_date');
CellPutS( NumberToString(nb_lign) , zCube_Process , zProcess , zDateLoadingStart , 'Nb_Input_records');
CellPutS( NumberToString(nb_reject) , zCube_Process , zProcess , zDateLoadingStart , 'Nb_reject_records');
CellPutS( NumberToString(nb_load) , zCube_Process , zProcess , zDateLoadingStart , 'Nb_load_records');

IF( Nb_Lign = Nb_Load);
    CellPutS( 'OK' , zCube_Process , zProcess , zDateLoadingStart , 'Status');
ELSE;
    CellPutS( 'KO' , zCube_Process , zProcess , zDateLoadingStart , 'Status');
    ItemReject( 'Process exited with errors at ' | TIME |  ' on ' | TODAY | '=> Check cubes : zz_Process_Detail_instance and  zz_Process_Reject_instan
ce' );
ENDIF; 

#################################################################################
#                                                                             END PROCESS
#################################################################################
#endregion