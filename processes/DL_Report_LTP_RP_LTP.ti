#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#########################################
# Project : Tango 
# Created by :NEK
# Created at : 14/03/2013
# Modified by : BTA
# Modified at : 20/11/2013
# Modify reason : Process Quit, desactivate the process 
#########################################



##############///******\\\################!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# BTA - 20/11/2013 : Deactivate the process
## PROCESS NEUTRALIZED TO AVOID REFRESHING THE LTP 2013 V11 IN REPORT_LTP

     ProcessQuit;

##############///******\\\################!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

DatasourceASCIIDelimiter =';';

zCube = 'RP_LTP';
zProcess = 'DL_Report_LTP_RP_LTP';
zCubeTarget='Report_LTP';

CubeSetLogChanges(zCubeTarget, 0);

nb_lign = 0;
nb_load = 0;

zDateLoadingStart = TIMST(now,'\Y-\M-\D');
zDateTimeLoadingStart = TIMST(now,'\Y-\M-\D \h:\i:\s');
pCountry=CellGetS( 'z_Admin_Param' , 'COUNTRY' , 'STR_VAR1');

######
ExecuteProcess('DB_zz_Date_Time_loading');
######

#################################################################################
#                                                               RAZ CUBE 
#################################################################################
vViewRAZ = zCubeTarget | '_RAZ';
vSubRAZ = zCubeTarget | '_RAZ';

ViewDestroy( zCubeTarget , vViewRAZ );
vDim='Activity';
SubsetDestroy(vDim,vSubRAZ);
vDim='Currency';
SubsetDestroy(vDim,vSubRAZ);
vDim='LTP_Components';
SubsetDestroy(vDim,vSubRAZ);
vDim='Weighting';
SubsetDestroy(vDim,vSubRAZ);
vDim='Legal_Organization';
SubsetDestroy(vDim,vSubRAZ);
vDim='Period';
SubsetDestroy(vDim,vSubRAZ);
vDim='Phase';
SubsetDestroy(vDim,vSubRAZ);
vDim='Indicator_LTP';
SubsetDestroy(vDim,vSubRAZ);

ViewCreate( zCubeTarget , vViewRAZ );
ViewExtractSkipZeroesSet ( zCubeTarget , vViewRAZ , 1 );
ViewExtractSkipRuleValuesSet ( zCubeTarget , vViewRAZ , 1 );
ViewExtractSkipCalcsSet ( zCubeTarget , vViewRAZ , 1 );

# Activity -> lev0
vDim='Activity';
SubsetCreate(vDim, vSubRAZ);
i=1;
WHILE( i < DIMSIZ ( vDim )+1 );
    ElemE = DIMNM( vDim, i );
    IF ( ELLEV(vDim,ElemE)=0) ;
           SubsetElementInsert( vDim , vSubRAZ  , ElemE , 1 );
    ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCubeTarget , vViewRAZ , vDim, vSubRAZ );

# Currency -> lev0
vDim='Currency';
SubsetCreate(vDim, vSubRAZ);
i=1;
WHILE( i < DIMSIZ ( vDim )+1 );
    ElemE = DIMNM( vDim, i );
    IF ( ELLEV(vDim,ElemE)=0) ;
           SubsetElementInsert( vDim , vSubRAZ  , ElemE , 1 );
    ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCubeTarget , vViewRAZ , vDim, vSubRAZ );

# LTP_Components -> lev0
vDim='LTP_Components';
SubsetCreate(vDim, vSubRAZ);
i=1;
WHILE( i < DIMSIZ ( vDim )+1 );
    ElemE = DIMNM( vDim, i );
    IF ( ELLEV(vDim,ElemE)=0) ;
           SubsetElementInsert( vDim , vSubRAZ  , ElemE , 1 );
    ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCubeTarget  , vViewRAZ , vDim, vSubRAZ );

# Weighting -> lev0
vDim='Weighting';
SubsetCreate(vDim, vSubRAZ);
i=1;
WHILE( i < DIMSIZ ( vDim )+1 );
    ElemE = DIMNM( vDim, i );
    IF ( ELLEV(vDim,ElemE)=0) ;
           SubsetElementInsert( vDim , vSubRAZ  , ElemE , 1 );
    ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCubeTarget  , vViewRAZ , vDim, vSubRAZ );

# Legal_Organization -> lev0
vDim='Legal_Organization';
SubsetCreate(vDim, vSubRAZ);
i=1;
WHILE( i < DIMSIZ ( vDim )+1 );
    ElemE = DIMNM( vDim, i );
    IF ( ELLEV(vDim,ElemE)=0  ) ;
           SubsetElementInsert( vDim , vSubRAZ  , ElemE , 1 );
    ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCubeTarget  , vViewRAZ , vDim, vSubRAZ );

# Period -> lev0
vDim='Period';
SubsetCreate(vDim, vSubRAZ);
i=1;
WHILE( i < DIMSIZ ( vDim)+1 );
         ElemP = DIMNM( vDim , i );
         IF( ELLEV( vDim , ElemP ) = 0  );
             SubsetElementInsert( vDim, vSubRAZ , ElemP , 1 );
         ENDIF;
         i=i+1;
END;
ViewSubsetAssign( zCubeTarget , vViewRAZ , vDim, vSubRAZ );

# Phase -> lev0
vDim='Phase';
SubsetCreate(vDim, vSubRAZ);
i=1;
WHILE( i < DIMSIZ ( vDim)+1 );
         ElemP = DIMNM( vDim , i );
         IF( ELLEV( vDim , ElemP ) = 0 & ELISANC( vDim , 'LTP_ALL' , ElemP) > 0 );
             SubsetElementInsert( vDim, vSubRAZ , ElemP , 1);
         ENDIF;
         i=i+1;
END;
ViewSubsetAssign( zCubeTarget , vViewRAZ , vDim, vSubRAZ );

# Indicator_LTP -> lev0
vDim='Indicator_LTP';
SubsetCreate(vDim, vSubRAZ);
i=1;
WHILE( i < DIMSIZ ( vDim )+1 );
    ElemE = DIMNM( vDim, i );
    IF ( ELLEV(vDim,ElemE)=0) ;
           SubsetElementInsert( vDim , vSubRAZ  , ElemE , 1 );
    ENDIF;
     i=i+1;
END;
ViewSubsetAssign( zCubeTarget  , vViewRAZ , vDim, vSubRAZ );

ViewZeroOut(zCubeTarget, vViewRAZ);


#################################################################################
#                                                               Source CUBE 
#################################################################################
vView = zCube | '_copy';
vSub = zCube | '_copy';

ViewDestroy( zCube , vView );
vDim='Activity';
SubsetDestroy(vDim,vSub);
vDim='Currency';
SubsetDestroy(vDim,vSub);
vDim='LTP_Components';
SubsetDestroy(vDim,vSub);
vDim='Weighting';
SubsetDestroy(vDim,vSub);
vDim='Legal_Organization';
SubsetDestroy(vDim,vSub);
vDim='Period';
SubsetDestroy(vDim,vSub);
vDim='Phase';
SubsetDestroy(vDim,vSub);
vDim='Indicator_LTP';
SubsetDestroy(vDim,vSub);

ViewCreate( zCube , vView );
ViewExtractSkipZeroesSet ( zCube , vView , 1 );
ViewExtractSkipRuleValuesSet ( zCube , vView , 0 );
ViewExtractSkipCalcsSet ( zCube , vView , 1 );

# Activity -> lev0
vDim='Activity';
SubsetCreate(vDim, vSub);
i=1;
WHILE( i < DIMSIZ ( vDim )+1 );
    ElemE = DIMNM( vDim, i );
    IF ( ELLEV(vDim,ElemE)=0) ;
           SubsetElementInsert( vDim , vSub  , ElemE , 1 );
    ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , vView , vDim, vSub );

# Currency -> lev0
vDim='Currency';
SubsetCreate(vDim, vSub);
i=1;
WHILE( i < DIMSIZ ( vDim )+1 );
    ElemE = DIMNM( vDim, i );
    IF ( ELLEV(vDim,ElemE)=0) ;
           SubsetElementInsert( vDim , vSub  , ElemE , 1 );
    ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube , vView , vDim, vSub );

# LTP_Components -> lev0
vDim='LTP_Components';
SubsetCreate(vDim, vSub);
i=1;
WHILE( i < DIMSIZ ( vDim )+1 );
    ElemE = DIMNM( vDim, i );
    IF ( ELLEV(vDim,ElemE)=0) ;
           SubsetElementInsert( vDim , vSub  , ElemE , 1 );
    ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube  , vView , vDim, vSub );

# Weighting -> lev0
vDim='Weighting';
SubsetCreate(vDim, vSub);
i=1;
WHILE( i < DIMSIZ ( vDim )+1 );
    ElemE = DIMNM( vDim, i );
    IF ( ELLEV(vDim,ElemE)=0) ;
           SubsetElementInsert( vDim , vSub  , ElemE , 1 );
    ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube  , vView , vDim, vSub );

# Legal_Organization -> lev0
vDim='Legal_Organization';
SubsetCreate(vDim, vSub);
i=1;
WHILE( i < DIMSIZ ( vDim )+1 );
    ElemE = DIMNM( vDim, i );
    IF ( ELLEV(vDim,ElemE)=0  ) ;
           SubsetElementInsert( vDim , vSub  , ElemE , 1 );
    ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube  , vView , vDim, vSub );

# Period -> lev0
vDim='Period';
SubsetCreate(vDim, vSub);
i=1;
WHILE( i < DIMSIZ ( vDim)+1 );
         ElemP = DIMNM( vDim , i );
         IF( ELLEV( vDim , ElemP ) = 0  );
             SubsetElementInsert( vDim, vSub , ElemP , 1 );
         ENDIF;
         i=i+1;
END;
ViewSubsetAssign( zCube , vView , vDim, vSub );

# Phase -> lev0
vDim='Phase';
SubsetCreate(vDim, vSub);
i=1;
WHILE( i < DIMSIZ ( vDim)+1 );
         ElemP = DIMNM( vDim , i );
         IF( ELLEV( vDim , ElemP ) = 0 & ELISANC( vDim , 'LTP_ALL' , ElemP) > 0 );
             SubsetElementInsert( vDim, vSub , ElemP , 1);
         ENDIF;
         i=i+1;
END;
ViewSubsetAssign( zCube , vView , vDim, vSub );

# Indicator_LTP -> lev0
vDim='Indicator_LTP';
SubsetCreate(vDim, vSub);
i=1;
WHILE( i < DIMSIZ ( vDim )+1 );
    ElemE = DIMNM( vDim, i );
    IF ( ELLEV(vDim,ElemE)=0) ;
           SubsetElementInsert( vDim , vSub  , ElemE , 1 );
    ENDIF;
     i=i+1;
END;
ViewSubsetAssign( zCube  , vView , vDim, vSub );

DataSourceType='VIEW';
DatasourceNameForServer = zCube ;
DatasourceNameForClient = zCube ;
DatasourceCubeview = vView ;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****


Nb_Lign = Nb_Lign + 1;
IF( CellIsUpdateable( zCubeTarget , vActivity , vCurrency , vLTP_Components , vWeighting , vLegal_Organization , vPeriod , vPhase , vIndicator_LTP) = 
1 );
   CELLPUTN(vValue , zCubeTarget , vActivity , vCurrency , vLTP_Components , vWeighting , vLegal_Organization , vPeriod , vPhase , vIndicator_LTP);
   Nb_Load = Nb_Load + 1;
ENDIF;



#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

ViewDestroy( zCube , vView );
vDim='Activity';
SubsetDestroy(vDim,vSub);
vDim='Currency';
SubsetDestroy(vDim,vSub);
vDim='LTP_Components';
SubsetDestroy(vDim,vSub);
vDim='Weighting';
SubsetDestroy(vDim,vSub);
vDim='Legal_Organization';
SubsetDestroy(vDim,vSub);
vDim='Period';
SubsetDestroy(vDim,vSub);
vDim='Phase';
SubsetDestroy(vDim,vSub);
vDim='Indicator_LTP';
SubsetDestroy(vDim,vSub);

ViewDestroy( zCubeTarget , vViewRAZ );
vDim='Activity';
SubsetDestroy(vDim,vSubRAZ);
vDim='Currency';
SubsetDestroy(vDim,vSubRAZ);
vDim='LTP_Components';
SubsetDestroy(vDim,vSubRAZ);
vDim='Weighting';
SubsetDestroy(vDim,vSubRAZ);
vDim='Legal_Organization';
SubsetDestroy(vDim,vSubRAZ);
vDim='Period';
SubsetDestroy(vDim,vSubRAZ);
vDim='Phase';
SubsetDestroy(vDim,vSubRAZ);
vDim='Indicator_LTP';
SubsetDestroy(vDim,vSubRAZ);

zDateTimeLoadingEnd = TIMST(now,'\Y-\M-\D \h:\i:\s');


#################################################################################
#                                                                             DETAIL PROCESS SECTION
#################################################################################
zCube_Process = 'ZZ_PROCESS_DETAIL';

CellPutS( zDateTimeLoadingStart , zCube_Process , zProcess , zDateLoadingStart , 'Start_date');
CellPutS( zDateTimeLoadingEnd , zCube_Process , zProcess , zDateLoadingStart , 'End_date');
CellPutS( NumberToString(nb_lign) , zCube_Process , zProcess , zDateLoadingStart , 'Nb_Input_records');
CellPutS( NumberToString(nb_load) , zCube_Process , zProcess , zDateLoadingStart , 'Nb_load_records');

IF( Nb_Lign = Nb_Load);
    CellPutS( 'OK' , zCube_Process , zProcess , zDateLoadingStart , 'Status');
ELSE;
    CellPutS( 'KO' , zCube_Process , zProcess , zDateLoadingStart , 'Status');
    ItemReject( 'Process exited with errors at ' | TIME |  ' on ' | TODAY | '=> Check cubes : zz_Process_Detail_instance and  zz_Process_Reject_instan
ce' );
ENDIF; 

#################################################################################
#                                                                             END PROCESS
#################################################################################
CubeSetLogChanges(zCubeTarget, 1);
#endregion