#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****


#################################################################################
# Project : Tango - Decumule des données dans RP_PL_Corp
# Created by : MBO
# Created at : 18/01/2012
# Modified by : 
# Modified at : 
# Modify reason :
#################################################################################



CPT= 1;


DatasourceASCIIDelimiter =';';



################### Cubes ###################
zCube_Source = 'RP_PL_Corp';
zCube_Transco = 'TC_PHASE_CORPORATE';

################### Paramètres ###################
pPeriod = 'F_year_'|Periode;

IF (Phase @= 'BUDGET');

   pPhase = 'BUDG_TOT';
   pPhase_Transco = 'BUDG';

ELSEIF (Phase @= 'FC_1');

   pPhase = 'FC_1_TOT';
   pPhase_Transco = 'FC_1';

ELSEIF (Phase @= 'FC_2');

   pPhase = 'FC_2_TOT';
   pPhase_Transco = 'FC_2';

ENDIF;


zProcess = 'Export_vector_Mensu_Corp';

#################################################################################
#                                                              Vue source  cube RP_PL_Corp
#################################################################################

P_NAME_SOURCE = zCube_Source | '_SOURCE';
ViewDestroy( zCube_Source , P_NAME_SOURCE );
ViewCreate( zCube_Source , P_NAME_SOURCE );

################### Création du subset  dans Integration_Rate ################### 

IF( SubsetExists( 'Integration_Rate' , P_NAME_SOURCE ) =1 );
    SubsetDeleteAllElements( 'Integration_Rate' , P_NAME_SOURCE);
ELSE;
    SubsetCreate( 'Integration_Rate' , P_NAME_SOURCE );
ENDIF;
SubsetElementInsert( 'Integration_Rate' , P_NAME_SOURCE , 'NO_APP' , 1 );
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Integration_Rate' , P_NAME_SOURCE );


################### Création du subset  dans Currency ################### 

IF( SubsetExists( 'Currency' , P_NAME_SOURCE ) =1 );
    SubsetDeleteAllElements( 'Currency' , P_NAME_SOURCE);
ELSE;
    SubsetCreate( 'Currency' , P_NAME_SOURCE );
ENDIF;
SubsetElementInsert( 'Currency' , P_NAME_SOURCE , 'KEUR' , 1 );
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Currency' , P_NAME_SOURCE );


################### Création du subset  dans Phase ################### 

IF( SubsetExists( 'Phase' , P_NAME_SOURCE ) =1 );
    SubsetDeleteAllElements( 'Phase' , P_NAME_SOURCE);
ELSE;
    SubsetCreate( 'Phase' , P_NAME_SOURCE );
ENDIF;
SubsetElementInsert( 'Phase' , P_NAME_SOURCE , pPhase, 1 );
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Phase' , P_NAME_SOURCE );


################### Création du subset  dans Period ################### 

IF( SubsetExists( 'Period' , P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( 'Period' , P_NAME_SOURCE);
ELSE;
    SubsetCreate( 'Period' , P_NAME_SOURCE );
ENDIF;


SubsetElementInsert( 'Period' , P_NAME_SOURCE , pPeriod , 1 );  
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Period' , P_NAME_SOURCE );

################### Création du subset  dans  Management_Organization_Corp ################### 


IF( SubsetExists( 'Management_Organization_Corp' , P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( 'Management_Organization_Corp' , P_NAME_SOURCE);
ELSE;
     SubsetCreate( 'Management_Organization_Corp' , P_NAME_SOURCE );
ENDIF;

SubsetElementInsert( 'Management_Organization_Corp' , P_NAME_SOURCE , 'VTD' , 1 );
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Management_Organization_Corp' , P_NAME_SOURCE );

################### Création du subset  dans  Legal_Organization_Corp ################### 


IF( SubsetExists( 'Legal_Organization_Corp' , P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( 'Legal_Organization_Corp' , P_NAME_SOURCE);
ELSE;
     SubsetCreate( 'Legal_Organization_Corp' , P_NAME_SOURCE );
ENDIF;

SubsetElementInsert( 'Legal_Organization_Corp' , P_NAME_SOURCE , 'SH001' , 1 );
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Legal_Organization_Corp' , P_NAME_SOURCE);

################### Création du subset  dans  Projets ################### 


IF( SubsetExists( 'Projets' , P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( 'Projets' , P_NAME_SOURCE);
ELSE;
     SubsetCreate( 'Projets' , P_NAME_SOURCE );
ENDIF;

SubsetElementInsert( 'Projets' , P_NAME_SOURCE , 'Tot_proj' , 1 );
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Projets' , P_NAME_SOURCE);

################### Création du subset  dans  Matricules ################### 


IF( SubsetExists( 'Matricules' , P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( 'Matricules' , P_NAME_SOURCE);
ELSE;
     SubsetCreate( 'Matricules' , P_NAME_SOURCE );
ENDIF;

SubsetElementInsert( 'Matricules' , P_NAME_SOURCE , 'VTD' , 1 );
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Matricules' , P_NAME_SOURCE);

################### Création du subset  dans  Gaap ################### 


IF( SubsetExists( 'Gaap' , P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( 'Gaap' , P_NAME_SOURCE);
ELSE;
     SubsetCreate( 'Gaap' , P_NAME_SOURCE );
ENDIF;


SubsetElementInsert( 'Gaap' , P_NAME_SOURCE , 'Local_Gaap_Mgmt_tool' , 1 );
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Gaap' , P_NAME_SOURCE);

################### Création du subset  dans  Tiers ################### 


IF( SubsetExists( 'Tiers' , P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( 'Tiers' , P_NAME_SOURCE);
ELSE;
     SubsetCreate( 'Tiers' , P_NAME_SOURCE );
ENDIF;

i=1;
WHILE( i < DIMSIZ ( 'Tiers' )+1 );
   ElemM = DIMNM( 'Tiers' , i );
           IF( ELLEV( 'Tiers' , ElemM ) = 0 );
             IF (DIMIX ('Tiers',SUBST(ElemM,2,6)) <> 0 );
                  SubsetElementInsert( 'Tiers' , P_NAME_SOURCE , SUBST(ElemM,2,6) , 1 );
            ENDIF;
           ENDIF;
    i=i+1;
END;

SubsetElementInsert( 'Tiers' , P_NAME_SOURCE , 'Tot_tiers' , 1 );
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Tiers' , P_NAME_SOURCE);

################### Création du subset  dans  Indicator_Corp ################### 


IF( SubsetExists( 'Indicator_Corp' , P_NAME_SOURCE ) = 1 );
    SubsetDeleteAllElements( 'Indicator_Corp' , P_NAME_SOURCE);
ELSE;
     SubsetCreate( 'Indicator_Corp' , P_NAME_SOURCE );
ENDIF;

i=1;
WHILE( i < DIMSIZ ( 'Indicator_Corp' )+1 );
   ElemM = DIMNM( 'Indicator_Corp' , i );
   IF( ELLEV( 'Indicator_Corp' , ElemM ) = 0 );
        IF (DIMIX ('Indicator_Corp',SUBST(ElemM,1,6)) <> 0 & SUBST(ElemM,1,2) @= 'PL');
           SubsetElementInsert( 'Indicator_Corp' , P_NAME_SOURCE , SUBST(ElemM,1,6) , 1 );
        ENDIF; 
   ENDIF;
    i=i+1;
END;
ViewSubsetAssign( zCube_Source , P_NAME_SOURCE , 'Indicator_Corp' , P_NAME_SOURCE);

###################  Paramètre d'extraction ################### 

ViewExtractSkipZeroesSet ( zCube_Source , P_NAME_SOURCE , 1 );
ViewExtractSkipRuleValuesSet ( zCube_Source , P_NAME_SOURCE , 0 );
ViewExtractSkipCalcsSet ( zCube_Source , P_NAME_SOURCE , 0 );

################### Chemin du fichier cible ################### 

Export_File = CellGetS( 'z_Admin_Param' , 'REP_DATA' , 'STR_VAR1') | '\' | 'Extraction_'|pPhase_Transco|'_VECTOR_ANNEE'| '.csv';  

DatasourceNameForServer = zCube_Source ;
DatasourceCubeview = P_NAME_SOURCE ;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

#-- Export des données Vector
IF( CPT=1 );

ASCIIOUTPUT(Export_File, 'D_CA' , 'D_DP','D_CU-ANALYS','D_OAU','D_CT','D_ANA','D_VP',  'D_PE', 'D_RU', 'D_ORU', 'D_AC', 'D_FL', 'D_AU', 'D_PS', 'D_BV'
, 'D_CU','D_TO','D_GO','D_LE','D_NU', 'P_AMOUNT','P_COMMENT');


CPT=0;

ENDIF;


################## Gestion du Total Tiers ################### 

IF( vTiers @= 'Tot_tiers');
       vTiers = '' ;
ENDIF;

################### Récupération de la phase, periode et exercice vector dans le cbe de transco ################### 


pPhaseVector =CellGetS( zCube_Transco , pPhase_Transco, pPeriod,'STR_VAR1');
pExerciceVector =CellGetS( zCube_Transco , pPhase_Transco, pPeriod, 'STR_VAR2');
pPeriodVector =CellGetS( zCube_Transco , pPhase_Transco, pPeriod,'STR_VAR3');

# Mantis 1948
Currency = 'EUR';


Valeur_N = Round(StringtoNumber(vValeur));
Valeur_S = NumbertoString(Valeur_N);

################### Création du fichier ################### 

ASCIIOUTPUT( Export_File , pPhaseVector , pExerciceVector,'','','','','',  pPeriodVector, vLegal_Organization_Corp, vLegal_Organization_Corp, vIndicator_Corp, 'F99', '0LOC01', vTiers, '', Currency,'','','','',  Valeur_S,'');
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


###################  Suppression des subsets ################### 

ViewDestroy( zCube_Source , P_NAME_SOURCE );

SubsetDestroy( 'Integration_Rate' , P_NAME_SOURCE );
SubsetDestroy( 'Currency' , P_NAME_SOURCE );
SubsetDestroy( 'Phase' , P_NAME_SOURCE );
SubsetDestroy( 'Period' , P_NAME_SOURCE );
SubsetDestroy( 'Management_Organization_Corp' , P_NAME_SOURCE );
SubsetDestroy( 'Legal_Organization_Corp' , P_NAME_SOURCE );
SubsetDestroy( 'Projets' , P_NAME_SOURCE );
SubsetDestroy( 'Matricules' , P_NAME_SOURCE );
SubsetDestroy( 'Tiers' , P_NAME_SOURCE );
SubsetDestroy( 'Gaap' , P_NAME_SOURCE );
SubsetDestroy( 'Indicator_Corp' , P_NAME_SOURCE );
#endregion