#region Prolog
#########################################
# Project : Tango - Multi-instance
# Created by : AEV
# Created at : 
# Modified by :
# Modified at :
# Modify reason :
#########################################


#****Begin: Generated Statements***
#****End: Generated Statements****

Nb_Lign = 0;
Nb_Reject = 0;
Nb_Load = 0;

zDateLoadingStart = TIMST(now,'\Y-\M-\D');
zDateTimeLoadingStart = TIMST(now,'\Y-\M-\D \h:\i:\s');

pCountry = 'CM';

zDim = 'Management_Organization';
zPrefixe = pCountry | '_Mapping_';

zProcess = 'Import_CM_Management_Organization_TEMP_Other_Countries';

Source_File = '\\'|CellGetS( 'z_Admin_Param_Instance' , 'SERVER_NAME' ,'CM', 'STR_VAR1')  | CellGetS( 'z_Admin_Param_Instance' , 'REP_CO_STRU
C_EXPORT' ,'CM', 'STR_VAR1')  |  zPrefixe | zDim | '.csv';

DataSourceNameForServer = Source_File;

zDim = 'Management_Organization_TEMP';

######
#Call process DB_zz_Date_Time_loading in order to add the new day in the dimension zz_Date_Time_loading
ExecuteProcess('DB_zz_Date_Time_loading');
######


DIMENSIONSORTORDER( zDim , 'ByInput' , 'ASCENDING' , 'ByHierarchy' , 'ASCENDING' );

#ATTRDELETE( zDim , 'English' );
#ATTRINSERT( zDim , '' , 'English' , 'A' );

#ATTRDELETE( zDim , 'French' );
#ATTRINSERT( zDim , '' , 'French' , 'A' );

#ATTRDELETE( zDim , 'German' );
#ATTRINSERT( zDim , '' , 'German' , 'A' );

#ATTRDELETE( zDim , 'Dutch' );
#ATTRINSERT( zDim , '' , 'Dutch' , 'A' );

#ATTRDELETE( zDim , 'Portuguese' );
#ATTRINSERT( zDim , '' , 'Portuguese' , 'A' );


#ATTRDELETE( zDim , 'Type Contract' );
#ATTRINSERT( zDim , '' , 'Type Contract' , 'S' );

#ATTRDELETE( zDim , 'Contract Status' );
#ATTRINSERT( zDim , 'Type Contract' , 'Contract Status' , 'S' );

#ATTRDELETE( zDim , 'Start Date' );
#ATTRINSERT( zDim , 'Contract Status' , 'Start Date' , 'S' );

#ATTRDELETE( zDim , 'End date without option' );
#ATTRINSERT( zDim , 'Start Date' , 'End date without option' , 'S' );

#ATTRDELETE( zDim , 'End date with option' );
#ATTRINSERT( zDim , 'End date without option' , 'End date with option' , 'S' );

#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****


Nb_Lign = Nb_Lign + 1;

zDim = 'Management_Organization_TEMP';



IF( Level_3 @= '' & Level_2 @<> '');

       DIMENSIONELEMENTINSERT( zDim , '' , Level_0 , 'n' );
       DIMENSIONELEMENTINSERT( zDim , '' , Level_1 , 'c' );
       DIMENSIONELEMENTINSERT( zDim , '' , Level_2 , 'c' );
      Nb_Load = Nb_Load + 1;

    IF( Level_1 @<> '');
       DIMENSIONELEMENTCOMPONENTADD( zDim , Level_1 , Level_0 , 1 );
    ENDIF;
   
   IF( Level_2 @<> '' & Level_1 @<> '');
       DIMENSIONELEMENTCOMPONENTADD( zDim , Level_2 , Level_1 , 1 );
  ENDIF;


ELSEIF( Level_3 @= '' & Level_2 @= '' );

       DIMENSIONELEMENTINSERT( zDim , '' , Level_0 , 'n' );
       DIMENSIONELEMENTINSERT( zDim , '' , Level_1 , 'c' );
Nb_Load = Nb_Load + 1;


       DIMENSIONELEMENTCOMPONENTADD( zDim , Level_1 , Level_0 , 1 );

ELSE;

IF( Level_1@= '' & Level_0 @= '' );
       DIMENSIONELEMENTINSERT( zDim , '' , Level_0 , 'n' );
       DIMENSIONELEMENTINSERT( zDim , '' , Level_1 , 'c' );
Nb_Load = Nb_Load + 1;


ELSE;
       DIMENSIONELEMENTINSERT( zDim , '' , Level_0 , 'n' );
       DIMENSIONELEMENTINSERT( zDim , '' , Level_1 , 'c' );
       DIMENSIONELEMENTINSERT( zDim , '' , Level_2 , 'c' );
       DIMENSIONELEMENTINSERT( zDim , '' , Level_3 , 'c' );
Nb_Load = Nb_Load + 1;

       DIMENSIONELEMENTCOMPONENTADD( zDim , Level_1 , Level_0 , 1 );
       DIMENSIONELEMENTCOMPONENTADD( zDim , Level_2 , Level_1 , 1 );
       DIMENSIONELEMENTCOMPONENTADD( zDim , Level_3 , Level_2 , 1 );
ENDIF;

ENDIF;

Nb_Load = Nb_Load + 1;
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

zDim = 'Management_Organization_TEMP';


ATTRPUTS( Desc_English_0 , zDim , Level_0 , 'English' );
ATTRPUTS( Desc_French_0 , zDim , Level_0 , 'French' );
ATTRPUTS( Desc_Dutch_0 , zDim , Level_0 , 'Dutch' );
ATTRPUTS( Desc_German_0 , zDim , Level_0 , 'German' );
ATTRPUTS( Desc_Portuguese_0 , zDim , Level_0 , 'Portuguese' );
ATTRPUTS( Att_Year , zDim , Level_0 , 'End date without option' );
ATTRPUTS( Att_Type_Contract , zDim , Level_0 , 'Type Contract' );
ATTRPUTS( Att_Contract_Status, zDim , Level_0 , 'Contract Status' );
ATTRPUTS( Att_End_Date , zDim , Level_0 , 'End date with option' );
ATTRPUTS( Att_Start_Date , zDim , Level_0 , 'Start Date' );


     Level_1 = ELPAR( zDim , Level_0 , 1 ) ;
     IF( Level_1 @<> ''  & Level_1 @<> 'VTD_Corp' );
          ATTRPUTS( Desc_English_1 , zDim , Level_1 , 'English' );
          ATTRPUTS( Desc_French_1 , zDim , Level_1 , 'French' );
          ATTRPUTS( Desc_Dutch_1 , zDim , Level_1 , 'Dutch' );
          ATTRPUTS( Desc_German_1 , zDim , Level_1 , 'German' );
          ATTRPUTS( Desc_Portuguese_1 , zDim , Level_1 , 'Portuguese' );

          Level_2 = ELPAR( zDim , Level_1 , 1 );
          IF( Level_2 @<> ''  & Level_2 @<> 'VTD_Corp' );
               ATTRPUTS( Desc_English_2 , zDim , Level_2 , 'English' );
               ATTRPUTS( Desc_French_2 , zDim , Level_2 , 'French' );
               ATTRPUTS( Desc_Dutch_2 , zDim , Level_2 , 'Dutch' );
               ATTRPUTS( Desc_German_2 , zDim , Level_2 , 'German' );
               ATTRPUTS( Desc_Portuguese_2 , zDim , Level_2 , 'Portuguese' );

               Level_3 = ELPAR( zDim , Level_2 , 1 );
               IF( Level_3 @<> '' & Level_3 @<> 'VTD_Corp' );
                    ATTRPUTS( Desc_English_3 , zDim , Level_3 , 'English' );
                    ATTRPUTS( Desc_French_3 , zDim , Level_3 , 'French' );
                    ATTRPUTS( Desc_Dutch_3 , zDim , Level_3 , 'Dutch' );
                    ATTRPUTS( Desc_German_3 , zDim , Level_3 , 'German' );
                    ATTRPUTS( Desc_Portuguese_3 , zDim , Level_3 , 'Portuguese' );
               ENDIF;
          ENDIF;
ENDIF;
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****




zDateTimeLoadingEnd = TIMST(now,'\Y-\M-\D \h:\i:\s');

#################################################################################
#                                                                             PROCESS with PERIOD and INSTANCE
#################################################################################
zCube_Process_PP = 'ZZ_PROCESS_Detail_Instance';

pChore = 'Task5_CM_Import_CM_Data_Export_CO_Data';

pSource = CellGetS( 'z_Admin_Param' , 'COUNTRY' , 'STR_VAR1');

pPeriod = CellGetS( 'z_Admin_Param' , 'MONTH_ACTUAL' , 'STR_VAR1');

CellPutS( zDateTimeLoadingStart , zCube_Process_PP , pChore , zProcess , pPeriod , zDateLoadingStart,  pSource, 'CORE_MODEL' ,'Start_date' );
CellPutS( zDateTimeLoadingEnd , zCube_Process_PP , pChore , zProcess , pPeriod , zDateLoadingStart ,  pSource, 'CORE_MODEL' , 'End_date' );
CellPutS( 'OK' , zCube_Process_PP , pChore , zProcess , pPeriod , zDateLoadingStart ,  pSource, 'CORE_MODEL' , 'Status' );
CellPutS( NumberToString( Nb_Lign ) , zCube_Process_PP, pChore , zProcess , pPeriod , zDateLoadingStart ,  pSource, 'CORE_MODEL' , 'Nb_Input_Records' 
);
CellPutS( NumberToString( Nb_Reject ) , zCube_Process_PP , pChore, zProcess , pPeriod , zDateLoadingStart,  pSource, 'CORE_MODEL' , 'Nb_Reject_Records
' );
CellPutS( NumberToString( Nb_Load ) , zCube_Process_PP, pChore , zProcess , pPeriod , zDateLoadingStart ,  pSource, 'CORE_MODEL' ,'Nb_Load_Records' );
#endregion