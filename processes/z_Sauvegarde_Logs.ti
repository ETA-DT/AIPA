#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#########################################
# Project : Tango - Save Logs en Cumul & Compress
# Created by : ANONE
# Created at : 08/10/2013
# Modified by :
# Modified at :
# Modify reason :
#########################################


#-- Création des variables nécessaires à la consignation des informations
pSource = 'CORE_MODEL';
zDateLoadingStart = TIMST(now,'\Y-\M-\D');
zDateTimeLoadingStart = TIMST(now,'\Y-\M-\D \h:\i:\s');
zCube_Process_PP = 'ZZ_PROCESS_Detail_Instance';
pChore='z_Sauvegarde_a_chaud';
zProcess = GetProcessName();
pPeriod = CellGetS( 'z_Admin_Param' , 'MONTH_ACTUAL' , 'STR_VAR1');
pCountry =  CellGetS( 'z_Admin_Param' , 'COUNTRY' , 'STR_VAR1');
zCube_Process='ZZ_PROCESS_DETAIL';

#-- Mise à jour de la dimension zz_Date_Time_Loading
ExecuteProcess('DB_zz_Date_Time_loading');

#-- Data Input pour le cube ZZ_PROCESS_Detail_Instance
CellPutS(zDateTimeLoadingStart , zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,'Start_date');
CellPutS('KO' ,zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,  'Status');

#-- Data Input pour le cube ZZ_PROCESS_Detail
CellPutS(zDateTimeLoadingStart, zCube_Process, zProcess, zDateLoadingStart, 'Start_date');
CellPutS('KO' , zCube_Process, zProcess ,zDateLoadingStart , 'Status');


#-- Création des variables nécessaires
sDirectoryToSave = CellGetS('z_Admin_Param', 'REP_LOG', 'STR_VAR1') | '\';
sDirectoryTarget = CellGetS('z_Admin_Param', 'REP_SAUVEGARDE', 'STR_VAR1') | '\';
sDirectoryTemp = CellGetS('z_Admin_Param', 'REP_TEMP', 'STR_VAR1') | '\';
sDirectoryZip = '"C:\Program Files\7-Zip\7z.exe"';
sArchiveName = sDirectoryTarget | 'Sauvegarde_Logs.zip';
sListFileType = sDirectoryTemp | 'SauvegardeLogsList.txt';
sServerName = CellGetS('z_Admin_Param', 'SERVER_NAME', 'STR_VAR1') | '\';
sCountry = CellGetS('z_Admin_Param', 'Country', 'STR_VAR2') | '\';


#-- Permet de supprimer le délimiteur du champ dans le batch
DatasourceASCIIQuoteCharacter='';

#-- Création d'un fichier list.txt contenant l'ensemble des éléments à inclure dans l'archive
#-- Déclaration d'une liste des types d'éléments à sauvegarder
ASCIIOUTPUT( sListFileType, sDirectoryToSave | '*.*');

#-- Création d'un fichier .cmd contenant la requête pour sauvegarder l'application
# -- Methode de compression MX1 correspondant au mode Le plus Rapide sur 7zip
# -- Compression du fichier en .zip

# -- On se place sur le disque C:
ASCIIOUTPUT( sDirectoryTemp | 'SauvegardeLogs.cmd', 'C:');

# -- Compression Method
#Différents paramètres:
# -mx0: Don't compress at all. This is called "copy mode."
# -mx1: Low compression.   This is called "fastest" mode.
# -mx3: Fast compression mode.   Will automatically set various parameters.
# -mx5: Same as above, but "normal."
# -mx7: This means "maximum" compression.
# -mx9: This means "ultra" compression.
ASCIIOUTPUT( sDirectoryTemp | 'SauvegardeLogs.cmd', sDirectoryZip | ' a -tzip ' | sArchiveName | ' @' | sListFileType | ' -mx1');

#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

#-- Exécution de la commande Sauvegarde de l'application
ExecuteCommand(sDirectoryTemp | 'SauvegardeLogs.cmd',1);

#-- Suppression du fichier Liste des éléments
ASCIIDELETE( sDirectoryTemp | 'SauvegardeLogsList.txt');

#-- Suppression du fichier .cmd contenant la requête pour sauvegarder l'application
ASCIIDELETE( sDirectoryTemp | 'SauvegardeLogs.cmd');


########################## CONSIGNATION DES INFORMATIONS ######################

#-- Consignation des informations dans les cubes 
zDateTimeLoadingEnd = TIMST(now,'\Y-\M-\D \h:\i:\s');

#-- Data Input pour le cube ZZ_PROCESS_Detail_Instance
CellPutS(zDateTimeLoadingStart , zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,'Start_date');
CellPutS(zDateTimeLoadingEnd , zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,'End_date');
CellPutS('1', zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,'Nb_Input_records');
CellPutS('1', zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry ,psource, 'Nb_load_records');
CellPutS('OK' ,zCube_Process_PP, pChore, zProcess ,pPeriod,zDateLoadingStart, pCountry , psource,  'Status');

#-- Data Input pour le cube ZZ_PROCESS_Detail
CellPutS(zDateTimeLoadingStart, zCube_Process, zProcess, zDateLoadingStart, 'Start_date');
CellPutS(zDateTimeLoadingEnd, zCube_Process, zProcess, zDateLoadingStart, 'End_date');
CellPutS('1', zCube_Process, zProcess, zDateLoadingStart, 'Nb_Input_records');
CellPutS('1', zCube_Process, zProcess, zDateLoadingStart, 'Nb_load_records');
CellPutS('OK' , zCube_Process, zProcess ,zDateLoadingStart , 'Status');

#endregion