#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#########################################
# Project : Copie de (CAFOP - CAFOP_bef_mgmt_fees) vers l'indicateur MF
# Created by : RSJC
# Created at : 30/09/2021
# Modified by : 
# Modified at : 
# Modify reason :
#########################################


#######################################################
# -- Déclarations des variables

vCubeSource = 'RP_PL' ;
vViewName    = GetProcessName();
vSubsetName = GetProcessName();

vViewNamePurge = GetProcessName() | '_Purge'; 
vSubsetNamePurge = GetProcessName() | '_Purge'; 

vCubeCible = 'RP_PL'; 

# -- Récupération de la phase dans le cube Z_admin_Param

IF(pPhase@='BUDGET_FC');
	ParamPhase = CellGetS( 'z_Admin_Param' , 'TYPE_PHASE' , 'STR_VAR1');
ENDIF;


# -- Gestion des phases

IF(pPhase @= 'ACTUAL');
	pPhase = 'ACT';
ELSEIF(pPhase @=  'BUDGET_FC');
	IF (ParamPhase @= 'Budget'); 
		pPhase = 'BUDG_VC';
	ELSEIF (ParamPhase @= 'Forecast1'); 
		pPhase = 'FC_1_VC';
	ELSEIF (ParamPhase @= 'Forecast2'); 
		pPhase = 'FC_2_VC';
	ENDIF;
ELSE;
pPhase = pPhase;
ENDIF;


# -- Gestion des périodes
IF(pPeriod @= 'default');
	IF(pPhase @= 'ACTUAL' % pPhase @= 'ACT');
		pPeriod= CellGetS( 'z_Admin_Param' , 'MONTH_ACTUAL' , 'STR_VAR1');

	ELSEIF (ParamPhase @= 'Budget'); 
		pPeriod= CellGetS( 'z_Admin_Param' , 'YEAR_BUDGET_FORECAST' , 'STR_VAR1');
		pPhase = 'BUDG_VC';

	ELSEIF (ParamPhase @= 'Forecast1'); 
		pPeriod= CellGetS( 'z_Admin_Param' , 'YEAR_BUDGET_FORECAST' , 'STR_VAR1');
		pPhase = 'FC_1_VC';

	ELSEIF (ParamPhase @= 'Forecast2'); 
		pPeriod= CellGetS( 'z_Admin_Param' , 'YEAR_BUDGET_FORECAST' , 'STR_VAR1');
		pPhase = 'FC_2_VC';
	ENDIF; 

ELSE;
pPeriod = pPeriod;
ENDIF;


#######################################################
# -- Création de la vue source 

ViewDestroy (vCubeSource , vViewName );
ViewCreate (vCubeSource , vViewName );

vDim = 'Activity';
SubsetDestroy ( vDim, vSubsetName ); 
SubsetCreate ( vDim, vSubsetName); 
i=1; 
imax = Dimsiz (vDim); 
while (i<=imax); 
	vCurrentElement = DimNm (vDim, i); 
	IF (ELLEV (vDim, vCurrentElement)=0); 
		SubsetElementInsert ( vDim, vSubsetName, vCurrentElement, 1);
	ENDIF; 
	i=i+1; 
end; 
ViewSubsetAssign ( vCubeSource, vViewName,  vDim, vSubsetName );


vDim= 'Currency'; 
SubsetDestroy ( vDim, vSubsetName ); 
SubsetCreate ( vDim, vSubsetName); 
SubsetElementInsert ( vDim, vSubsetName, 'EUR', 1);
SubsetElementInsert ( vDim, vSubsetName, 'LCL', 1); 
ViewSubsetAssign ( vCubeSource , vViewName,  vDim, vSubsetName ); 

vDim= 'Gaap'; 
SubsetDestroy ( vDim, vSubsetName ); 
SubsetCreate ( vDim, vSubsetName); 
SubsetElementInsert ( vDim, vSubsetName, 'Local_Gaap', 1);
SubsetElementInsert ( vDim, vSubsetName, 'IFRS_restatements', 1);
ViewSubsetAssign ( vCubeSource , vViewName,  vDim, vSubsetName );  

vDim='Integration_Rate';
SubsetDestroy ( vDim, vSubsetName ); 
SubsetCreate ( vDim, vSubsetName); 
SubsetElementInsert ( vDim, vSubsetName, 'APP', 1); 
SubsetElementInsert ( vDim, vSubsetName, 'NO_APP', 1); 
ViewSubsetAssign ( vCubeSource , vViewName,  vDim, vSubsetName ); 


vDim= 'Legal_Organization';
SubsetDestroy ( vDim, vSubsetName ); 
SubsetCreate ( vDim, vSubsetName); 
i=1; 
imax = Dimsiz (vDim); 
while (i<=imax); 
	vCurrentElement = DimNm (vDim, i); 
	IF (ELLEV (vDim, vCurrentElement)=0); 
		SubsetElementInsert ( vDim, vSubsetName, vCurrentElement, 1);
	ENDIF; 
	i=i+1; 
end; 
ViewSubsetAssign ( vCubeSource, vViewName,  vDim, vSubsetName ); 

vDim= 'Management_Organization'; 
SubsetDestroy ( vDim, vSubsetName ); 
SubsetCreate ( vDim, vSubsetName); 
SubsetElementInsert ( vDim, vSubsetName, 'VTD_Corp', 1); 
ViewSubsetAssign ( vCubeSource, vViewName,  vDim, vSubsetName ); 



vDim= 'Period'; 
SubsetDestroy ( vDim, vSubsetName ); 
SubsetCreate ( vDim, vSubsetName); 
i=1; 
imax =DimSiz (vDim); 
While (i<=imax); 
	vCurrentElement = DimNm (vDim, i); 
	IF (ELLEV (vDim, vCurrentElement)= 0 & ELISANC (vDim, pPeriod, vCurrentElement)=1);
		SubsetElementInsert ( vDim, vSubsetName, vCurrentElement, 1); 
	ELSEIF (ELLEV (vDim, pPeriod)= 0);
		SubsetElementInsert ( vDim, vSubsetName, pPeriod, 1); 
	ENDIF; 
	i=i+1; 
END; 
ViewSubsetAssign ( vCubeSource , vViewName,  vDim, vSubsetName ); 


vDim= 'Phase'; 
SubsetDestroy ( vDim, vSubsetName ); 
SubsetCreate ( vDim, vSubsetName); 
SubsetElementInsert ( vDim, vSubsetName, pPhase, 1); 
ViewSubsetAssign ( vCubeSource , vViewName,  vDim, vSubsetName );  

vDim= 'Indicator'; 
SubsetDestroy ( vDim, vSubsetName ); 
SubsetCreate ( vDim, vSubsetName); 
#SubsetElementInsert ( vDim, vSubsetName, 'CAFOP', 1);
#SubsetElementInsert ( vDim, vSubsetName, 'CAFOP_bef_mgmt_fees', 1);
SubsetElementInsert ( vDim, vSubsetName, 'Ind_fi_pl_nat', 1);
ViewSubsetAssign ( vCubeSource , vViewName,  vDim, vSubsetName );

# -- 3 conditons
ViewExtractSkipZeroesSet( vCubeSource , vViewName , 1 );  
ViewExtractSkipRuleValuesSet( vCubeSource , vViewName , 0 ); 
ViewExtractSkipCalcsSet( vCubeSource , vViewName , 0 ); 

#######################################################
# -- Définition de la source de données 

DataSourceType = 'View' ;
DatasourceCubeview = vViewName ;
DatasourceASCIIQuoteCharacter='';
DatasourceASCIIDelimiter=';' ;


#######################################################
# -- Création de la vue cible
ViewDestroy (vCubeCible, vViewNamePurge );
ViewCreate (vCubeCible, vViewNamePurge );

vDim= 'Currency'; 
SubsetDestroy ( vDim, vSubsetNamePurge ); 
SubsetCreate ( vDim, vSubsetNamePurge); 
SubsetElementInsert ( vDim, vSubsetNamePurge, 'EUR', 1);
SubsetElementInsert ( vDim, vSubsetNamePurge, 'LCL', 1); 
ViewSubsetAssign ( vCubeCible , vViewNamePurge,  vDim, vSubsetNamePurge );  

vDim= 'Gaap'; 
SubsetDestroy ( vDim, vSubsetNamePurge ); 
SubsetCreate ( vDim, vSubsetNamePurge); 
SubsetElementInsert ( vDim, vSubsetNamePurge, 'Delta_vector_input', 1);
SubsetElementInsert ( vDim, vSubsetNamePurge, 'Delta_vector_IFRS_restatements', 1); 
ViewSubsetAssign ( vCubeCible , vViewNamePurge,  vDim, vSubsetNamePurge );  

vDim='Integration_Rate';
SubsetDestroy ( vDim, vSubsetNamePurge ); 
SubsetCreate ( vDim, vSubsetNamePurge); 
SubsetElementInsert ( vDim, vSubsetNamePurge, 'APP', 1); 
SubsetElementInsert ( vDim, vSubsetNamePurge, 'NO_APP', 1); 
ViewSubsetAssign ( vCubeCible , vViewNamePurge,  vDim, vSubsetNamePurge );  


vDim= 'Legal_Organization'; 
SubsetDestroy ( vDim, vSubsetNamePurge ); 
SubsetCreate ( vDim, vSubsetNamePurge); 
i=1; 
imax = Dimsiz (vDim); 
while (i<=imax); 
	vCurrentElement = DimNm (vDim, i); 
	IF (ELLEV (vDim, vCurrentElement)=0); 
		SubsetElementInsert ( vDim, vSubsetNamePurge, vCurrentElement, 1);
	ENDIF; 
	i=i+1; 
END; 
ViewSubsetAssign ( vCubeCible , vViewNamePurge,  vDim, vSubsetNamePurge );  

vDim= 'Management_Organization'; 
SubsetDestroy ( vDim, vSubsetNamePurge ); 
SubsetCreate ( vDim, vSubsetNamePurge); 
SubsetElementInsert ( vDim, vSubsetNamePurge, 'NA', 1); 
ViewSubsetAssign ( vCubeCible , vViewNamePurge,  vDim, vSubsetNamePurge ); 

vDim= 'Period'; 
SubsetDestroy ( vDim, vSubsetNamePurge ); 
SubsetCreate ( vDim, vSubsetNamePurge); 
i=1; 
imax =DimSiz (vDim); 
While (i<=imax); 
	vCurrentElement = DimNm (vDim, i); 
	IF (ELLEV (vDim, vCurrentElement)= 0 & ELISANC (vDim, pPeriod, vCurrentElement)=1); 
		SubsetElementInsert ( vDim, vSubsetNamePurge, vCurrentElement, 1);
	ELSEIF (ELLEV (vDim, pPeriod)= 0);
		SubsetElementInsert ( vDim, vSubsetNamePurge, pPeriod, 1); 
	ENDIF; 
	i=i+1; 
END; 
ViewSubsetAssign ( vCubeCible , vViewNamePurge,  vDim, vSubsetNamePurge );  

vDim= 'Phase'; 
SubsetDestroy ( vDim, vSubsetNamePurge ); 
SubsetCreate ( vDim, vSubsetNamePurge); 
SubsetElementInsert ( vDim, vSubsetNamePurge, pPhase, 1); 
ViewSubsetAssign ( vCubeCible , vViewNamePurge,  vDim, vSubsetNamePurge );  

vDim= 'Indicator'; 
SubsetDestroy ( vDim, vSubsetNamePurge ); 
SubsetCreate ( vDim, vSubsetNamePurge); 
SubsetElementInsert ( vDim, vSubsetNamePurge, 'MF', 1); 
ViewSubsetAssign ( vCubeCible , vViewNamePurge,  vDim, vSubsetNamePurge );  


#######################################################
ViewZeroOut (vCubeCible, vViewNamePurge);
#######################################################

#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

	
CAFOP_MF = CellGetN(vCubeSource, Activity, Currency, Gaap, Integration_Rate, Legal_Organization, Management_Organization, Period, Phase,'CAFOP'); 
CAFOP_bef_mgmt_fees_MF = CellGetN(vCubeSource, Activity, Currency, Gaap, Integration_Rate, Legal_Organization, Management_Organization, Period, Phase,'CAFOP_bef_mgmt_fees'); 

#ValeurMF = CAFOP_MF - valeur;
ValeurMF = CAFOP_MF - CAFOP_bef_mgmt_fees_MF;


IF(Gaap @= 'Local_Gaap');
	Gaap = 'Delta_vector_input'; 
	CellPutN (ValeurMF, vCubeCible, Activity, Currency, Gaap,  Integration_Rate, Legal_Organization, 'NA', Period, Phase, 'MF'); 

ELSEIF(Gaap @= 'IFRS_restatements');
	Gaap= 'Delta_vector_IFRS_restatements';
	CellPutN (ValeurMF, vCubeCible, Activity, Currency, Gaap, Integration_Rate, Legal_Organization, 'NA', Period, Phase, 'MF');
		
ENDIF;
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


#######################################################
# -- Destruction de la vue source 
# -- Destruction de la vue et des sous ensembles 

ViewDestroy(vCubeSource, vViewName );
t= 1;
WHILE( TABDIM(vCubeSource, t ) @<>'');
	SubsetDestroy( TABDIM( vCubeSource, t ) , vViewName );
	t = t + 1;
END;

#######################################################
# -- Destruction de la vue cible
# -- Destruction de la vue et des sous ensembles

ViewDestroy( vCubeCible , vViewNamePurge  );
m = 1;
WHILE( TABDIM(vCubeCible , m ) @<>'');
	SubsetDestroy( TABDIM( vCubeCible , m ) , vViewNamePurge );
	m = m + 1;
END;
#endregion