#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****


#########################################
# Project : Tango - Data Load -> Storage Cube ST_VECTOR_YTD
# Created by : MBO
# Created at : 30/11/2011
# Modified by : BTA
# Modified at : 29/09/2016
# Modify reason : New Extractor Vector : The name of the file changes 
#########################################

zCubeTC = 'TC_PHASE_VTD_VECTOR';
zCube = 'ST_Vector_YTD';
zCubePar = 'ST_PARTNER_VECTOR_YTD';

P_NAME_RAZ =  zCube | '_RAZ';
P_NAME_RAZ2 = zCubePar | '_RAZ';

zSource = 'VTD_Vector';
CPT = 1;

# -- BTA 29/09/2016 : Modification due to the migration of Vector 
vBudget = 'Budget' ; 
vForecast1 = 'Forecast_1' ; 
vForecast2 = 'Forecast_2' ; 

# -- Check the name of the phase input in parameter 
IF( pPhase @<> vBudget & pPhase @<> vForecast1 & pPhase @<> vForecast2 ); 

	#-- The Phase specified is not valid
	ItemReject( 'The value ' | pPhase | ' is invalid for pPhase parameter. Must be ' | vBudget  | ', ' | vForecast1  | ' or ' |  vForecast2 );
	ProcessQuit;

ENDIF;



# -- BTA 13/12/2016 : Modification du repertoire source : REP_DATA_VECTOR
Source_File = CellGetS( 'z_Admin_Param' , 'REP_DATA_VECTOR' , 'STR_VAR1') | '\Data_P&L_MB_' | pPhase  | '_' |  zSource | '.csv';
DataSourceNameForServer = Source_File;

IF (FileExists (Source_File) =0);
     ItemReject(  DataSourceNameForServer | ' is not find' );
     ProcessQuit;
ENDIF;

######################### SUBSET ST_Vector_YTD #########################
#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_RAZ ) = 1 );
     SubsetDeleteAllElements( 'Phase' , P_NAME_RAZ );
ELSE;
    SubsetCreate( 'Phase' , P_NAME_RAZ );
ENDIF;

#-- Create subset in Period_YTD
IF( SubsetExists( 'Period_YTD' , P_NAME_RAZ ) = 1 );   
     SubsetDeleteAllElements( 'Period_YTD' , P_NAME_RAZ );
ELSE;
    SubsetCreate( 'Period_YTD' , P_NAME_RAZ );
ENDIF;


######################### SUBSET ST_PARTNER_VECTOR_YTD #########################
#-- Create subset in Phase
IF( SubsetExists( 'Phase' , P_NAME_RAZ2 ) = 1 );
     SubsetDeleteAllElements( 'Phase' , P_NAME_RAZ2 );
ELSE;
    SubsetCreate( 'Phase' , P_NAME_RAZ2 );
ENDIF;

#-- Create subset in Period_YTD
IF( SubsetExists( 'Period_YTD' , P_NAME_RAZ2 ) = 1 );   
     SubsetDeleteAllElements( 'Period_YTD' , P_NAME_RAZ2 );
ELSE;
    SubsetCreate( 'Period_YTD' , P_NAME_RAZ2 );
ENDIF;



#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****



IF( CPT = 1 );
    i=1;
    WHILE( i < DIMSIZ ( 'Period' ) + 1 );
    ElemP = DIMNM( 'Period' , i );
        IF( ELISANC( 'Period' , SUBST( Vector_Exercice , 1 , 4 ) , ElemP ) > 0 
        & ELLEV( 'Period' , ElemP ) = 0) ;
            
            vPhase = CellGetS( zCubeTC , Vector_Phase , Vector_Exercice , ElemP , 'STR_VAR1' );
            vPeriod = CellGetS( zCubeTC , Vector_Phase , Vector_Exercice , ElemP , 'STR_VAR2' );

######### Insert element in subset Phase
            SubsetElementInsert( 'Phase' , P_NAME_RAZ , vPhase , 1 );
            SubsetElementInsert( 'Phase' , P_NAME_RAZ2 , vPhase , 1 );


######### Insert element in subset Period_YTD
            IF( SUBST( vPeriod , 1 , 6 )  @= 'F_Year' );
                SubsetElementInsert( 'Period_YTD' , P_NAME_RAZ , vPeriod , 1 );
                SubsetElementInsert( 'Period_YTD' , P_NAME_RAZ2 , vPeriod , 1 );
            ELSE;
                SubsetElementInsert( 'Period_YTD' , P_NAME_RAZ , vPeriod | '_YTD' , 1 );
                SubsetElementInsert( 'Period_YTD' , P_NAME_RAZ2 , vPeriod | '_YTD' , 1 );
            ENDIF;

        ENDIF;
        i=i+1;
    END;

    CPT = 0;

ENDIF;






#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****










#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****



ExecuteProcess('DL_ST_VECTOR_YTD_MB_PL_STEP2' , 'pPhase', pPhase );
#endregion