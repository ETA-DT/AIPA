#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****


#########################################
# Project : Tango - Core Model
# Created by : ASZ - Anone
# Created at : 02/05/2016
# Modified by : BTA 
# Reason : Refonte de la sécurité + revue de la vue source qui était statique + ajout des commentaires
# Date : 12/01/2017
# Modified by : RSJC
# Reason : Ajout droits groupe User_Strategy
# Date : 10/06/2021
#########################################

#################################################################################
#                                                               Déclaration des variables
#################################################################################

zCube = '}ElementSecurity_LTP_Components';
zView = GetProcessName() ; 
zSubset = GetProcessName() ; 

#################################################################################
#                                                               Source CUBE
#################################################################################

# -- Destruction et Construction de la vue
ViewDestroy( zCube , zView );
ViewCreate( zCube, zView );

# -- Propriétés de la vue 
ViewExtractSkipZeroesSet ( zCube , zView  , 0 );
ViewExtractSkipRuleValuesSet ( zCube , zView  , 1 );
ViewExtractSkipCalcsSet ( zCube , zView  , 0 );

# -- Source du processus dynamique
DatasourceNameForServer = zCube ;
DatasourceCubeview = zView;


#################################################################################
#                                                               Clear Cube
#################################################################################

CubeClearData( zCube ) ;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****



# -- Ajout des modifications liées à la refonte de la sécurité

IF( Groups @= 'Admin' % Groups @= 'DataAdmin' % Groups @= 'SecurityAdmin' ); 
	ItemSkip;
ENDIF;


# -- Pour tous les indicator les droits sont en WRITE pour les groupes Corporate Plus ; Financial Controller et Data LTP Writer 
## 10/06/2021 RSJC Ajout droits User_STrategy
## IF( Groups @= 'Corporate_Plus' % Groups @= 'Financial_Controller' % Groups @= 'Data_LTP_Writer' ); 
IF( Groups @= 'Corporate_Plus' % Groups @= 'Financial_Controller' % Groups @= 'Data_LTP_Writer' % Groups @= 'User_Strategy' ); 

	CellPutS( 'WRITE' , zCube , LTP_Components, Groups ); 

ENDIF;

# -- Pour tous les indicator les droits sont en READ pour les groupes Data LTP Reader et R_VTD_CORP 
IF( Groups @= 'Data_LTP_Reader' % Groups @= 'R_VTD_CORP' ); 

	CellPutS( 'READ' , zCube , LTP_Components , Groups ); 

ENDIF;

# -- Pour les éléments suivants et les groupes LTP Reader & Writer, alors ne pas mettre de sécurité.
IF( ( Groups @= 'Data_LTP_Reader' % Groups @= 'Data_LTP_Writer' % Groups @= 'User_Strategy' ) & 
( LTP_Components @= 'TOT_LTP' % LTP_Components @= 'Corp_allocation' % LTP_Components @= 'TOT_LTP_bef_Corp_allocation' % LTP_Components @= 'Transfo_Plan_Disp_Corp' ) );

	CellPutS( ''  , zCube , LTP_Components , Groups ); 

ENDIF;

# --  Fin Ajout des modifications liées à la refonte de la sécurité



#RSJC 24/11/2022 Ajout droit TOT_LTP_bef_Corp_allocation au groupe LTP_Component_Disposal_Adj (exceptionnelement pour la DAF France - validé par J. NAVES)

IF( ( Groups @= 'LTP_Component_Disposal_Adj') & (LTP_Components @= 'TOT_LTP_bef_Corp_allocation' % LTP_Components @= 'Transfo_Plan_Disp_Corp' ) );

	CellPutS( 'READ' , zCube , LTP_Components , Groups ); 

ENDIF;



IF(SUBST(Groups,1,2)@<>'R_' & SUBST(Groups,1,2)@<>'W_' & Groups@<>'Cube_All' & Groups@<>'Cube_Country_Project_Mgr' & Groups@<>'Cube_User_Corporate_TM1_XLS' 
& Groups@<>'Cube_User_TM1_Web' & Groups@<>'Cube_User_TM1_XLS' & Groups@<>'Report_All' & Groups@<>'Report_Corporate_Controller' & Groups@<>'Report_User_Corporate_TM1_XLS' 
& Groups@<>'Report_User_TM1_Web' & Groups@<>'Report_User_TM1_XLS');

	ItemSkip;

ENDIF;


IF(Groups@='R_Corporate');

	CellPutS('READ', zCube , LTP_Components, Groups );
	ItemSkip;

ELSEIF(Groups@='W_Corporate');

	CellPutS('WRITE', zCube , LTP_Components, Groups );
	ItemSkip;

ENDIF;


IF(LTP_Components@='TOT_LTP' % LTP_Components@='Corp_allocation' % LTP_Components@='TOT_LTP_bef_Corp_allocation' % LTP_Components@='Transfo_Plan_Disp_Corp');

	Itemskip;

ENDIF;


IF(ELISPAR('LTP_Components', 'TOT_LTP', LTP_Components)=1 & ELLEV('LTP_Components', LTP_Components)=0);
	ItemSkip;
ENDIF;

vVal='';

IF(Groups@='Cube_All' % Groups@='Cube_Country_Project_Mgr' % Groups@='Cube_User_Corporate_TM1_XLS' % Groups@='Cube_User_TM1_Web' % Groups@='Cube_User_TM1_XLS' % Groups@='Report_All' % Groups@='Report_Corporate_Controller' % Groups@='Report_User_Corporate_TM1_XLS' % Groups@='Report_User_TM1_Web' % Groups@='Report_User_TM1_XLS');
	IF(LTP_Components@='Zero_Growth_Plan_Country' % LTP_Components@='ZGP&Action&Disp_Plans');
		itemskip;
	ELSE;
		vVal='WRITE';
	ENDIF;
ENDIF;

IF(SUBST(Groups,1,2)@='R_');
	vVal='READ';
ENDIF;

IF(SUBST(Groups,1,2)@='W_');
	vVal='WRITE';
ENDIF;

CellPutS(vVal, zCube , LTP_Components , Groups );



#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****




# -- Destruction de la vue source 
ViewDestroy( zCube , zView );
#endregion